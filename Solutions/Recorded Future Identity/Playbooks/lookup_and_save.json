{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
		"comment": "",
		"author": "Dmytro Branitskyi, Recorded Future"
	},
    "parameters": {
         "PlaybookName": {
            "defaultValue": "Recorded_Future_Identity_Lookup_And_Save",
            "type": "string"
        }
    },
    "variables": {
        "LogAnalyticsDataCollectorConnectionName": "[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
        "RecordedFutureIdentityConnectionName": "[concat('recordedfutureidenti-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('LogAnalyticsDataCollectorConnectionName'))]",
				"[resourceId('Microsoft.Web/connections', variables('RecordedFutureIdentityConnectionName'))]"
			],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "lookup_lookback_range": {
                                            "type": "integer"
                                        },
                                        "lookup_results_loganalytics_custom_log": {
                                            "type": "string"
                                        },
                                        "risky_user_email": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Credential_Lookup_-_Look_up_credential_data_for_one_or_more_users": {
                            "runAfter": {
                                "Initialize_-_Default_name_for_Lookup_results_Log_Analytics_custom_log": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "filter": {
                                        "first_downloaded_gte": "@{formatDateTime(addDays(utcNow(), if(equals(triggerBody()?['lookup_lookback_range'], null), variables('default_value_for_lookup_lookback_days'), triggerBody()?['lookup_lookback_range'])), 'yyyy-MM-dd')}"
                                    },
                                    "subjects": [
                                        "@triggerBody()?['risky_user_email']"
                                    ]
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['recordedfutureidenti']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/credentials/lookup"
                            }
                        },
                        "Initialize_-_Default_name_for_Lookup_results_Log_Analytics_custom_log": {
                            "runAfter": {
                                "Initialize_-_Default_value_for_Lookup_range_(days_back)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "lookup_results_loganalytics_custom_log",
                                        "type": "string",
                                        "value": "RiskyUsersLookupResults_CL"
                                    }
                                ]
                            },
                            "description": "Table name must ends with \"CL\""
                        },
                        "Initialize_-_Default_value_for_Lookup_range_(days_back)": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "default_value_for_lookup_lookback_days",
                                        "type": "integer",
                                        "value": -365
                                    }
                                ]
                            },
                            "description": "Default number of days before today to lookup.  E.g. input \"-14\" to search the last 14 days. This value can be changed by passing corresponding parameter in requests' json body."
                        },
                        "Response_-_Failed": {
                            "runAfter": {
                                "Response_-_Successfully_saved_lookup_results_into_LogAnalytics": [
                                    "Skipped"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "data": {
                                        "lookup_lookback_date": "@formatDateTime(addDays(utcNow(), if(equals(triggerBody()?['lookup_lookback_range'], null), variables('default_value_for_lookup_lookback_days'), triggerBody()?['lookup_lookback_range'])), 'yyyy-MM-dd')",
                                        "lookup_results": "@body('Credential_Lookup_-_Look_up_credential_data_for_one_or_more_users')",
                                        "lookup_results_loganalytics_custom_log": "@if(equals(triggerBody()?['lookup_results_loganalytics_custom_log'], null), variables('lookup_results_loganalytics_custom_log'), triggerBody()?['lookup_results_loganalytics_custom_log'])",
                                        "parameters_passed": {
                                            "lookup_lookback_range": "@triggerBody()?['lookup_lookback_range']",
                                            "lookup_results_loganalytics_custom_log": "@triggerBody()?['lookup_results_loganalytics_custom_log']",
                                            "risky_user_email": "@triggerBody()?['risky_user_email']"
                                        }
                                    },
                                    "reason": "Unknown",
                                    "status": "Error"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "lookup_lookback_date": {
                                                    "type": "string"
                                                },
                                                "lookup_results": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "lookup_results_loganalytics_custom_log": {
                                                    "type": "string"
                                                },
                                                "parameters_passed": {
                                                    "properties": {
                                                        "lookup_lookback_range": {
                                                            "type": "integer"
                                                        },
                                                        "lookup_results_loganalytics_custom_log": {
                                                            "type": "string"
                                                        },
                                                        "risky_user_email": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "reason": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "statusCode": 422
                            }
                        },
                        "Response_-_Successfully_saved_lookup_results_into_LogAnalytics": {
                            "runAfter": {
                                "Send_Data_-_Save_Lookup_results_to_LogAnalytics_Custom_Log": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "data": {
                                        "lookup_lookback_date": "@formatDateTime(addDays(utcNow(), if(equals(triggerBody()?['lookup_lookback_range'], null), variables('default_value_for_lookup_lookback_days'), triggerBody()?['lookup_lookback_range'])), 'yyyy-MM-dd')",
                                        "lookup_results": "@body('Credential_Lookup_-_Look_up_credential_data_for_one_or_more_users')",
                                        "lookup_results_loganalytics_custom_log": "@if(equals(triggerBody()?['lookup_results_loganalytics_custom_log'], null), variables('lookup_results_loganalytics_custom_log'), triggerBody()?['lookup_results_loganalytics_custom_log'])",
                                        "parameters_passed": {
                                            "lookup_lookback_range": "@triggerBody()?['lookup_lookback_range']",
                                            "lookup_results_loganalytics_custom_log": "@triggerBody()?['lookup_results_loganalytics_custom_log']",
                                            "risky_user_email": "@triggerBody()?['risky_user_email']"
                                        }
                                    },
                                    "status": "Successfully saved risky user lookup results into LogAnalytics table."
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "lookup_lookback_date": {
                                                    "type": "string"
                                                },
                                                "lookup_results": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "lookup_results_loganalytics_custom_log": {
                                                    "type": "string"
                                                },
                                                "parameters_passed": {
                                                    "properties": {
                                                        "lookup_lookback_range": {
                                                            "type": "integer"
                                                        },
                                                        "lookup_results_loganalytics_custom_log": {
                                                            "type": "string"
                                                        },
                                                        "risky_user_email": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "statusCode": 200
                            }
                        },
                        "Send_Data_-_Save_Lookup_results_to_LogAnalytics_Custom_Log": {
                            "runAfter": {
                                "Credential_Lookup_-_Look_up_credential_data_for_one_or_more_users": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@{body('Credential_Lookup_-_Look_up_credential_data_for_one_or_more_users')}",
                                "headers": {
                                    "Log-Type": "@{if(equals(triggerBody()?['lookup_results_loganalytics_custom_log'], null), variables('lookup_results_loganalytics_custom_log'), triggerBody()?['lookup_results_loganalytics_custom_log'])}",
                                    "time-generated-field": "@{utcNow()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/logs"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureloganalyticsdatacollector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('LogAnalyticsDataCollectorConnectionName'))]",
                                "connectionName": "[variables('LogAnalyticsDataCollectorConnectionName')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azureloganalyticsdatacollector')]"
                            },
                            "recordedfutureidenti": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('RecordedFutureIdentityConnectionName'))]",
                                "connectionName": "[variables('RecordedFutureIdentityConnectionName')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/recordedfutureidenti')]"
                            }
                        }
                    }
                }
            }
        },
        {
			"type": "Microsoft.Web/connections",
			"apiVersion": "2018-07-01-preview",
			"name": "[variables('LogAnalyticsDataCollectorConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"api": {
					"id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azureloganalyticsdatacollector')]"
				},
                "displayName": "[variables('LogAnalyticsDataCollectorConnectionName')]"
			}
		},
        {
			"type": "Microsoft.Web/connections",
			"apiVersion": "2018-07-01-preview",
			"name": "[variables('RecordedFutureIdentityConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"api": {
					"id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/recordedfutureidenti')]"
				},
                "displayName": "[variables('RecordedFutureIdentityConnectionName')]"
			}
		}
    ]
}