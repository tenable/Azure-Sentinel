{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Vectra AI Stream"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "AIVectraStreamWorkbook",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "vectraaiinc.vectra_sentinel_solution",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "uiConfigId1": "AIVectraStream",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "AIVectraStream",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "parserVersion1": "1.0.0",
    "parserContentId1": "VectraStream_function-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "Vectra Data Parser",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "AIVectraStream",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "huntingQueryVersion1": "1.0.0",
    "huntingQuerycontentId1": "9e8038a8-926f-48cd-9075-5f69b15f5192",
    "_huntingQuerycontentId1": "[variables('huntingQuerycontentId1')]",
    "huntingQueryId1": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId1'))]",
    "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId1')))]",
    "huntingQueryVersion2": "1.0.0",
    "huntingQuerycontentId2": "e10782ff-f379-4b59-bccf-4724b73e21f9",
    "_huntingQuerycontentId2": "[variables('huntingQuerycontentId2')]",
    "huntingQueryId2": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId2'))]",
    "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId2')))]",
    "huntingQueryVersion3": "1.0.0",
    "huntingQuerycontentId3": "59aae46b-38a4-4540-b6da-caa59bc34685",
    "_huntingQuerycontentId3": "[variables('huntingQuerycontentId3')]",
    "huntingQueryId3": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId3'))]",
    "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId3')))]",
    "huntingQueryVersion4": "1.0.0",
    "huntingQuerycontentId4": "797a5246-351e-407a-92cd-f60f9d9f890c",
    "_huntingQuerycontentId4": "[variables('huntingQuerycontentId4')]",
    "huntingQueryId4": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId4'))]",
    "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId4')))]",
    "huntingQueryVersion5": "1.0.0",
    "huntingQuerycontentId5": "489d1c70-5fe2-426b-afbe-371ab58605fe",
    "_huntingQuerycontentId5": "[variables('huntingQuerycontentId5')]",
    "huntingQueryId5": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId5'))]",
    "huntingQueryTemplateSpecName5": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId5')))]",
    "huntingQueryVersion6": "1.0.0",
    "huntingQuerycontentId6": "98ce0ffc-eb1d-458e-835f-6c72ff4d53d1",
    "_huntingQuerycontentId6": "[variables('huntingQuerycontentId6')]",
    "huntingQueryId6": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId6'))]",
    "huntingQueryTemplateSpecName6": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId6')))]",
    "huntingQueryVersion7": "1.0.0",
    "huntingQuerycontentId7": "b8661942-b3ba-48a4-ae9d-db7c326ebd46",
    "_huntingQuerycontentId7": "[variables('huntingQuerycontentId7')]",
    "huntingQueryId7": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId7'))]",
    "huntingQueryTemplateSpecName7": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId7')))]",
    "huntingQueryVersion8": "1.0.0",
    "huntingQuerycontentId8": "3826de45-7300-44d7-800d-a2b457439dda",
    "_huntingQuerycontentId8": "[variables('huntingQuerycontentId8')]",
    "huntingQueryId8": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId8'))]",
    "huntingQueryTemplateSpecName8": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId8')))]",
    "huntingQueryVersion9": "1.0.0",
    "huntingQuerycontentId9": "b8bacbda-3faa-49fb-b000-9334b2b51c8e",
    "_huntingQuerycontentId9": "[variables('huntingQuerycontentId9')]",
    "huntingQueryId9": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId9'))]",
    "huntingQueryTemplateSpecName9": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId9')))]",
    "huntingQueryVersion10": "1.0.0",
    "huntingQuerycontentId10": "5e3e6cd2-1fba-44c0-8ddf-ad599a06a9df",
    "_huntingQuerycontentId10": "[variables('huntingQuerycontentId10')]",
    "huntingQueryId10": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId10'))]",
    "huntingQueryTemplateSpecName10": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId10')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Vectra AI Stream data connector with template",
        "displayName": "Vectra AI Stream template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Vectra AI Stream data connector with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "AI Vectra Stream",
                  "publisher": "Vectra AI",
                  "descriptionMarkdown": "The AI Vectra Stream connector allows to send Network Metadata collected by Vectra Sensors accross the Network and Cloud to Microsoft Sentinel",
                  "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**VectraStream**](https://aka.ms/sentinel-aivectrastream-parser) which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "VectraStream_CL",
                      "baseQuery": "VectraStream_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "List all DNS Queries",
                      "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| project orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p, qtype_name, ['query'], answers"
                    },
                    {
                      "description": "Number of DNS requests per type",
                      "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| summarize count() by type_name"
                    },
                    {
                      "description": "Top 10 of query to non existing domain",
                      "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| where rcode_name == \"NXDomain\"\n| summarize Count=count() by tostring(query)\n| order by Count desc\n| limit 10"
                    },
                    {
                      "description": "Host and Web sites using non-ephemeral Diffie-Hellman key exchange",
                      "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| where cipher contains \"TLS_RSA\"\n| distinct orig_hostname, id_orig_h, id_resp_h, server_name, cipher\n| project orig_hostname, id_orig_h, id_resp_h, server_name, cipher"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "VectraStream_CL",
                      "lastDataReceivedQuery": "\nVectraStream\n |  summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "\nVectraStream\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Vectra AI Brain",
                        "description": "must be configured to export Stream metadata in JSON"
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected **VectraStream** which is deployed with the Microsoft Sentinel Solution."
                    },
                    {
                      "description": "Install the Linux agent on sperate Linux instance.\n\n> Logs are collected only from **Linux** agents.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the Linux agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Linux Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Linux Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "1. Install and onboard the agent for Linux"
                    },
                    {
                      "description": "Follow the configuration steps below to get Vectra Stream metadata into Microsoft Sentinel. The Log Analytics agent is leveraged to send custom JSON into Azure Monitor, enabling the storage of the metadata into a custom table. For more information, refer to the [Azure Monitor Documentation](https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-json).\n1. Download config file for the log analytics agent: VectraStream.conf (located in the Connector folder within the Vectra solution: https://aka.ms/sentinel-aivectrastream-conf).\n2. Login to the server where you have installed Azure Log Analytics agent.\n3. Copy VectraStream.conf to the /etc/opt/microsoft/omsagent/**workspace_id**/conf/omsagent.d/ folder.\n4. Edit VectraStream.conf as follows:\n\n\t i. configure an alternate port to send data to, if desired. Default port is 29009.\n\n\t ii. replace **workspace_id** with real value of your Workspace ID.\n5. Save changes and restart the Azure Log Analytics agent for Linux service with the following command:\n\t\tsudo /opt/microsoft/omsagent/bin/service_control restart",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "2. Configure the logs to be collected"
                    },
                    {
                      "description": "Configure Vectra AI Brain to forward Stream metadata in JSON format to your Microsoft Sentinel workspace via the Log Analytics Agent.\n\nFrom the Vectra UI, navigate to Settings > Cognito Stream and Edit the destination configuration:\n\n- Select Publisher: RAW JSON\n\n- Set the server IP or hostname (which is the host which run the Log Analytics Agent)\n\n- Set all the port to **29009** (this port can be modified if required)\n\n- Save\n\n- Set Log types (Select all log types available)\n\n- Click on **Save**\n\n",
                      "title": "3. Configure and connect Vectra AI Stream"
                    }
                  ],
                  "metadata": {
                    "id": "ec069726-811c-4f50-b141-295057367f49",
                    "kind": "dataConnector",
                    "source": {
                      "kind": "solution",
                      "name": "Vectra AI"
                    },
                    "author": {
                      "name": "Vectra AI Technical Marketing"
                    },
                    "support": {
                      "tier": "developer",
                      "name": "Vectra AI",
                      "email": "tme@vectra.ai",
                      "link": "https://www.vectra.ai/support"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Vectra AI Stream",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra AI",
          "email": "tme@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "AI Vectra Stream",
          "publisher": "Vectra AI",
          "descriptionMarkdown": "The AI Vectra Stream connector allows to send Network Metadata collected by Vectra Sensors accross the Network and Cloud to Microsoft Sentinel",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "VectraStream_CL",
              "baseQuery": "VectraStream_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "VectraStream_CL",
              "lastDataReceivedQuery": "\nVectraStream\n |  summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "\nVectraStream\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "List all DNS Queries",
              "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| project orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p, qtype_name, ['query'], answers"
            },
            {
              "description": "Number of DNS requests per type",
              "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| summarize count() by type_name"
            },
            {
              "description": "Top 10 of query to non existing domain",
              "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| where rcode_name == \"NXDomain\"\n| summarize Count=count() by tostring(query)\n| order by Count desc\n| limit 10"
            },
            {
              "description": "Host and Web sites using non-ephemeral Diffie-Hellman key exchange",
              "query": "VectraStream \n| where metadata_type == \"metadat_dns\" \n| where cipher contains \"TLS_RSA\"\n| distinct orig_hostname, id_orig_h, id_resp_h, server_name, cipher\n| project orig_hostname, id_orig_h, id_resp_h, server_name, cipher"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Vectra AI Brain",
                "description": "must be configured to export Stream metadata in JSON"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected **VectraStream** which is deployed with the Microsoft Sentinel Solution."
            },
            {
              "description": "Install the Linux agent on sperate Linux instance.\n\n> Logs are collected only from **Linux** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Linux agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux"
            },
            {
              "description": "Follow the configuration steps below to get Vectra Stream metadata into Microsoft Sentinel. The Log Analytics agent is leveraged to send custom JSON into Azure Monitor, enabling the storage of the metadata into a custom table. For more information, refer to the [Azure Monitor Documentation](https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-json).\n1. Download config file for the log analytics agent: VectraStream.conf (located in the Connector folder within the Vectra solution: https://aka.ms/sentinel-aivectrastream-conf).\n2. Login to the server where you have installed Azure Log Analytics agent.\n3. Copy VectraStream.conf to the /etc/opt/microsoft/omsagent/**workspace_id**/conf/omsagent.d/ folder.\n4. Edit VectraStream.conf as follows:\n\n\t i. configure an alternate port to send data to, if desired. Default port is 29009.\n\n\t ii. replace **workspace_id** with real value of your Workspace ID.\n5. Save changes and restart the Azure Log Analytics agent for Linux service with the following command:\n\t\tsudo /opt/microsoft/omsagent/bin/service_control restart",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "Configure Vectra AI Brain to forward Stream metadata in JSON format to your Microsoft Sentinel workspace via the Log Analytics Agent.\n\nFrom the Vectra UI, navigate to Settings > Cognito Stream and Edit the destination configuration:\n\n- Select Publisher: RAW JSON\n\n- Set the server IP or hostname (which is the host which run the Log Analytics Agent)\n\n- Set all the port to **29009** (this port can be modified if required)\n\n- Save\n\n- Set Log types (Select all log types available)\n\n- Click on **Save**\n\n",
              "title": "3. Configure and connect Vectra AI Stream"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**VectraStream**](https://aka.ms/sentinel-aivectrastream-parser) which is deployed with the Microsoft Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "VectraStream_function Data Parser with template",
        "displayName": "VectraStream_function Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "VectraStream_function Data Parser with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra Data Parser",
                "category": "Samples",
                "functionAlias": "VectraStream_function",
                "query": "\nVectraStream_CL\r\n| extend\r\n    EventVendor=\"Vectra AI\",\r\n    EventProduct=\"Vectra Stream\",\r\n    EventEndTime=column_ifexists('ts_d', ''),\r\n    metadata_type_s = column_ifexists('metadata_type_s', ''),\r\n    community_id_s = column_ifexists('community_id_s', ''),\r\n    id_ip_ver_s = column_ifexists('id_ip_ver_s', ''),\r\n    id_orig_h_s = column_ifexists('id_orig_h_s', ''),\r\n    id_orig_p_d = column_ifexists('id_orig_p_d', ''),\r\n    id_resp_h_s = column_ifexists('id_resp_h_s', ''),\r\n    id_resp_p_d = column_ifexists('id_resp_p_d', ''),\r\n    resp_hostname_s = column_ifexists('resp_hostname_s', ''),\r\n    local_orig_b = column_ifexists('local_orig_b', ''),\r\n    local_resp_b = column_ifexists('local_resp_b', ''),\r\n    orig_huid_s = column_ifexists('orig_huid_s', ''),\r\n    orig_hostname_s = column_ifexists('orig_hostname_s', ''),\r\n    orig_sluid_s = column_ifexists('orig_sluid_s', ''),\r\n    resp_huid_s = column_ifexists('resp_huid_s', ''),\r\n    resp_sluid_s = column_ifexists('resp_sluid_s', ''),\r\n    sensor_uid_s = column_ifexists('sensor_uid_s', ''),\r\n    uid_s = column_ifexists('uid_s', ''),\r\n    ts_d = column_ifexists('ts_d', ''),\r\n    error_s = column_ifexists('error_s', ''),\r\n\tconn_state_s = column_ifexists('conn_state_s', ''),\r\n    duration_d = column_ifexists('duration_d', ''),\r\n    service_s = column_ifexists('service_s', ''),\r\n    proto_d = column_ifexists('proto_d', ''),\r\n    protoName_s = column_ifexists('protoName_s', ''),\r\n    orig_ip_bytes_d = column_ifexists('orig_ip_bytes_d', ''),\r\n    resp_ip_bytes_d = column_ifexists('resp_ip_bytes_d', ''),\r\n    orig_pkts_d = column_ifexists('orig_pkts_d', ''),\r\n    resp_pkts_d = column_ifexists('resp_pkts_d', ''),\r\n    session_start_time_d = column_ifexists('session_start_time_d', ''),\r\n    resp_domain_s = column_ifexists('resp_domain_s', ''),\r\n    orig_vlan_id_d = column_ifexists('orig_vlan_id_d', ''),\r\n    resp_vlan_id_d = column_ifexists('resp_vlan_id_d', ''),\r\n    first_orig_resp_data_pkt_s = column_ifexists('first_orig_resp_data_pkt_s', ''),\r\n    first_resp_orig_data_pkt_s = column_ifexists('first_resp_orig_data_pkt_s', ''),\r\n    first_orig_resp_data_pkt_time_d = column_ifexists('first_orig_resp_data_pkt_time_d', ''),\r\n    first_resp_orig_data_pkt_time_d = column_ifexists('first_resp_orig_data_pkt_time_d', ''),\r\n    first_orig_resp_pkt_time_d = column_ifexists('first_orig_resp_pkt_time_d', ''),\r\n    first_resp_orig_pkt_time_d = column_ifexists('first_resp_orig_pkt_time_d', ''),\r\n    resp_multihomed_b = column_ifexists('resp_multihomed_b', ''),\r\n    dir_confidence_d = column_ifexists('dir_confidence_d', ''),\r\n    //beacon specific attributes\r\n\tbeacon_type_s = column_ifexists('beacon_type_s', ''),\r\n    beacon_uid_s = column_ifexists('beacon_uid_s', ''),\r\n    first_event_time_d = column_ifexists('first_event_time_d', ''),\r\n    last_event_time_d = column_ifexists('last_event_time_d', ''),\r\n    resp_domains_s = column_ifexists('resp_domains_s', ''),\r\n    session_count_d = column_ifexists('session_count_d', ''),\r\n    //dcerpc\r\n\trtt_s = column_ifexists('rtt_s', ''),\r\n    endpoint_s = column_ifexists('endpoint_s', ''),\r\n    username_s = column_ifexists('username_s', ''),\r\n    hostname_s = column_ifexists('hostname_s', ''),\r\n    domain_s = column_ifexists('domain_s', ''),\r\n    operation_s = column_ifexists('operation_s', ''),\r\n\t//dhcp\r\n    mac_s = column_ifexists('mac_s', ''),\r\n    assigned_ip_s = column_ifexists('assigned_ip_s', ''),\r\n    lease_time_d = column_ifexists('lease_time_d', ''),\r\n    trans_id_s = column_ifexists('trans_id_s', ''),\r\n    dhcp_server_ip_s = column_ifexists('dhcp_server_ip_s', ''),\r\n    dns_server_ips_s = column_ifexists('dns_server_ips_s', ''),\r\n\t//dns\r\n    trans_id_d = column_ifexists('trans_id_d', ''),\r\n    query_s = column_ifexists('query_s', ''),\r\n    qclass_d = column_ifexists('qclass_d', ''),\r\n    qclass_name_s = column_ifexists('qclass_name_s', ''),\r\n    qtype_d = column_ifexists('qtype_d', ''),\r\n    qtype_name_s = column_ifexists('qtype_name_s', ''),\r\n    rcode_d = column_ifexists('rcode_d', ''),\r\n    rcode_name_s = column_ifexists('rcode_name_s', ''),\r\n    AA_b = column_ifexists('AA_b', ''),\r\n    TC_b = column_ifexists('TC_b', ''),\r\n    RD_b = column_ifexists('RD_b', ''),\r\n    RA_b = column_ifexists('RA_b', ''),\r\n    answers_s = column_ifexists('answers_s', ''),\r\n    TTLs_s = column_ifexists('TTLs_s', ''),\r\n    auth_s = column_ifexists('auth_s', ''),\r\n    total_answers_d = column_ifexists('total_answers_d', ''),\r\n    total_replies_d = column_ifexists('total_replies_d', ''),\r\n    rejected_b = column_ifexists('rejected_b', ''),\r\n    saw_query_b = column_ifexists('saw_query_b', ''),\r\n    saw_reply_b = column_ifexists('saw_reply_b', ''),\r\n    values_s = column_ifexists('values_s', ''),\r\n\t//http\r\n    method_s = column_ifexists('method_s', ''),\r\n    host_s = column_ifexists('host_s', ''),\r\n    uri_s = column_ifexists('uri_s', ''),\r\n    referrer_s = column_ifexists('referrer_s', ''),\r\n    user_agent_s = column_ifexists('user_agent_s', ''),\r\n    request_body_len_d = column_ifexists('request_body_len_d', ''),\r\n    response_body_len_d = column_ifexists('response_body_len_d', ''),\r\n    orig_mime_types_s = column_ifexists('orig_mime_types_s', ''),\r\n    resp_mime_types_s = column_ifexists('resp_mime_types_s', ''),\r\n    status_code_d = column_ifexists('status_code_d', ''),\r\n    status_msg_s = column_ifexists('status_msg_s', ''),\r\n    proxied_s = column_ifexists('proxied_s', ''),\r\n    cookie_s = column_ifexists('cookie_s', ''),\r\n    cookie_vars_s = column_ifexists('cookie_vars_s', ''),\r\n    request_cache_control_s = column_ifexists('request_cache_control_s', ''),\r\n    response_cache_control_s = column_ifexists('response_cache_control_s', ''),\r\n    response_expires_s = column_ifexists('response_expires_s', ''),\r\n    request_header_count_d = column_ifexists('request_header_count_d', ''),\r\n    response_header_count_d = column_ifexists('response_header_count_d', ''),\r\n    is_proxied_b = column_ifexists('is_proxied_b', ''),\r\n    host_multihomed_b = column_ifexists('host_multihomed_b', ''),\r\n    resp_filename_s = column_ifexists('resp_filename_s', ''),\r\n    response_content_disposition_s = column_ifexists('response_content_disposition_s', ''),\r\n\t//Kerberos\r\n    client_s = column_ifexists('client_s', ''),\r\n    data_source_s = column_ifexists('data_source_s', ''),\r\n    success_b = column_ifexists('success_b', ''),\r\n    error_code_s = column_ifexists('error_code_s', ''),\r\n    error_msg_s = column_ifexists('error_msg_s', ''),\r\n    request_type_s = column_ifexists('request_type_s', ''),\r\n    protocol_s = column_ifexists('protocol_s', ''),\r\n    reply_timestamp_d = column_ifexists('reply_timestamp_d', ''),\r\n    orig_host_observed_privilege_d = column_ifexists('orig_host_observed_privilege_d', ''),\r\n    req_ciphers_s = column_ifexists('req_ciphers_s', ''),\r\n    rep_cipher_s = column_ifexists('rep_cipher_s', ''),\r\n    //ldap\r\n    message_id_d = column_ifexists('message_id_d', ''),\r\n    base_object_s = column_ifexists('base_object_s', ''),\r\n    query_scope_s = column_ifexists('query_scope_s', ''),\r\n    result_s = column_ifexists('result_s', ''),\r\n    matched_dn_s = column_ifexists('matched_dn_s', ''),\r\n    attributes_s = column_ifexists('attributes_s', ''),\r\n    bind_error_count_d = column_ifexists('bind_error_count_d', ''),\r\n    encrypted_sasl_payload_count_d = column_ifexists('encrypted_sasl_payload_count_d', ''),\r\n    logon_failure_error_count_s = column_ifexists('logon_failure_error_count_s', ''),\r\n    response_bytes_s = column_ifexists('response_bytes_s', ''),\r\n    request_bytes_s = column_ifexists('request_bytes_s', ''),\r\n    result_code_s = column_ifexists('result_code_s', ''),\r\n    result_count_d = column_ifexists('result_count_d', ''),\r\n    is_query_b = column_ifexists('is_query_b', ''),\r\n    is_close_b = column_ifexists('is_close_b', ''),\r\n\t//ntlm\r\n    status_d = column_ifexists('status_d', ''),\r\n\t//rdp\r\n    keyboard_layout_s = column_ifexists('keyboard_layout_s', ''),\r\n    client_build_s = column_ifexists('client_build_s', ''),\r\n    date_s = column_ifexists('date_s', ''),\r\n    client_dig_protocol_id_d = column_ifexists('client_dig_protocol_id_d', ''),\r\n    client_dig_product_id_d = column_ifexists('client_dig_product_id_d', ''),\r\n    client_name_s = column_ifexists('client_name_s', ''),\r\n    desktop_width_d = column_ifexists('desktop_width_d', ''),\r\n    desktop_height_d = column_ifexists('desktop_height_d', ''),\r\n\t//smbfiles\r\n    action_s = column_ifexists('action_s', ''),\r\n    delete_on_close_b = column_ifexists('delete_on_close_b', ''),\r\n    path_s = column_ifexists('path_s', ''),\r\n    name_s = column_ifexists('name_s', ''),\r\n    prev_name_s = column_ifexists('prev_name_s', ''),\r\n    version_s = column_ifexists('version_s', ''),\r\n\t//smtp\r\n    helo_s = column_ifexists('helo_s', ''),\r\n    mail_from_s = column_ifexists('mail_from_s', ''),\r\n    rcpt_to_s = column_ifexists('rcpt_to_s', ''),\r\n    date_d = column_ifexists('date_d', ''),\r\n    from_s = column_ifexists('from_s', ''),\r\n    to_s = column_ifexists('to_s', ''),\r\n    cc_s = column_ifexists('cc_s', ''),\r\n    reply_to_s = column_ifexists('reply_to_s', ''),\r\n    msgid_d = column_ifexists('msgid_d', ''),\r\n    in_reply_to_s = column_ifexists('in_reply_to_s', ''),\r\n    subject_s = column_ifexists('subject_s', ''),\r\n    x_originating_ip_s = column_ifexists('x_originating_ip_s', ''),\r\n    first_received_s = column_ifexists('first_received_s', ''),\r\n    second_received_s = column_ifexists('second_received_s', ''),\r\n    useragent_s = column_ifexists('useragent_s', ''),\r\n    tls_s = column_ifexists('tls_s', ''),\r\n    spf_helo_s = column_ifexists('spf_helo_s', ''),\r\n    spf_mailfrom_s = column_ifexists('spf_mailfrom_s', ''),\r\n    dkim_status_s = column_ifexists('dkim_status_s', ''),\r\n    dmarc_status_s = column_ifexists('dmarc_status_s', ''),\r\n\t//ssh\r\n    server_s = column_ifexists('server_s', ''),\r\n    cipher_alg_s = column_ifexists('cipher_alg_s', ''),\r\n    mac_alg_s = column_ifexists('mac_alg_s', ''),\r\n    compression_alg_s = column_ifexists('compression_alg_s', ''),\r\n    kex_alg_s = column_ifexists('kex_alg_s', ''),\r\n    host_key_alg_s = column_ifexists('host_key_alg_s', ''),\r\n    host_key_s = column_ifexists('host_key_s', ''),\r\n    hassh_g = column_ifexists('hassh_g', ''),\r\n    hasshServer_g = column_ifexists('hasshServer_g', ''),\r\n\t//ssl\r\n    server_name_s = column_ifexists('server_name_s', ''),\r\n    established_b = column_ifexists('established_b', ''),\r\n    next_protocol_s = column_ifexists('next_protocol_s', ''),\r\n    cipher_s = column_ifexists('cipher_s', ''),\r\n    version_num_d = column_ifexists('version_num_d', ''),\r\n    curve_s = column_ifexists('curve_s', ''),\r\n    issuer_s = column_ifexists('issuer_s', ''),\r\n    client_issuer_s = column_ifexists('client_issuer_s', ''),\r\n    client_subject_s = column_ifexists('client_subject_s', ''),\r\n    client_version_num_d = column_ifexists('client_version_num_d', ''),\r\n    client_version_s = column_ifexists('client_version_s', ''),\r\n    client_extension_s = column_ifexists('client_extension_s', ''),\r\n    client_ec_point_format_s = column_ifexists('client_ec_point_format_s', ''),\r\n    client_curve_num_s = column_ifexists('client_curve_num_s', ''),\r\n    ja3_g = column_ifexists('ja3_g', ''),\r\n    ja3s_g = column_ifexists('ja3s_g', ''),\r\n    server_extensions_s = column_ifexists('server_extensions_s', ''),\r\n\t//x509\r\n    certificate_version_d = column_ifexists('certificate_version_d', ''),\r\n    certificate_serial_s = column_ifexists('certificate_serial_s', ''),\r\n    certificate_serial_g = column_ifexists('certificate_serial_g', ''),\r\n    certificate_subject_s = column_ifexists('certificate_subject_s', ''),\r\n    certificate_issuer_s = column_ifexists('certificate_issuer_s', ''),\r\n    certificate_key_alg_s = column_ifexists('certificate_key_alg_s', ''),\r\n    certificate_key_length_s = column_ifexists('certificate_key_length_s', ''),\r\n    certificate_key_type_s = column_ifexists('certificate_key_type_s', ''),\r\n    certificate_not_valid_after_d = column_ifexists('certificate_not_valid_after_d', ''),\r\n    certificate_not_valid_before_d = column_ifexists('certificate_not_valid_before_d', ''),\r\n    certificate_exponent_s = column_ifexists('certificate_exponent_s', ''),\r\n    certificate_sig_alg_s = column_ifexists('certificate_sig_alg_s', ''),\r\n    certificate_self_issued_b = column_ifexists('certificate_self_issued_b', ''),\r\n    certificate_curve_s = column_ifexists('certificate_curve_s', ''),\r\n    certificate_cn_s = column_ifexists('certificate_cn_s', ''),\r\n    san_dns_s = column_ifexists('san_dns_s', ''),\r\n    san_email_s = column_ifexists('san_email_s', ''),\r\n    san_ip_s = column_ifexists('san_ip_s', ''),\r\n    san_other_fields_b = column_ifexists('san_other_fields_b', ''),\r\n    basic_constraints_ca_b = column_ifexists('basic_constraints_ca_b', ''),\r\n    basic_constraints_path_len_d = column_ifexists('basic_constraints_path_len_d', ''),\r\n    certificate_serial = case(isnotempty(certificate_serial_s), certificate_serial_s, isnotempty(certificate_serial_g), certificate_serial_g, '')\r\n| project-rename\r\n    metadata_type = metadata_type_s,\r\n    community_id = community_id_s,\r\n    id_ip_ver = id_ip_ver_s,\r\n    id_orig_h = id_orig_h_s,\r\n    id_orig_p = id_orig_p_d,\r\n    id_resp_h = id_resp_h_s,\r\n    id_resp_p = id_resp_p_d,\r\n    resp_hostname = resp_hostname_s,\r\n    local_orig = local_orig_b,\r\n    local_resp = local_resp_b,\r\n    orig_huid = orig_huid_s,\r\n    orig_hostname = orig_hostname_s,\r\n    orig_sluid = orig_sluid_s,\r\n    resp_huid = resp_huid_s,\r\n    resp_sluid = resp_sluid_s,\r\n    sensor_uid = sensor_uid_s,\r\n    uid = uid_s,\r\n    ts = ts_d,\r\n    error = error_s,\r\n\tconn_state = conn_state_s,\r\n    duration = duration_d,\r\n    service = service_s,\r\n    proto = proto_d,\r\n    protoName = protoName_s,\r\n    orig_ip_bytes = orig_ip_bytes_d,\r\n    resp_ip_bytes = resp_ip_bytes_d,\r\n    orig_pkts = orig_pkts_d,\r\n    resp_pkts = resp_pkts_d,\r\n    session_start_time = session_start_time_d,\r\n    resp_domain = resp_domain_s,\r\n    orig_vlan_id = orig_vlan_id_d,\r\n    resp_vlan_id = resp_vlan_id_d,\r\n    first_orig_resp_data_pkt = first_orig_resp_data_pkt_s,\r\n    first_resp_orig_data_pkt = first_resp_orig_data_pkt_s,\r\n    first_orig_resp_data_pkt_time = first_orig_resp_data_pkt_time_d,\r\n    first_resp_orig_data_pkt_time = first_resp_orig_data_pkt_time_d,\r\n    first_orig_resp_pkt_time = first_orig_resp_pkt_time_d,\r\n    first_resp_orig_pkt_time = first_resp_orig_pkt_time_d,\r\n    resp_multihomed = resp_multihomed_b,\r\n    dir_confidence = dir_confidence_d,\r\n    //beacon specific attributes\r\n\tbeacon_type = beacon_type_s,\r\n    beacon_uid = beacon_uid_s,\r\n    first_event_time = first_event_time_d,\r\n    last_event_time = last_event_time_d,\r\n    resp_domains = resp_domains_s,\r\n    session_count = session_count_d,\r\n    //dcerpc\r\n\trtt = rtt_s,\r\n    endpoint = endpoint_s,\r\n    username = username_s,\r\n    hostname = hostname_s,\r\n    domain = domain_s,\r\n    operation = operation_s,\r\n\t//dhcp\r\n    mac = mac_s,\r\n    assigned_ip = assigned_ip_s,\r\n    lease_time = lease_time_d,\r\n    dhcp_server_ip = dhcp_server_ip_s,\r\n    dns_server_ips = dns_server_ips_s,\r\n\t//dns\r\n    trans_id = trans_id_d,\r\n    query = query_s,\r\n    qclass = qclass_d,\r\n    qclass_name = qclass_name_s,\r\n    qtype = qtype_d,\r\n    qtype_name = qtype_name_s,\r\n    rcode = rcode_d,\r\n    rcode_name = rcode_name_s,\r\n    AA = AA_b,\r\n    TC = TC_b,\r\n    RD = RD_b,\r\n    RA = RA_b,\r\n    answers = answers_s,\r\n    TTLs = TTLs_s,\r\n    auth = auth_s,\r\n    total_answers = total_answers_d,\r\n    total_replies = total_replies_d,\r\n    rejected = rejected_b,\r\n    saw_query = saw_query_b,\r\n    saw_reply = saw_reply_b,\r\n    values = values_s,\r\n\t//http\r\n    method = method_s,\r\n    host = host_s,\r\n    uri = uri_s,\r\n    referrer = referrer_s,\r\n    user_agent = user_agent_s,\r\n    request_body_len = request_body_len_d,\r\n    response_body_len = response_body_len_d,\r\n    orig_mime_types = orig_mime_types_s,\r\n    resp_mime_types = resp_mime_types_s,\r\n    status_code = status_code_d,\r\n    status_msg = status_msg_s,\r\n    proxied = proxied_s,\r\n    cookie = cookie_s,\r\n    cookie_vars = cookie_vars_s,\r\n    request_cache_control = request_cache_control_s,\r\n    response_cache_control = response_cache_control_s,\r\n    response_expires = response_expires_s,\r\n    request_header_count = request_header_count_d,\r\n    response_header_count = response_header_count_d,\r\n    is_proxied = is_proxied_b,\r\n    host_multihomed = host_multihomed_b,\r\n    resp_filename = resp_filename_s,\r\n    response_content_disposition = response_content_disposition_s,\r\n\t//Kerberos\r\n    client = client_s,\r\n    data_source = data_source_s,\r\n    success = success_b,\r\n    error_code = error_code_s,\r\n    error_msg = error_msg_s,\r\n    request_type = request_type_s,\r\n    protocol = protocol_s,\r\n    reply_timestamp = reply_timestamp_d,\r\n    orig_host_observed_privilege = orig_host_observed_privilege_d,\r\n    req_ciphers = req_ciphers_s,\r\n    rep_cipher = rep_cipher_s,\r\n    //ldap\r\n    message_id = message_id_d,\r\n    base_object = base_object_s,\r\n    query_scope = query_scope_s,\r\n    result = result_s,\r\n    matched_dn = matched_dn_s,\r\n    attributes = attributes_s,\r\n    bind_error_count = bind_error_count_d,\r\n    encrypted_sasl_payload_count = encrypted_sasl_payload_count_d,\r\n    logon_failure_error_count = logon_failure_error_count_s,\r\n    response_bytes = response_bytes_s,\r\n    request_bytes = request_bytes_s,\r\n    result_code = result_code_s,\r\n    result_count = result_count_d,\r\n    is_query = is_query_b,\r\n    is_close = is_close_b,\r\n\t//ntlm\r\n    status = status_d,\r\n\t//rdp\r\n    keyboard_layout = keyboard_layout_s,\r\n    client_build = client_build_s,\r\n    client_dig_protocol_id = client_dig_protocol_id_d,\r\n    client_dig_product_id = client_dig_product_id_d,\r\n    client_name = client_name_s,\r\n    desktop_width = desktop_width_d,\r\n    desktop_height = desktop_height_d,\r\n\t//smbfiles\r\n    action = action_s,\r\n    delete_on_close = delete_on_close_b,\r\n    path = path_s,\r\n    name = name_s,\r\n    prev_name = prev_name_s,\r\n    version = version_s,\r\n\t//smtp\r\n    helo = helo_s,\r\n    mail_from = mail_from_s,\r\n    rcpt_to = rcpt_to_s,\r\n    date_msg = date_d,\r\n    from = from_s,\r\n    to_msg = to_s,\r\n    cc = cc_s,\r\n    reply_to = reply_to_s,\r\n    msgid = msgid_d,\r\n    in_reply_to = in_reply_to_s,\r\n    subject = subject_s,\r\n    x_originating_ip = x_originating_ip_s,\r\n    first_received = first_received_s,\r\n    second_received = second_received_s,\r\n    useragent = useragent_s,\r\n    tls = tls_s,\r\n    spf_helo = spf_helo_s,\r\n    spf_mailfrom = spf_mailfrom_s,\r\n    dkim_status = dkim_status_s,\r\n    dmarc_status = dmarc_status_s,\r\n\t//ssh\r\n    server = server_s,\r\n    cipher_alg = cipher_alg_s,\r\n    mac_alg = mac_alg_s,\r\n    compression_alg = compression_alg_s,\r\n    kex_alg = kex_alg_s,\r\n    host_key_alg = host_key_alg_s,\r\n    host_key = host_key_s,\r\n    hassh = hassh_g,\r\n    hasshServer = hasshServer_g,\r\n\t//ssl\r\n    server_name = server_name_s,\r\n    established = established_b,\r\n    next_protocol = next_protocol_s,\r\n    cipher = cipher_s,\r\n    version_num = version_num_d,\r\n    curve = curve_s,\r\n    issuer = issuer_s,\r\n    client_issuer = client_issuer_s,\r\n    client_subject = client_subject_s,\r\n    client_version_num = client_version_num_d,\r\n    client_version = client_version_s,\r\n    client_extension = client_extension_s,\r\n    client_ec_point_format = client_ec_point_format_s,\r\n    client_curve_num = client_curve_num_s,\r\n    ja3 = ja3_g,\r\n    ja3s = ja3s_g,\r\n    server_extensions = server_extensions_s,\r\n\t//x509\r\n    certificate_version = certificate_version_d,\r\n    certificate_subject = certificate_subject_s,\r\n    certificate_issuer = certificate_issuer_s,\r\n    certificate_key_alg = certificate_key_alg_s,\r\n    certificate_key_length = certificate_key_length_s,\r\n    certificate_key_type = certificate_key_type_s,\r\n    certificate_not_valid_after = certificate_not_valid_after_d,\r\n    certificate_not_valid_before = certificate_not_valid_before_d,\r\n    certificate_exponent = certificate_exponent_s,\r\n    certificate_sig_alg = certificate_sig_alg_s,\r\n    certificate_self_issued = certificate_self_issued_b,\r\n    certificate_curve = certificate_curve_s,\r\n    certificate_cn = certificate_cn_s,\r\n    san_dns = san_dns_s,\r\n    san_email = san_email_s,\r\n    san_ip = san_ip_s,\r\n    san_other_fields = san_other_fields_b,\r\n    basic_constraints_ca = basic_constraints_ca_b,\r\n    basic_constraints_path_len = basic_constraints_path_len_d",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Vectra Data Parser"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "Vectra AI Stream",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Vectra Data Parser",
        "category": "Samples",
        "functionAlias": "VectraStream_function",
        "query": "\nVectraStream_CL\r\n| extend\r\n    EventVendor=\"Vectra AI\",\r\n    EventProduct=\"Vectra Stream\",\r\n    EventEndTime=column_ifexists('ts_d', ''),\r\n    metadata_type_s = column_ifexists('metadata_type_s', ''),\r\n    community_id_s = column_ifexists('community_id_s', ''),\r\n    id_ip_ver_s = column_ifexists('id_ip_ver_s', ''),\r\n    id_orig_h_s = column_ifexists('id_orig_h_s', ''),\r\n    id_orig_p_d = column_ifexists('id_orig_p_d', ''),\r\n    id_resp_h_s = column_ifexists('id_resp_h_s', ''),\r\n    id_resp_p_d = column_ifexists('id_resp_p_d', ''),\r\n    resp_hostname_s = column_ifexists('resp_hostname_s', ''),\r\n    local_orig_b = column_ifexists('local_orig_b', ''),\r\n    local_resp_b = column_ifexists('local_resp_b', ''),\r\n    orig_huid_s = column_ifexists('orig_huid_s', ''),\r\n    orig_hostname_s = column_ifexists('orig_hostname_s', ''),\r\n    orig_sluid_s = column_ifexists('orig_sluid_s', ''),\r\n    resp_huid_s = column_ifexists('resp_huid_s', ''),\r\n    resp_sluid_s = column_ifexists('resp_sluid_s', ''),\r\n    sensor_uid_s = column_ifexists('sensor_uid_s', ''),\r\n    uid_s = column_ifexists('uid_s', ''),\r\n    ts_d = column_ifexists('ts_d', ''),\r\n    error_s = column_ifexists('error_s', ''),\r\n\tconn_state_s = column_ifexists('conn_state_s', ''),\r\n    duration_d = column_ifexists('duration_d', ''),\r\n    service_s = column_ifexists('service_s', ''),\r\n    proto_d = column_ifexists('proto_d', ''),\r\n    protoName_s = column_ifexists('protoName_s', ''),\r\n    orig_ip_bytes_d = column_ifexists('orig_ip_bytes_d', ''),\r\n    resp_ip_bytes_d = column_ifexists('resp_ip_bytes_d', ''),\r\n    orig_pkts_d = column_ifexists('orig_pkts_d', ''),\r\n    resp_pkts_d = column_ifexists('resp_pkts_d', ''),\r\n    session_start_time_d = column_ifexists('session_start_time_d', ''),\r\n    resp_domain_s = column_ifexists('resp_domain_s', ''),\r\n    orig_vlan_id_d = column_ifexists('orig_vlan_id_d', ''),\r\n    resp_vlan_id_d = column_ifexists('resp_vlan_id_d', ''),\r\n    first_orig_resp_data_pkt_s = column_ifexists('first_orig_resp_data_pkt_s', ''),\r\n    first_resp_orig_data_pkt_s = column_ifexists('first_resp_orig_data_pkt_s', ''),\r\n    first_orig_resp_data_pkt_time_d = column_ifexists('first_orig_resp_data_pkt_time_d', ''),\r\n    first_resp_orig_data_pkt_time_d = column_ifexists('first_resp_orig_data_pkt_time_d', ''),\r\n    first_orig_resp_pkt_time_d = column_ifexists('first_orig_resp_pkt_time_d', ''),\r\n    first_resp_orig_pkt_time_d = column_ifexists('first_resp_orig_pkt_time_d', ''),\r\n    resp_multihomed_b = column_ifexists('resp_multihomed_b', ''),\r\n    dir_confidence_d = column_ifexists('dir_confidence_d', ''),\r\n    //beacon specific attributes\r\n\tbeacon_type_s = column_ifexists('beacon_type_s', ''),\r\n    beacon_uid_s = column_ifexists('beacon_uid_s', ''),\r\n    first_event_time_d = column_ifexists('first_event_time_d', ''),\r\n    last_event_time_d = column_ifexists('last_event_time_d', ''),\r\n    resp_domains_s = column_ifexists('resp_domains_s', ''),\r\n    session_count_d = column_ifexists('session_count_d', ''),\r\n    //dcerpc\r\n\trtt_s = column_ifexists('rtt_s', ''),\r\n    endpoint_s = column_ifexists('endpoint_s', ''),\r\n    username_s = column_ifexists('username_s', ''),\r\n    hostname_s = column_ifexists('hostname_s', ''),\r\n    domain_s = column_ifexists('domain_s', ''),\r\n    operation_s = column_ifexists('operation_s', ''),\r\n\t//dhcp\r\n    mac_s = column_ifexists('mac_s', ''),\r\n    assigned_ip_s = column_ifexists('assigned_ip_s', ''),\r\n    lease_time_d = column_ifexists('lease_time_d', ''),\r\n    trans_id_s = column_ifexists('trans_id_s', ''),\r\n    dhcp_server_ip_s = column_ifexists('dhcp_server_ip_s', ''),\r\n    dns_server_ips_s = column_ifexists('dns_server_ips_s', ''),\r\n\t//dns\r\n    trans_id_d = column_ifexists('trans_id_d', ''),\r\n    query_s = column_ifexists('query_s', ''),\r\n    qclass_d = column_ifexists('qclass_d', ''),\r\n    qclass_name_s = column_ifexists('qclass_name_s', ''),\r\n    qtype_d = column_ifexists('qtype_d', ''),\r\n    qtype_name_s = column_ifexists('qtype_name_s', ''),\r\n    rcode_d = column_ifexists('rcode_d', ''),\r\n    rcode_name_s = column_ifexists('rcode_name_s', ''),\r\n    AA_b = column_ifexists('AA_b', ''),\r\n    TC_b = column_ifexists('TC_b', ''),\r\n    RD_b = column_ifexists('RD_b', ''),\r\n    RA_b = column_ifexists('RA_b', ''),\r\n    answers_s = column_ifexists('answers_s', ''),\r\n    TTLs_s = column_ifexists('TTLs_s', ''),\r\n    auth_s = column_ifexists('auth_s', ''),\r\n    total_answers_d = column_ifexists('total_answers_d', ''),\r\n    total_replies_d = column_ifexists('total_replies_d', ''),\r\n    rejected_b = column_ifexists('rejected_b', ''),\r\n    saw_query_b = column_ifexists('saw_query_b', ''),\r\n    saw_reply_b = column_ifexists('saw_reply_b', ''),\r\n    values_s = column_ifexists('values_s', ''),\r\n\t//http\r\n    method_s = column_ifexists('method_s', ''),\r\n    host_s = column_ifexists('host_s', ''),\r\n    uri_s = column_ifexists('uri_s', ''),\r\n    referrer_s = column_ifexists('referrer_s', ''),\r\n    user_agent_s = column_ifexists('user_agent_s', ''),\r\n    request_body_len_d = column_ifexists('request_body_len_d', ''),\r\n    response_body_len_d = column_ifexists('response_body_len_d', ''),\r\n    orig_mime_types_s = column_ifexists('orig_mime_types_s', ''),\r\n    resp_mime_types_s = column_ifexists('resp_mime_types_s', ''),\r\n    status_code_d = column_ifexists('status_code_d', ''),\r\n    status_msg_s = column_ifexists('status_msg_s', ''),\r\n    proxied_s = column_ifexists('proxied_s', ''),\r\n    cookie_s = column_ifexists('cookie_s', ''),\r\n    cookie_vars_s = column_ifexists('cookie_vars_s', ''),\r\n    request_cache_control_s = column_ifexists('request_cache_control_s', ''),\r\n    response_cache_control_s = column_ifexists('response_cache_control_s', ''),\r\n    response_expires_s = column_ifexists('response_expires_s', ''),\r\n    request_header_count_d = column_ifexists('request_header_count_d', ''),\r\n    response_header_count_d = column_ifexists('response_header_count_d', ''),\r\n    is_proxied_b = column_ifexists('is_proxied_b', ''),\r\n    host_multihomed_b = column_ifexists('host_multihomed_b', ''),\r\n    resp_filename_s = column_ifexists('resp_filename_s', ''),\r\n    response_content_disposition_s = column_ifexists('response_content_disposition_s', ''),\r\n\t//Kerberos\r\n    client_s = column_ifexists('client_s', ''),\r\n    data_source_s = column_ifexists('data_source_s', ''),\r\n    success_b = column_ifexists('success_b', ''),\r\n    error_code_s = column_ifexists('error_code_s', ''),\r\n    error_msg_s = column_ifexists('error_msg_s', ''),\r\n    request_type_s = column_ifexists('request_type_s', ''),\r\n    protocol_s = column_ifexists('protocol_s', ''),\r\n    reply_timestamp_d = column_ifexists('reply_timestamp_d', ''),\r\n    orig_host_observed_privilege_d = column_ifexists('orig_host_observed_privilege_d', ''),\r\n    req_ciphers_s = column_ifexists('req_ciphers_s', ''),\r\n    rep_cipher_s = column_ifexists('rep_cipher_s', ''),\r\n    //ldap\r\n    message_id_d = column_ifexists('message_id_d', ''),\r\n    base_object_s = column_ifexists('base_object_s', ''),\r\n    query_scope_s = column_ifexists('query_scope_s', ''),\r\n    result_s = column_ifexists('result_s', ''),\r\n    matched_dn_s = column_ifexists('matched_dn_s', ''),\r\n    attributes_s = column_ifexists('attributes_s', ''),\r\n    bind_error_count_d = column_ifexists('bind_error_count_d', ''),\r\n    encrypted_sasl_payload_count_d = column_ifexists('encrypted_sasl_payload_count_d', ''),\r\n    logon_failure_error_count_s = column_ifexists('logon_failure_error_count_s', ''),\r\n    response_bytes_s = column_ifexists('response_bytes_s', ''),\r\n    request_bytes_s = column_ifexists('request_bytes_s', ''),\r\n    result_code_s = column_ifexists('result_code_s', ''),\r\n    result_count_d = column_ifexists('result_count_d', ''),\r\n    is_query_b = column_ifexists('is_query_b', ''),\r\n    is_close_b = column_ifexists('is_close_b', ''),\r\n\t//ntlm\r\n    status_d = column_ifexists('status_d', ''),\r\n\t//rdp\r\n    keyboard_layout_s = column_ifexists('keyboard_layout_s', ''),\r\n    client_build_s = column_ifexists('client_build_s', ''),\r\n    date_s = column_ifexists('date_s', ''),\r\n    client_dig_protocol_id_d = column_ifexists('client_dig_protocol_id_d', ''),\r\n    client_dig_product_id_d = column_ifexists('client_dig_product_id_d', ''),\r\n    client_name_s = column_ifexists('client_name_s', ''),\r\n    desktop_width_d = column_ifexists('desktop_width_d', ''),\r\n    desktop_height_d = column_ifexists('desktop_height_d', ''),\r\n\t//smbfiles\r\n    action_s = column_ifexists('action_s', ''),\r\n    delete_on_close_b = column_ifexists('delete_on_close_b', ''),\r\n    path_s = column_ifexists('path_s', ''),\r\n    name_s = column_ifexists('name_s', ''),\r\n    prev_name_s = column_ifexists('prev_name_s', ''),\r\n    version_s = column_ifexists('version_s', ''),\r\n\t//smtp\r\n    helo_s = column_ifexists('helo_s', ''),\r\n    mail_from_s = column_ifexists('mail_from_s', ''),\r\n    rcpt_to_s = column_ifexists('rcpt_to_s', ''),\r\n    date_d = column_ifexists('date_d', ''),\r\n    from_s = column_ifexists('from_s', ''),\r\n    to_s = column_ifexists('to_s', ''),\r\n    cc_s = column_ifexists('cc_s', ''),\r\n    reply_to_s = column_ifexists('reply_to_s', ''),\r\n    msgid_d = column_ifexists('msgid_d', ''),\r\n    in_reply_to_s = column_ifexists('in_reply_to_s', ''),\r\n    subject_s = column_ifexists('subject_s', ''),\r\n    x_originating_ip_s = column_ifexists('x_originating_ip_s', ''),\r\n    first_received_s = column_ifexists('first_received_s', ''),\r\n    second_received_s = column_ifexists('second_received_s', ''),\r\n    useragent_s = column_ifexists('useragent_s', ''),\r\n    tls_s = column_ifexists('tls_s', ''),\r\n    spf_helo_s = column_ifexists('spf_helo_s', ''),\r\n    spf_mailfrom_s = column_ifexists('spf_mailfrom_s', ''),\r\n    dkim_status_s = column_ifexists('dkim_status_s', ''),\r\n    dmarc_status_s = column_ifexists('dmarc_status_s', ''),\r\n\t//ssh\r\n    server_s = column_ifexists('server_s', ''),\r\n    cipher_alg_s = column_ifexists('cipher_alg_s', ''),\r\n    mac_alg_s = column_ifexists('mac_alg_s', ''),\r\n    compression_alg_s = column_ifexists('compression_alg_s', ''),\r\n    kex_alg_s = column_ifexists('kex_alg_s', ''),\r\n    host_key_alg_s = column_ifexists('host_key_alg_s', ''),\r\n    host_key_s = column_ifexists('host_key_s', ''),\r\n    hassh_g = column_ifexists('hassh_g', ''),\r\n    hasshServer_g = column_ifexists('hasshServer_g', ''),\r\n\t//ssl\r\n    server_name_s = column_ifexists('server_name_s', ''),\r\n    established_b = column_ifexists('established_b', ''),\r\n    next_protocol_s = column_ifexists('next_protocol_s', ''),\r\n    cipher_s = column_ifexists('cipher_s', ''),\r\n    version_num_d = column_ifexists('version_num_d', ''),\r\n    curve_s = column_ifexists('curve_s', ''),\r\n    issuer_s = column_ifexists('issuer_s', ''),\r\n    client_issuer_s = column_ifexists('client_issuer_s', ''),\r\n    client_subject_s = column_ifexists('client_subject_s', ''),\r\n    client_version_num_d = column_ifexists('client_version_num_d', ''),\r\n    client_version_s = column_ifexists('client_version_s', ''),\r\n    client_extension_s = column_ifexists('client_extension_s', ''),\r\n    client_ec_point_format_s = column_ifexists('client_ec_point_format_s', ''),\r\n    client_curve_num_s = column_ifexists('client_curve_num_s', ''),\r\n    ja3_g = column_ifexists('ja3_g', ''),\r\n    ja3s_g = column_ifexists('ja3s_g', ''),\r\n    server_extensions_s = column_ifexists('server_extensions_s', ''),\r\n\t//x509\r\n    certificate_version_d = column_ifexists('certificate_version_d', ''),\r\n    certificate_serial_s = column_ifexists('certificate_serial_s', ''),\r\n    certificate_serial_g = column_ifexists('certificate_serial_g', ''),\r\n    certificate_subject_s = column_ifexists('certificate_subject_s', ''),\r\n    certificate_issuer_s = column_ifexists('certificate_issuer_s', ''),\r\n    certificate_key_alg_s = column_ifexists('certificate_key_alg_s', ''),\r\n    certificate_key_length_s = column_ifexists('certificate_key_length_s', ''),\r\n    certificate_key_type_s = column_ifexists('certificate_key_type_s', ''),\r\n    certificate_not_valid_after_d = column_ifexists('certificate_not_valid_after_d', ''),\r\n    certificate_not_valid_before_d = column_ifexists('certificate_not_valid_before_d', ''),\r\n    certificate_exponent_s = column_ifexists('certificate_exponent_s', ''),\r\n    certificate_sig_alg_s = column_ifexists('certificate_sig_alg_s', ''),\r\n    certificate_self_issued_b = column_ifexists('certificate_self_issued_b', ''),\r\n    certificate_curve_s = column_ifexists('certificate_curve_s', ''),\r\n    certificate_cn_s = column_ifexists('certificate_cn_s', ''),\r\n    san_dns_s = column_ifexists('san_dns_s', ''),\r\n    san_email_s = column_ifexists('san_email_s', ''),\r\n    san_ip_s = column_ifexists('san_ip_s', ''),\r\n    san_other_fields_b = column_ifexists('san_other_fields_b', ''),\r\n    basic_constraints_ca_b = column_ifexists('basic_constraints_ca_b', ''),\r\n    basic_constraints_path_len_d = column_ifexists('basic_constraints_path_len_d', ''),\r\n    certificate_serial = case(isnotempty(certificate_serial_s), certificate_serial_s, isnotempty(certificate_serial_g), certificate_serial_g, '')\r\n| project-rename\r\n    metadata_type = metadata_type_s,\r\n    community_id = community_id_s,\r\n    id_ip_ver = id_ip_ver_s,\r\n    id_orig_h = id_orig_h_s,\r\n    id_orig_p = id_orig_p_d,\r\n    id_resp_h = id_resp_h_s,\r\n    id_resp_p = id_resp_p_d,\r\n    resp_hostname = resp_hostname_s,\r\n    local_orig = local_orig_b,\r\n    local_resp = local_resp_b,\r\n    orig_huid = orig_huid_s,\r\n    orig_hostname = orig_hostname_s,\r\n    orig_sluid = orig_sluid_s,\r\n    resp_huid = resp_huid_s,\r\n    resp_sluid = resp_sluid_s,\r\n    sensor_uid = sensor_uid_s,\r\n    uid = uid_s,\r\n    ts = ts_d,\r\n    error = error_s,\r\n\tconn_state = conn_state_s,\r\n    duration = duration_d,\r\n    service = service_s,\r\n    proto = proto_d,\r\n    protoName = protoName_s,\r\n    orig_ip_bytes = orig_ip_bytes_d,\r\n    resp_ip_bytes = resp_ip_bytes_d,\r\n    orig_pkts = orig_pkts_d,\r\n    resp_pkts = resp_pkts_d,\r\n    session_start_time = session_start_time_d,\r\n    resp_domain = resp_domain_s,\r\n    orig_vlan_id = orig_vlan_id_d,\r\n    resp_vlan_id = resp_vlan_id_d,\r\n    first_orig_resp_data_pkt = first_orig_resp_data_pkt_s,\r\n    first_resp_orig_data_pkt = first_resp_orig_data_pkt_s,\r\n    first_orig_resp_data_pkt_time = first_orig_resp_data_pkt_time_d,\r\n    first_resp_orig_data_pkt_time = first_resp_orig_data_pkt_time_d,\r\n    first_orig_resp_pkt_time = first_orig_resp_pkt_time_d,\r\n    first_resp_orig_pkt_time = first_resp_orig_pkt_time_d,\r\n    resp_multihomed = resp_multihomed_b,\r\n    dir_confidence = dir_confidence_d,\r\n    //beacon specific attributes\r\n\tbeacon_type = beacon_type_s,\r\n    beacon_uid = beacon_uid_s,\r\n    first_event_time = first_event_time_d,\r\n    last_event_time = last_event_time_d,\r\n    resp_domains = resp_domains_s,\r\n    session_count = session_count_d,\r\n    //dcerpc\r\n\trtt = rtt_s,\r\n    endpoint = endpoint_s,\r\n    username = username_s,\r\n    hostname = hostname_s,\r\n    domain = domain_s,\r\n    operation = operation_s,\r\n\t//dhcp\r\n    mac = mac_s,\r\n    assigned_ip = assigned_ip_s,\r\n    lease_time = lease_time_d,\r\n    dhcp_server_ip = dhcp_server_ip_s,\r\n    dns_server_ips = dns_server_ips_s,\r\n\t//dns\r\n    trans_id = trans_id_d,\r\n    query = query_s,\r\n    qclass = qclass_d,\r\n    qclass_name = qclass_name_s,\r\n    qtype = qtype_d,\r\n    qtype_name = qtype_name_s,\r\n    rcode = rcode_d,\r\n    rcode_name = rcode_name_s,\r\n    AA = AA_b,\r\n    TC = TC_b,\r\n    RD = RD_b,\r\n    RA = RA_b,\r\n    answers = answers_s,\r\n    TTLs = TTLs_s,\r\n    auth = auth_s,\r\n    total_answers = total_answers_d,\r\n    total_replies = total_replies_d,\r\n    rejected = rejected_b,\r\n    saw_query = saw_query_b,\r\n    saw_reply = saw_reply_b,\r\n    values = values_s,\r\n\t//http\r\n    method = method_s,\r\n    host = host_s,\r\n    uri = uri_s,\r\n    referrer = referrer_s,\r\n    user_agent = user_agent_s,\r\n    request_body_len = request_body_len_d,\r\n    response_body_len = response_body_len_d,\r\n    orig_mime_types = orig_mime_types_s,\r\n    resp_mime_types = resp_mime_types_s,\r\n    status_code = status_code_d,\r\n    status_msg = status_msg_s,\r\n    proxied = proxied_s,\r\n    cookie = cookie_s,\r\n    cookie_vars = cookie_vars_s,\r\n    request_cache_control = request_cache_control_s,\r\n    response_cache_control = response_cache_control_s,\r\n    response_expires = response_expires_s,\r\n    request_header_count = request_header_count_d,\r\n    response_header_count = response_header_count_d,\r\n    is_proxied = is_proxied_b,\r\n    host_multihomed = host_multihomed_b,\r\n    resp_filename = resp_filename_s,\r\n    response_content_disposition = response_content_disposition_s,\r\n\t//Kerberos\r\n    client = client_s,\r\n    data_source = data_source_s,\r\n    success = success_b,\r\n    error_code = error_code_s,\r\n    error_msg = error_msg_s,\r\n    request_type = request_type_s,\r\n    protocol = protocol_s,\r\n    reply_timestamp = reply_timestamp_d,\r\n    orig_host_observed_privilege = orig_host_observed_privilege_d,\r\n    req_ciphers = req_ciphers_s,\r\n    rep_cipher = rep_cipher_s,\r\n    //ldap\r\n    message_id = message_id_d,\r\n    base_object = base_object_s,\r\n    query_scope = query_scope_s,\r\n    result = result_s,\r\n    matched_dn = matched_dn_s,\r\n    attributes = attributes_s,\r\n    bind_error_count = bind_error_count_d,\r\n    encrypted_sasl_payload_count = encrypted_sasl_payload_count_d,\r\n    logon_failure_error_count = logon_failure_error_count_s,\r\n    response_bytes = response_bytes_s,\r\n    request_bytes = request_bytes_s,\r\n    result_code = result_code_s,\r\n    result_count = result_count_d,\r\n    is_query = is_query_b,\r\n    is_close = is_close_b,\r\n\t//ntlm\r\n    status = status_d,\r\n\t//rdp\r\n    keyboard_layout = keyboard_layout_s,\r\n    client_build = client_build_s,\r\n    client_dig_protocol_id = client_dig_protocol_id_d,\r\n    client_dig_product_id = client_dig_product_id_d,\r\n    client_name = client_name_s,\r\n    desktop_width = desktop_width_d,\r\n    desktop_height = desktop_height_d,\r\n\t//smbfiles\r\n    action = action_s,\r\n    delete_on_close = delete_on_close_b,\r\n    path = path_s,\r\n    name = name_s,\r\n    prev_name = prev_name_s,\r\n    version = version_s,\r\n\t//smtp\r\n    helo = helo_s,\r\n    mail_from = mail_from_s,\r\n    rcpt_to = rcpt_to_s,\r\n    date_msg = date_d,\r\n    from = from_s,\r\n    to_msg = to_s,\r\n    cc = cc_s,\r\n    reply_to = reply_to_s,\r\n    msgid = msgid_d,\r\n    in_reply_to = in_reply_to_s,\r\n    subject = subject_s,\r\n    x_originating_ip = x_originating_ip_s,\r\n    first_received = first_received_s,\r\n    second_received = second_received_s,\r\n    useragent = useragent_s,\r\n    tls = tls_s,\r\n    spf_helo = spf_helo_s,\r\n    spf_mailfrom = spf_mailfrom_s,\r\n    dkim_status = dkim_status_s,\r\n    dmarc_status = dmarc_status_s,\r\n\t//ssh\r\n    server = server_s,\r\n    cipher_alg = cipher_alg_s,\r\n    mac_alg = mac_alg_s,\r\n    compression_alg = compression_alg_s,\r\n    kex_alg = kex_alg_s,\r\n    host_key_alg = host_key_alg_s,\r\n    host_key = host_key_s,\r\n    hassh = hassh_g,\r\n    hasshServer = hasshServer_g,\r\n\t//ssl\r\n    server_name = server_name_s,\r\n    established = established_b,\r\n    next_protocol = next_protocol_s,\r\n    cipher = cipher_s,\r\n    version_num = version_num_d,\r\n    curve = curve_s,\r\n    issuer = issuer_s,\r\n    client_issuer = client_issuer_s,\r\n    client_subject = client_subject_s,\r\n    client_version_num = client_version_num_d,\r\n    client_version = client_version_s,\r\n    client_extension = client_extension_s,\r\n    client_ec_point_format = client_ec_point_format_s,\r\n    client_curve_num = client_curve_num_s,\r\n    ja3 = ja3_g,\r\n    ja3s = ja3s_g,\r\n    server_extensions = server_extensions_s,\r\n\t//x509\r\n    certificate_version = certificate_version_d,\r\n    certificate_subject = certificate_subject_s,\r\n    certificate_issuer = certificate_issuer_s,\r\n    certificate_key_alg = certificate_key_alg_s,\r\n    certificate_key_length = certificate_key_length_s,\r\n    certificate_key_type = certificate_key_type_s,\r\n    certificate_not_valid_after = certificate_not_valid_after_d,\r\n    certificate_not_valid_before = certificate_not_valid_before_d,\r\n    certificate_exponent = certificate_exponent_s,\r\n    certificate_sig_alg = certificate_sig_alg_s,\r\n    certificate_self_issued = certificate_self_issued_b,\r\n    certificate_curve = certificate_curve_s,\r\n    certificate_cn = certificate_cn_s,\r\n    san_dns = san_dns_s,\r\n    san_email = san_email_s,\r\n    san_ip = san_ip_s,\r\n    san_other_fields = san_other_fields_b,\r\n    basic_constraints_ca = basic_constraints_ca_b,\r\n    basic_constraints_path_len = basic_constraints_path_len_d",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Vectra AI Stream",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra AI",
          "email": "tme@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "Vectra AI Stream Workbook with template",
        "displayName": "Vectra AI Stream workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "AIVectraStreamWorkbookWorkbook Workbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": ""
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"1638b403-97cb-4684-9c61-eccf637bc07e\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Security\",\"subTarget\":\"Security\",\"preText\":\"Security\",\"postText\":\"Security\",\"style\":\"link\"},{\"id\":\"7885725f-585c-4f82-8eb4-5510f8309f5e\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Connection\",\"subTarget\":\"Connection\",\"style\":\"link\"},{\"id\":\"c1b3b22b-18ac-4ef5-91de-bf5f3c5d020e\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DNS\",\"subTarget\":\"DNS\",\"style\":\"link\"},{\"id\":\"d1761326-b9a1-4acb-9881-8a558892a5e5\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"SSL/x509\",\"subTarget\":\"SSL\",\"style\":\"link\"},{\"id\":\"3623f43d-589f-4b8d-9d4a-b808dd604c0e\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Host\",\"subTarget\":\"Host\",\"style\":\"link\"}]},\"name\":\"Tabs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Security\",\"style\":\"{setTab}\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"3a5ed03d-9400-4ee0-ad0e-5ba136247cdc\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Timer\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":172800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"Timerparameter\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"e5a5309c-893a-44f3-aa28-4829f8227ae0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceHostname\",\"label\":\"Source hostname\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":2592000000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SourceHostname\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"2e59aa6e-5d43-46ac-b2c3-56d3de1d67ca\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceIP\",\"label\":\"Source IP\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":86400000},\"defaultValue\":\"value::all\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SourceIP\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"4301ce7b-cdaf-4708-b168-556635325da4\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DestinationIP\",\"label\":\"Destination IP\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"DestinationIP\"},{\"type\":1,\"content\":{\"json\":\"<br />\"},\"name\":\"text - 27\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\"\\r\\n        and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n      and local_orig == \\\"false\\\" and id_resp_p == \\\"3389\\\" and resp_ip_bytes != \\\"0\\\"\\r\\n|extend resp_hostname_s = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), resp_domain_s = iff(isempty(resp_domain), \\\"Not Available\\\", resp_domain)\\r\\n|summarize count() by (id_resp_h)\\r\\n|count\\r\\n\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"fieldName\":\"\",\"parameterName\":\"smbData\",\"defaultValue\":\"*\"},{\"parameterName\":\"line1\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"RDP servers externally accessible\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3},\"emptyValCustomText\":\"0\"}},\"showBorder\":true,\"sortCriteriaField\":\"count\",\"sortOrderField\":1,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"RDP servers externally accessible\",\"styleSettings\":{\"margin\":\"0px\",\"maxWidth\":\"100\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\"\\r\\n        and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and local_orig == \\\"false\\\"\\r\\n        and id_resp_p == \\\"445\\\"\\r\\n        and resp_ip_bytes != 0 \\r\\n|summarize count() by (id_resp_h)\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"smb\",\"defaultValue\":\"*\"},{\"parameterName\":\"line2\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"SMB servers externally accessible\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"SMB servers externally accessible\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_smbmapping\\\"\\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\t and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and version==\\\"SMBv1\\\"\\r\\n|summarize count() by (id_orig_h)\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"hostsusingsmbv1\",\"defaultValue\":\"*\"},{\"parameterName\":\"line\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"id_orig_h_s\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Hosts using SMBv1\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Hosts using SMBv1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_httpsessioninfo\\\"\\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and (uri contains_cs \\\"admin\\\" or uri contains_cs \\\"login\\\" or uri contains_cs  \\\"setup\\\" or uri  contains_cs  \\\"update\\\" or uri contains_cs \\\"console\\\")\\r\\n        and method != \\\"CONNECT\\\"\\r\\n        and host  matches regex \\\"(?P<host_header>[^ (]+)\\\"\\r\\n        and host !endswith_cs \\\".windowsupdate.com\\\"\\r\\n        and local_orig == \\\"true\\\"\\r\\n        and tostring( status_code) contains_cs \\\"2\\\"\\r\\n|summarize count() by (host)\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"UnencryptedwebHosts\",\"parameterType\":1,\"defaultValue\":\"*\"},{\"parameterName\":\"line700\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Unencrypted web administration Hosts\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Unencrypted web administration Hosts\"},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line1\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 36\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\"\\r\\n        and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n      and local_orig == \\\"false\\\" and id_resp_p == \\\"3389\\\" and resp_ip_bytes != 0\\r\\n|extend resp_hostname_s = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), resp_domain_s = iff(isempty(resp_domain), \\\"Not Available\\\", resp_domain)\\r\\n|summarize arg_max(TimeGenerated, *) by id_resp_h\\r\\n|project TimeGenerated, orig_hostname, id_orig_h, resp_hostname_s, id_resp_h, id_resp_p\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"title\":\"RDP servers externally accessible DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"smbData\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"RDP servers externally accessible DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line2\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 37\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\"\\r\\n        and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and local_orig == \\\"false\\\"\\r\\n        and id_resp_p == \\\"445\\\"\\r\\n        and resp_ip_bytes != 0 \\r\\n|summarize arg_max(TimeGenerated, *) by id_resp_h\\r\\n|project TimeGenerated, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"title\":\"SMB servers externally accessible DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"smb\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"SMB servers externally accessible DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 35\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_smbmapping\\\"\\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\t and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and version==\\\"SMBv1\\\" \\r\\n|summarize arg_max(TimeGenerated, *) by id_orig_h\\r\\n|project TimeGenerated, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"title\":\"Hosts using SMBv1 DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"hostsusingsmbv1\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Hosts using SMBv1 DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line700\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 41\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_httpsessioninfo\\\"\\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and (uri contains_cs \\\"admin\\\" or uri contains_cs \\\"login\\\" or uri contains_cs  \\\"setup\\\" or uri  contains_cs  \\\"update\\\" or uri contains_cs \\\"console\\\")\\r\\n        and method != \\\"CONNECT\\\"\\r\\n        and host  matches regex \\\"(?P<host_header>[^ (]+)\\\"\\r\\n        and host !endswith_cs \\\".windowsupdate.com\\\"\\r\\n        and local_orig == \\\"true\\\"\\r\\n        and tostring( status_code) contains_cs \\\"2\\\"\\r\\n|summarize arg_max(TimeGenerated, *) by host\\r\\n|project TimeGenerated, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p,host\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"title\":\"Unencrypted web administration Hosts DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"UnencryptedwebHosts\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Unencrypted web administration Hosts DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n       and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and local_orig ==\\\"true\\\"\\r\\n        and (id_resp_p == 20 or id_resp_p == 21 or id_resp_p ==23)\\r\\n|summarize count() by (id_orig_h)\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"TelnetFTPClients\",\"defaultValue\":\"*\"},{\"parameterName\":\"line4\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"id_orig_h_s\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Telnet & FTP Clients\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Telnet & FTP Clients\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_dhcp\\\"\\r\\n    and mac startswith_cs \\\"B8:27:EB:\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by mac\\r\\n| summarize Count=count() by mac\\r\\n| summarize sum(Count)\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"RaspberryDevices\",\"defaultValue\":\"*\"},{\"fieldName\":\"\",\"parameterName\":\"line5\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Raspberry Devices\"}]}},\"leftContent\":{\"columnMatch\":\"sum_Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Raspberry Devices\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_beacon\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n| summarize count() by (id_orig_h)\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"Beaconinghosts\",\"parameterType\":1,\"defaultValue\":\"*\"},{\"parameterName\":\"line800\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"id_orig_h_s\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Beaconing hosts\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Beaconing hosts\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n    and (resp_domain endswith_cs \\\".box.com\\\" or resp_domain endswith_cs \\\".box.net\\\" or resp_domain endswith_cs \\\".boxcdn.net\\\" or resp_domain endswith_cs \\\".boxcloud.com\\\" or resp_domain endswith_cs \\\".boxrelay.com\\\") \\r\\n    or (resp_domain endswith_cs \\\".db.tt\\\" or resp_domain endswith_cs \\\".dropbox-dns.com\\\" or resp_domain endswith_cs \\\".dropbox.com\\\" or resp_domain endswith_cs \\\".dropboxapi.com\\\") \\r\\n    or (resp_domain == \\\"accounts.google.com\\\" or resp_domain == \\\"apis.google.com\\\" or (resp_domain startswith_cs \\\"clients\\\" and resp_domain endswith_cs \\\".google.com\\\") or resp_domain == \\\"docs.google.com\\\" or resp_domain == \\\"drive.google.com\\\" or resp_domain == \\\"gg.google.com\\\" or resp_domain == \\\"googledrive.com\\\" or resp_domain == \\\"gv1.com\\\" or (resp_domain startswith_cs \\\"lh\\\" and resp_domain endswith_cs \\\".google.com\\\")) \\r\\n    or (resp_domain == \\\"s.ytimg.com\\\" or resp_domain == \\\"script.google.com\\\" or resp_domain == \\\"sheets.google.com\\\" or resp_domain == \\\"slides.google.com\\\" or resp_domain == \\\"takeout.google.com\\\" or resp_domain == \\\"talk.google.com\\\" or resp_domain == \\\"video.google.com\\\" or resp_domain endswith_cs \\\".client-channel.google.com\\\" or (resp_domain contains_cs \\\".clients\\\" and resp_domain endswith_cs \\\".google.com\\\") or resp_domain endswith_cs \\\".docs.google.com\\\" or resp_domain endswith_cs \\\".drive.google.com\\\" or resp_domain endswith_cs \\\".googleapis.com\\\" or resp_domain endswith_cs \\\".googleusercontent.com\\\" or resp_domain endswith_cs \\\".gstatic.com\\\") \\r\\n    or (resp_domain endswith_cs \\\".sharepoint.com\\\" or resp_domain == \\\"onedrive.live.com\\\")\\r\\n| summarize rbytes = sum(todouble(resp_ip_bytes))\\r\\n| extend MB=rbytes / 1024 / 1024\\r\\n| extend MBytes=round(MB, 2)\\r\\n| project MBytes\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"Volumeoftraffic\",\"defaultValue\":\"*\"},{\"parameterName\":\"line6\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Volume of traffic send to Cloud Storage\"}]}},\"leftContent\":{\"columnMatch\":\"MBytes\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Volume of traffic send to Cloud Storage\"},{\"type\":1,\"content\":{\"json\":\"💡 Click on the above tile to view more details\"},\"name\":\"text - 38\"},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line4\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 39\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and local_orig ==\\\"true\\\"\\r\\n        and (id_resp_p == 20 or id_resp_p == 21 or id_resp_p ==23)\\r\\n|summarize arg_max(TimeGenerated, *) by id_orig_h\\r\\n|project TimeGenerated, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"title\":\"Telnet & FTP Clients DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"id_orig_h\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"id_orig_h\",\"sortOrder\":2}]},\"conditionalVisibility\":{\"parameterName\":\"TelnetFTPClients\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Telnet & FTP Clients DrillDown\"},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line5\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 40\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type == \\\"metadata_dhcp\\\"\\r\\n        and mac startswith_cs \\\"B8:27:EB:\\\"\\r\\n|summarize arg_max(TimeGenerated, *) by mac\\r\\n|project TimeGenerated, assigned_ip, orig_hostname, mac\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"title\":\"Raspberry Devices DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"RaspberryDevices\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Raspberry Devices DrillDown\"},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line800\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 42\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_beacon\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n|summarize arg_max(TimeGenerated, *) by id_orig_h\\r\\n|project TimeGenerated, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p\\r\\n|order by TimeGenerated desc\",\"size\":0,\"title\":\"Beaconing hosts DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Beaconinghosts\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Beaconing hosts DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line6\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 41\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\t and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and isnotempty(resp_domain)\\r\\n        and (( resp_domain endswith_cs \\\".box.com\\\" or resp_domain endswith_cs \\\".box.net\\\"  or resp_domain endswith_cs \\\".boxcdn.net\\\"  or resp_domain endswith_cs \\\".boxcloud.com\\\"  or resp_domain endswith_cs \\\".boxrelay.com\\\" ) \\r\\n        or(resp_domain endswith_cs \\\".db.tt\\\" or resp_domain endswith_cs \\\".dropbox-dns.com\\\"   or resp_domain endswith_cs \\\".dropbox.com\\\"  or resp_domain endswith_cs \\\".dropboxapi.com\\\") \\r\\n        or (resp_domain == \\\"accounts.google.com\\\" or resp_domain == \\\"apis.google.com\\\" or \\\"clients*.google.com\\\" has resp_domain or resp_domain == \\\"docs.google.com\\\" or resp_domain == \\\"drive.google.com\\\" or resp_domain == \\\"gg.google.com\\\" or resp_domain == \\\"googledrive.com\\\" or resp_domain == \\\"gv1.com\\\" or (resp_domain startswith_cs \\\"lh\\\" and resp_domain endswith_cs \\\".google.com\\\")) \\r\\n        or (resp_domain == \\\"s.ytimg.com\\\" or resp_domain == \\\"script.google.com\\\" or resp_domain ==\\\"sheets.google.com\\\" or resp_domain == \\\"slides.google.com\\\" or resp_domain == \\\"takeout.google.com\\\" or resp_domain == \\\"talk.google.com\\\" or resp_domain == \\\"video.google.com\\\" or resp_domain endswith_cs \\\".client-channel.google.com\\\" or (resp_domain contains_cs \\\".clients\\\"and resp_domain endswith_cs \\\".google.com\\\" ) or resp_domain endswith_cs \\\".docs.google.com\\\"  or resp_domain endswith_cs \\\".drive.google.com\\\" or resp_domain endswith_cs \\\".googleapis.com\\\"  or resp_domain endswith_cs \\\".googleusercontent.com\\\"   or resp_domain endswith_cs \\\".gstatic.com\\\") \\r\\n        or (resp_domain endswith_cs \\\".sharepoint.com\\\"  or resp_domain == \\\"onedrive.live.com\\\"))\\r\\n| extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|extend orig_ip_mb=todouble(orig_ip_bytes)/1024/1024\\r\\n|extend MBytes=round(orig_ip_mb,2)\\r\\n|order by MBytes desc\\r\\n|project TimeGenerated,uid,id_orig_h,orig_hostname,resp_domain,MBytes\\r\\n|order by TimeGenerated desc\\r\\n\\r\\n\",\"size\":0,\"title\":\"Volume of traffic send to Cloud DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Volumeoftraffic\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Volume of traffic send to Cloud DrillDown\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\"\\r\\n        and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n      and local_orig == \\\"false\\\"\\r\\n      and id_resp_p ==\\\"3389\\\"\\r\\n      and resp_ip_bytes != \\\"0\\\"\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), resp_domain = iff(isempty(resp_domain), \\\"Not Available\\\", resp_domain)\\r\\n| summarize count() by resp_hostname\\r\\n| project-rename [\\\"Internal Host\\\"] = resp_hostname, [\\\"Number of connections\\\"] = count_\",\"size\":0,\"showAnalytics\":true,\"title\":\"RDP servers exposed to the internet\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"name\":\"RDP servers exposed to the internet\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\"\\r\\n        and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n      and local_orig == \\\"false\\\"\\r\\n      and id_resp_p ==\\\"445\\\"\\r\\n      and resp_ip_bytes != \\\"0\\\"\\r\\n      and isnotempty(resp_hostname)\\r\\n| summarize count() by resp_hostname\\r\\n| project-rename [\\\"Internal Host\\\"] = resp_hostname, [\\\"Number of connections\\\"] = count_\",\"size\":0,\"showAnalytics\":true,\"title\":\"SMB servers exposed to Internet\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"SMB servers exposed to Internet\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\t and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\t and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and local_resp == \\\"true\\\"\\r\\n        and (id_resp_p ==\\\"20\\\" or id_resp_p == \\\"21\\\") \\r\\n        and resp_pkts != \\\"0\\\"\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| summarize count() by resp_hostname\\r\\n| project-rename [\\\"Internal Host\\\"] = resp_hostname, [\\\"Number of connections\\\"] = count_\",\"size\":0,\"showAnalytics\":true,\"title\":\"Internal unencrypted FTP Servers\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"Internal unencrypted FTP Servers\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\"\\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n                and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n                and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n      and local_resp == \\\"true\\\" \\r\\n          and id_resp_p == \\\"23\\\"\\r\\n          and resp_pkts != \\\"0\\\"\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| summarize count() by resp_hostname\\r\\n| project-rename [\\\"Internal Host\\\"] = resp_hostname, [\\\"Number of connections\\\"] = count_\",\"size\":0,\"showAnalytics\":true,\"title\":\"Internal Telnet Servers\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"Internal Telnet Servers\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and (id_resp_p == \\\"137\\\" or id_resp_p == \\\"5535\\\")\\r\\n        and protoName == \\\"UDP\\\" and resp_pkts != \\\"0\\\"\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| summarize count() by resp_hostname\\r\\n| order by count_ desc\\r\\n| project-rename [\\\"Internal Host\\\"] = resp_hostname, [\\\"Number of connections\\\"] = count_\",\"size\":0,\"showAnalytics\":true,\"title\":\"Host responding to NetBIOS / LLMNR\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"name\":\"Host responding to NetBIOS / LLMNR\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_httpsessioninfo\\\" \\r\\n        and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\t\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and (uri contains_cs \\\"admin\\\"  or uri contains_cs \\\"login\\\" or uri contains_cs \\\"setup\\\" or uri contains_cs \\\"update\\\" or uri contains_cs \\\"console\\\")\\r\\n        and method != \\\"CONNECT\\\"\\r\\n        and host !endswith_cs \\\".windowsupdate.com\\\"\\r\\n        and local_resp == \\\"true\\\"\\r\\n        and tostring(status_code) startswith_cs \\\"2\\\"\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| summarize count() by resp_hostname\\r\\n| order by count_ desc\\r\\n| project-rename [\\\"Internal Host\\\"] = resp_hostname, [\\\"Number of connections\\\"] = count_\",\"size\":0,\"showAnalytics\":true,\"title\":\"Suspect Internal Unencrypted web administration activities \",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"Suspect Internal Unencrypted web administration activities\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\nand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\nand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and local_resp==\\\"true\\\" and ((id_resp_p ==\\\"3668\\\" or id_resp_p ==\\\"5869\\\") or (id_resp_p==\\\"623\\\" and protoName ==\\\"UDP\\\"))\\r\\n| extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| summarize count() by resp_hostname\\r\\n| order by count_ desc\\r\\n| project-rename [\\\"Internal Host\\\"] = resp_hostname, [\\\"Number of connections\\\"] = count_\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"IPMI v2 Password Hash Disclosure\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"filter\":true}},\"name\":\"IPMI v2 Password Hash Disclosure\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_smbmapping\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n    and version==\\\"SMBv1\\\"\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), username = iff(isempty(username), \\\"Not Available\\\", username)\\r\\n| summarize arg_max(TimeGenerated, *) by id_orig_h, id_resp_h\\r\\n| project TimeGenerated,uid, id_orig_h, orig_hostname, version, username, id_resp_h, resp_hostname, id_resp_p, service, path\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"SMBv1 (Client and Server tuples)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TenantId\",\"formatter\":1,\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"SourceSystem\",\"formatter\":1},{\"columnMatch\":\"TimeGenerated\",\"formatter\":6},{\"columnMatch\":\"alertId_d\",\"formatter\":3,\"formatOptions\":{\"palette\":\"orange\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"SMBv1 (Client and Server tuples)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_dhcp\\\"\\r\\n    and mac startswith_cs \\\"B8:27:EB:\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by mac\\r\\n| project  TimeGenerated,assigned_ip, orig_hostname, mac\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Raspberry Pie Devices\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"Raspberry Pie Devices\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_beacon\\\"\\r\\n         and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n                 and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n                 and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n| extend resp_domain= iff(isempty(resp_domain), \\\"Not Available\\\", resp_domain),orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname),resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| summarize TOTAL_BEACON = count() by orig_hostname, resp_domains, resp_hostname, id_resp_h, beacon_type, service\\r\\n|project-rename [\\\"domains\\\"]=resp_domains\\r\\n| project orig_hostname, beacon_type, id_resp_h, [\\\"domains\\\"] ,service,TOTAL_BEACON\\r\\n|order by TOTAL_BEACON desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Beacons table\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TOTAL_BEACON\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"Beacons table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n\\tand ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n    and isnotempty(server_name) and isnotempty(orig_hostname)\\r\\n        and (version ==\\\"TLS1.0\\\" or version ==\\\"TLS1.1\\\" or version startswith_cs \\\"SSL\\\")\\r\\n        or (cipher contains_cs \\\"3DES\\\" or cipher contains_cs \\\"MD5\\\" or cipher contains_cs \\\"RC4\\\" or cipher contains_cs \\\"anon\\\" or cipher contains_cs \\\"CAMELLIA\\\")\\r\\n        and local_orig ==\\\"true\\\" \\r\\n        and local_resp==\\\"false\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by server_name, id_orig_h\\r\\n| project TimeGenerated,uid, id_orig_h, orig_hostname, id_resp_h, id_resp_p,version, server_name,cipher\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"TLS 1.0 / 1.1 (weak ciphers)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"TLS 1.0 / 1.1 (weak ciphers)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n        and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n        and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ((resp_domain endswith_cs  \\\".box.com\\\" or resp_domain endswith_cs  \\\".box.net\\\" or resp_domain endswith_cs  \\\".boxcdn.net\\\" or resp_domain endswith_cs \\\".boxcloud.com\\\" or resp_domain endswith_cs  \\\".boxrelay.com\\\")\\r\\n        or (resp_domain endswith_cs \\\".db.tt\\\" or resp_domain endswith_cs \\\".dropbox-dns.com\\\" or resp_domain endswith_cs \\\".dropbox.com\\\" or resp_domain endswith_cs \\\".dropboxapi.com\\\") \\r\\n        or (resp_domain ==\\\"accounts.google.com\\\" or resp_domain ==\\\"apis.google.com\\\" or (resp_domain startswith_cs \\\"clients\\\" and resp_domain endswith_cs \\\".google.com\\\") or resp_domain ==\\\"docs.google.com\\\" or resp_domain ==\\\"drive.google.com\\\" or resp_domain ==\\\"gg.google.com\\\" or resp_domain ==\\\"googledrive.com\\\" or resp_domain ==\\\"gv1.com\\\" or (resp_domain startswith_cs \\\"lh\\\" and resp_domain endswith_cs \\\".google.com\\\")) \\r\\n        or (resp_domain ==\\\"s.ytimg.com\\\" or resp_domain ==\\\"script.google.com\\\" or resp_domain ==\\\"sheets.google.com\\\" or resp_domain ==\\\"slides.google.com\\\" or resp_domain ==\\\"takeout.google.com\\\" or resp_domain ==\\\"talk.google.com\\\" or resp_domain ==\\\"video.google.com\\\" or resp_domain endswith_cs \\\".client-channel.google.com\\\" or (resp_domain contains_cs \\\".clients\\\" and  resp_domain endswith_cs \\\".google.com\\\") or resp_domain endswith_cs \\\".docs.google.com\\\" or resp_domain endswith_cs \\\".drive.google.com\\\" or resp_domain endswith_cs \\\".googleapis.com\\\" or resp_domain endswith_cs \\\".googleusercontent.com\\\" or resp_domain endswith_cs \\\".gstatic.com\\\") \\r\\n        or (resp_domain endswith_cs \\\".sharepoint.com\\\" or resp_domain ==\\\"onedrive.live.com\\\"))\\r\\n| extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| extend orig_ip_mb=todouble(orig_ip_bytes)/1024/1024\\r\\n| extend MBytes=round(orig_ip_mb,2)\\r\\n| project TimeGenerated,uid,id_orig_h,orig_hostname,resp_domain,MBytes\\r\\n|order by MBytes,TimeGenerated desc\\r\\n| limit 200\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Unauthorized cloud storage usage\",\"timeContextFromParameter\":\"Timer\",\"exportParameterName\":\"ss\",\"exportDefaultValue\":\"*\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"MBytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"Unauthorized cloud storage usage\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 Refresh the web page to fetch details of recently collected events\"},\"name\":\"text - 42\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Security\"},\"name\":\"Security\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Single Host Analyzer\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"6c9c6b59-4b3a-4e4d-9aeb-9ecf9f2851a8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":3600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"TimeRange\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"23931020-e58b-41b0-9d31-0ac3f3893cb6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"HostName\",\"label\":\"Source hostname\",\"type\":1,\"isRequired\":true,\"value\":\"\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"HostName\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"b2fc3202-65a4-4ab9-93e5-e880107db92d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeSpan\",\"type\":2,\"value\":\"1h\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\\"label\\\": \\\"1 Hour\\\", \\\"value\\\": \\\"1h\\\"},\\r\\n    {\\\"label\\\": \\\"6 Hour\\\", \\\"value\\\": \\\"6h\\\"},\\r\\n    {\\\"label\\\": \\\"12 Hour\\\", \\\"value\\\": \\\"12h\\\"},\\r\\n    {\\\"label\\\": \\\"1 Day\\\", \\\"value\\\": \\\"24h\\\"}\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"label\":\"Time span\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"TimeSpan\"},{\"type\":1,\"content\":{\"json\":\"<br />\\r\\n\\r\\n\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| summarize count() by id_resp_p\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"parameterName\":\"Numberofuniquedestinationports\",\"defaultValue\":\"*\"},{\"parameterName\":\"line7\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Number of unique destination ports\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Number of unique destination ports\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\nand local_resp == true\\r\\n|summarize count()  by id_resp_h\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"parameterName\":\"Uniqueinternalhosts\",\"defaultValue\":\"*\"},{\"parameterName\":\"line8\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Unique internal hosts\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Unique internal hosts\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\nand local_resp == false\\r\\n|summarize count() by (id_resp_h)\\r\\n|count\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"parameterName\":\"Uniqueexternalhosts\",\"defaultValue\":\"*\"},{\"parameterName\":\"line9\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Unique external hosts\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Unique external hosts\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_beacon\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize count()\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"parameterName\":\"TotalBeacons\",\"parameterType\":1,\"defaultValue\":\"*\"},{\"parameterName\":\"lineetb100\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Total Beacons\"}]}},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Total Beacons\"},{\"type\":1,\"content\":{\"json\":\"💡 Click on the above tiles to view more details\"},\"name\":\"text - 49\"},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line7\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 46\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize [\\\"Total sessions\\\"]=dcount(uid), [\\\"Number of Hosts\\\"]=dcount(id_resp_h) by id_resp_p \\r\\n|order by [\\\"Total sessions\\\"] desc\\r\\n\\r\\n\",\"size\":0,\"title\":\"Number of unique destination ports DrillDown\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Numberofuniquedestinationports\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Number of unique destination ports DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line8\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 47\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\nand local_resp == true\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| summarize   [\\\"Total sessions\\\"]=dcount(uid),[\\\"Unique destination port\\\"]= dcount(id_resp_p) by id_resp_h,resp_hostname \\r\\n|order by [\\\"Total sessions\\\"] desc\\r\\n\\r\\n\",\"size\":0,\"title\":\"Unique internal hosts DrillDown\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Uniqueinternalhosts\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Unique internal hosts DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"line9\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 48\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\nand local_resp == \\\"false\\\" \\r\\n|summarize [\\\"Total sessions\\\"]=dcount(uid), [\\\"Unique destination port\\\"]=dcount(id_resp_p) by id_resp_h \\r\\n|order by [\\\"Total sessions\\\"] desc\\r\\n\",\"size\":0,\"title\":\"Unique external hosts DrillDown\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Uniqueexternalhosts\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Unique external hosts DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"lineetb100\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 50\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_beacon\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| project  TimeGenerated, uid, orig_hostname, id_orig_h, id_resp_h, id_resp_p, beacon_uid\\r\\n|order by TimeGenerated desc\\r\\n\\r\\n\",\"size\":0,\"title\":\"Total Beacons DrillDown\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"uid\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"uid\",\"sortOrder\":1}]},\"conditionalVisibility\":{\"parameterName\":\"TotalBeacons\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"Total Beacons DrillDown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == ('{HostName:label}')))\\r\\n| summarize obytes = sum(todouble(orig_ip_bytes)), rbytes = sum(todouble(resp_ip_bytes))\\r\\n| order by obytes desc\\r\\n| extend MB=((obytes/1024)/1024)\\r\\n| extend Megabytes=round(MB,2)\\r\\n| facet by Megabytes\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"count_Megabytes\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"count_Megabytes\",\"sortOrder\":2}],\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Total Outbound Traffic\"}]}},\"leftContent\":{\"columnMatch\":\"Megabytes\",\"formatter\":1,\"numberFormat\":{\"unit\":38,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Total Outbound Traffic\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| summarize obytes = sum(todouble(orig_ip_bytes)), rbytes = sum(todouble(resp_ip_bytes))\\r\\n| order by rbytes desc\\r\\n| extend MB=((rbytes/1024)/1024)\\r\\n| extend Megabytes=round(MB,2)\\r\\n| facet by Megabytes\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Total Inbound traffic\"}]}},\"leftContent\":{\"columnMatch\":\"Megabytes\",\"formatter\":1,\"numberFormat\":{\"unit\":38,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Total Inbound traffic\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize count()\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Number of sessions\"}]}},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Number of sessions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type==\\\"metadata_dns\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize count()\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Total DNS sessions\"}]}},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"Total DNS sessions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_httpsessioninfo\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize count()\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Total HTTP Sessions\"}]}},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"33.33\",\"name\":\"Total HTTP Sessions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_ssl\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize count()\",\"size\":4,\"showAnalytics\":true,\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Total SSL sessions\"}]}},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"33.33\",\"name\":\"Total SSL sessions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_kerberos_txn\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|extend orig_host_observed_privilege= iff(isempty(toint(orig_host_observed_privilege)), \\\"Not Available\\\", tostring(toint(orig_host_observed_privilege)))\\r\\n|extend privilege = case((toint(orig_host_observed_privilege)>=0 and toint(orig_host_observed_privilege)<=3), \\\"Low\\\",\\r\\n(toint(orig_host_observed_privilege)>=4 and toint(orig_host_observed_privilege)<=6), \\\"Medium\\\",\\r\\n(toint(orig_host_observed_privilege)>=10 and toint(orig_host_observed_privilege)<=10), \\\"High\\\",\\\"Unknown\\\")\\r\\n|project  orig_host_observed_privilege, privilege  \\r\\n|sort by orig_host_observed_privilege  asc  \\r\\n|limit 1     \\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"noDataMessage\":\"Host Privilege - The query returned no results.\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"Host Privilege\"}]}},\"leftContent\":{\"columnMatch\":\"orig_host_observed_privilege\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"},\"tooltipFormat\":{\"tooltip\":\"Host Privilege\"}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"33.33\",\"name\":\"Host Privilege\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| summarize count() by service\\r\\n\",\"size\":4,\"showAnnotations\":true,\"showAnalytics\":true,\"title\":\"Top Services\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Hello\",\"exportParameterName\":\"setTab\",\"exportDefaultValue\":\"Hello it's a Demo\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"createOtherGroup\":10,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"showPin\":false,\"name\":\"Top Services\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|extend resp_megabytes=((todouble(resp_ip_bytes)/1024)/1024) \\r\\n|summarize sum(resp_megabytes) by service\",\"size\":4,\"showAnnotations\":true,\"showAnalytics\":true,\"title\":\"Top Services by Inbound traffic volume\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Hello\",\"exportParameterName\":\"setTab\",\"exportDefaultValue\":\"Hello it's a Demo\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"createOtherGroup\":10}},\"showPin\":false,\"name\":\"Top Services by Inbound traffic volume\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_megabytes=((todouble(orig_ip_bytes)/1024)/1024)\\r\\n| summarize sum(orig_megabytes) by service\",\"size\":4,\"showAnnotations\":true,\"showAnalytics\":true,\"title\":\"Top Services by outbound traffic volume\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Hello\",\"exportParameterName\":\"setTab\",\"exportDefaultValue\":\"Hello it's a Demo\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"createOtherGroup\":10}},\"showPin\":false,\"name\":\"Top Services by outbound traffic volume\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize Count=count() by  (trim(@\\\"\\\\.0\\\",tostring(id_resp_p)))\\r\\n|top 15 by Count desc\\r\\n\",\"size\":4,\"showAnnotations\":true,\"showAnalytics\":true,\"title\":\"Top Responder Ports\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Hello\",\"exportParameterName\":\"setTab\",\"exportDefaultValue\":\"Hello it's a Demo\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"createOtherGroup\":15}},\"showPin\":false,\"name\":\"Top Responder Ports\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_dns\\\"\\r\\nand ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\nand id_resp_p  == \\\"53\\\"  \\r\\n|summarize Count=count() by qtype_name\\r\\n|top 10 by Count desc\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"DNS Query types\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"fhgjhkj\",\"exportParameterName\":\"fgjhkjlk\",\"exportDefaultValue\":\"fhgjhkj\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":15}},\"name\":\"DNS Query types\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize Count=count() by metadata_type,bin(TimeGenerated, {TimeSpan})\\r\\n|render barchart \\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Metadata type over time\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"hgbjk\",\"exportParameterName\":\"fghkjn\",\"exportDefaultValue\":\"ghkjlk\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"graphSettings\":{\"type\":0},\"chartSettings\":{\"yAxis\":[\"Count\"],\"createOtherGroup\":20}},\"name\":\"Metadata type over time\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\nand ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n|summarize inbound =  sum(todouble(resp_ip_bytes)),outbound = sum(todouble(orig_ip_bytes)) by  groupBin =bin(TimeGenerated, {TimeSpan})\\r\\n|render barchart\",\"size\":0,\"showAnalytics\":true,\"title\":\"Volume of traffic over time (in bytes)\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"gghkjlk\",\"exportParameterName\":\"jhknjm\",\"exportDefaultValue\":\"hjhknm\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"name\":\"Volume of traffic over time (in bytes)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_dns\\\" \\r\\n    and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n    and id_resp_p ==\\\"53\\\"\\r\\n| extend dns_answers=answers\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| summarize  [\\\"Total Queries\\\"] = count() by query, orig_hostname,qtype_name,total_replies, dns_answers\\r\\n| order by [\\\"Total Queries\\\"]  desc\\r\\n| project orig_hostname,query,qtype_name, total_replies, dns_answers,[\\\"Total Queries\\\"]\",\"size\":0,\"showAnalytics\":true,\"title\":\"DNS Table (Most Popular)\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"ghjk\",\"exportParameterName\":\"ghjbnl\",\"exportDefaultValue\":\"ghbjnkm\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total Queries\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"DNS Table (Most Popular)\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"group - 17\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n    and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n    and (local_orig==true and local_resp==false)\\r\\n| extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname),orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| extend MB=((todouble(orig_ip_bytes)/1024)/1024)\\r\\n| extend Megabytes=round(MB,2)\\r\\n|project uid, orig_hostname, id_orig_h, id_resp_h, Megabytes  \\r\\n| top 50 by Megabytes desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Outbound Data Flows in MBytes (Originated from this host)\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"ghbjnkm\",\"exportParameterName\":\"vhbjhn\",\"exportDefaultValue\":\"jnkmk,l\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"Top Outbound Data Flows in MBytes (Originated from this host)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\" VectraStream_function\\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n                and (local_orig==true and local_resp==false)\\r\\n                | extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname),orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n                | extend MB=((todouble(resp_ip_bytes)/1024)/1024)\\r\\n                | extend Megabytes=round(MB,2)\\r\\n                |project uid, orig_hostname, id_orig_h, id_resp_h, Megabytes  \\r\\n                | top 50 by Megabytes desc\\r\\n \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Inbound Data Flows in MBytes (Originated from this host)\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"Top Inbound Data Flows in MBytes (Originated from this host)\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"group - 17 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n and (local_orig==\\\"true\\\" and local_resp==\\\"true\\\")\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| extend MB=((todouble(resp_ip_bytes)/1024)/1024)\\r\\n| extend Megabytes=round(MB,2)\\r\\n| project uid, orig_hostname, id_orig_h, resp_hostname, id_resp_h, Megabytes  \\r\\n| top 50 by Megabytes desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Internal Data Flow in Mbytes (outbound)\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"Top Internal Data Flow in Mbytes (outbound)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_isession\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n  and (local_orig==\\\"true\\\" and local_resp==\\\"true\\\")\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| extend MB=((todouble(orig_ip_bytes)/1024)/1024) \\r\\n| extend Megabytes=round(MB,2)\\r\\n| project uid, orig_hostname, id_orig_h, resp_hostname, id_resp_h, Megabytes  \\r\\n| top 50 by Megabytes desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Internal Data Flow in Mbytes (inbound)\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Megabytes\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Megabytes\",\"sortOrder\":2}]},\"customWidth\":\"50\",\"name\":\"Top Internal Data Flow in Mbytes (inbound)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_isession\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n                and conn_state == \\\"SF\\\"\\r\\n| extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname),orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname),service= iff(isempty(service), \\\"Not Available\\\", service),conn_state= iff(isempty(conn_state), \\\"Not Available\\\", conn_state)\\r\\n| summarize id_orig_h = tostring(make_set(id_orig_h)),id_resp_h = tostring(make_set(id_resp_h)),Protocols = tostring(make_set(protoName)), orig_hostname = tostring(make_set(orig_hostname)),resp_domain = tostring(make_set(resp_domain)) by uid,service,id_resp_p,resp_hostname,duration\\r\\n|order by duration desc\\r\\n| extend  min_calc=(todouble(duration)/60000)  \\r\\n| extend  Minutes=round(min_calc,0)\\r\\n| limit 20\\r\\n| extend resp_domain= iff(isempty(resp_domain), \\\"Not Available\\\", resp_domain)\\r\\n|project uid, id_orig_h, orig_hostname, id_resp_h, resp_hostname,resp_domain, service, id_resp_p, Minutes\",\"size\":0,\"showAnalytics\":true,\"title\":\"Long live sessions\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Minutes\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Minutes\",\"sortOrder\":2}]},\"name\":\"Long live sessions\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type==\\\"metadata_dcerpc\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n  | extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| project  TimeGenerated ,uid, id_orig_h, orig_hostname, id_resp_h, resp_hostname, id_resp_p,domain, username, endpoint, hostname, operation\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"DCE-RPC Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"hostname\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"hostname\",\"sortOrder\":1}]},\"name\":\"DCE-RPC Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_ntlm\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| project TimeGenerated ,uid, id_orig_h,orig_hostname,id_resp_h, resp_hostname, id_resp_p, domain, hostname, username, success\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"NTLM Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"success\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"failed\",\"text\":\"False\"},{\"operator\":\"Default\",\"representation\":\"success\",\"text\":\"True\"}]}}],\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"orig_hostname\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"orig_hostname\",\"sortOrder\":1}]},\"name\":\"NTLM Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_kerberos_txn\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| project  TimeGenerated ,uid, id_orig_h,orig_hostname,id_resp_h, resp_hostname, id_resp_p, client,request_type,service, success\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Kerberos Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"success\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"4\",\"text\":\"False\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"Kerberos Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_ntlm\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| project TimeGenerated ,uid, id_orig_h,orig_hostname,id_resp_h, resp_hostname, id_resp_p, domain, hostname, username, success\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"NTLM Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"success\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"4\",\"text\":\"False\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"NTLM Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_ldap\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}'))) \\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| project TimeGenerated ,uid, id_orig_h,orig_hostname,id_resp_h, resp_hostname, id_resp_p, query,query_scope,result,result_count,result_code\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"LDAP Table\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"success_b\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"LDAP Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_smbfiles\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| summarize arg_max(TimeGenerated, *) by name\\r\\n| project TimeGenerated ,id_orig_h, orig_hostname, id_resp_h, resp_hostname, id_resp_p, version, path, action, name\\r\\n|order by TimeGenerated desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"SMB Files (Unique Names)\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"SMB Files (Unique Names)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_httpsessioninfo\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| extend body_mb=((todouble(resp_ip_bytes)/1024)/1024) \\r\\n| extend Resp_MB=round(body_mb,2)\\r\\n|project-rename [\\\"host_header\\\"]=host\\r\\n| project  TimeGenerated ,uid, id_orig_h, orig_hostname, user_agent,id_resp_h, id_resp_p, method, [\\\"host_header\\\"],status_code, uri, resp_mime_types,Resp_MB\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"HTTP Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Resp_MB\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"HTTP Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_ssl\\\" and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), resp_domain= iff(isempty(resp_domain), \\\"Not Available\\\", resp_domain), server_name= iff(isempty(server_name), \\\"Not Available\\\", server_name)\\r\\n| project TimeGenerated, uid, id_orig_h,orig_hostname, id_resp_h, resp_hostname,id_resp_p, server_name, client_version,next_protocol, cipher,ja3,ja3s\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"SSL Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"SSL Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_x509\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| extend expiration_time=unixtime_milliseconds_todatetime(todouble(certificate_not_valid_after))\\r\\n| project orig_hostname, san_dns, certificate_cn, certificate_subject,certificate_issuer, certificate_self_issued, certificate_key_alg, certificate_key_type, certificate_key_length,expiration_time\",\"size\":0,\"showAnalytics\":true,\"title\":\"Certificates Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"certificate_self_issued\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"4\",\"text\":\"False\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"Certificates Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_rdp\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname),client_build=iff(isnotempty(client_build), client_build, client_build)\\r\\n| project  TimeGenerated,uid, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p, cookie, keyboard_layout, client_build, result\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"RDP Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"RDP Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_ssh\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| project uid, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p, version, client, server, hassh, hasshServer\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Table SSH\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"Table SSH\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_smtp\\\" \\r\\n        and ('{HostName:label}' == '*' or (orig_hostname == tostring('{HostName:label}')))\\r\\n| extend resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), useragent= iff(isempty(useragent), \\\"Not Available\\\", useragent), from= iff(isempty(from), \\\"Not Available\\\", from),to_msg = iff(isempty(to_msg), \\\"Not Available\\\", to_msg), mail_from = iff(isempty(mail_from), \\\"Not Available\\\", mail_from), rcpt_to= iff(isempty(rcpt_to), \\\"Not Available\\\", rcpt_to), cc = iff(isempty(cc), \\\"Not Available\\\", cc)\\r\\n| project uid, date, orig_hostname, id_orig_h, resp_hostname, id_resp_h, id_resp_p, tls_b,mail_from, rcpt_to, from, to_msg, cc, subject, useragent\",\"size\":0,\"showAnalytics\":true,\"title\":\"SMTP Table\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"tls_b\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"failed\",\"text\":\"False\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"date\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"date\",\"sortOrder\":2}]},\"name\":\"SMTP Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 Refresh the web page to fetch details of recently collected events\"},\"name\":\"text - 49\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Host\"},\"name\":\"Host\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# DNS\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"aaaf635e-6584-4b26-8e5e-39b2bd15aaf3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Timer\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":3600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"Timer\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"6b54f87d-034c-43ed-8f11-f76287e8f0c5\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SoueceHostName\",\"label\":\"Source hostname\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SoueceHostName\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"50828f96-546f-42b5-bf84-8ba32c8ccbd9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceIp\",\"label\":\"Source IP\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SourceIp\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"86e66d6f-2bb0-4f50-a8a9-b2ee4061c081\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DestinationIP\",\"label\":\"Destination IP\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"DestinationIP\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"fcb0271b-9291-4bd0-a044-01e8129425a9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeSpan\",\"type\":2,\"value\":\"1h\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\\"label\\\": \\\"1 Hour\\\", \\\"value\\\": \\\"1h\\\"},\\r\\n    {\\\"label\\\": \\\"6 Hour\\\", \\\"value\\\": \\\"6h\\\"},\\r\\n    {\\\"label\\\": \\\"12 Hour\\\", \\\"value\\\": \\\"12h\\\"},\\r\\n    {\\\"label\\\": \\\"1 Day\\\", \\\"value\\\": \\\"24h\\\"}\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"label\":\"Time span\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"TimeSpan\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"029098eb-2e08-45dd-a3a0-c6d3f931ffc5\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"QueryType\",\"label\":\"Query Type\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"VectraStream_function\\r\\n| where metadata_type== \\\"metadata_dns\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by qtype_name\\r\\n|project qtype_name\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"Timer\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"QueryType\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"a88334ed-77a9-4801-b26c-28ae7973753e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SearchKeyWord\",\"label\":\"Search keyword\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SearchKeyWord\"},{\"type\":1,\"content\":{\"json\":\"<br />\"},\"name\":\"text - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n| where metadata_type == \\\"metadata_dns\\\"\\r\\n\\t\\tand ('{SoueceHostName:label}' == '*' or (orig_hostname == tostring('{SoueceHostName:label}')))\\r\\n        and ('{SourceIp:label}' == '*' or (id_orig_h == tostring('{SourceIp:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n        and ('*' in ({QueryType}) or qtype_name in ({QueryType}))\\r\\n        and id_resp_p ==53\\r\\n|summarize Requests=count() by orig_hostname,bin(TimeGenerated, {TimeSpan})\\r\\n|render areachart \\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 clients by volume of requests\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"orig_hostname_s\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Requests\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"orig_hostname_s\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"Requests\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"yAxis\":[\"Requests\"],\"createOtherGroup\":10}},\"name\":\"Top 10 clients by volume of requests\",\"styleSettings\":{\"margin\":\"2px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type == \\\"metadata_dns\\\"\\r\\n       and ('{SoueceHostName:label}' == '*' or (orig_hostname == tostring('{SoueceHostName:label}')))\\r\\n        and ('{SourceIp:label}' == '*' or (id_orig_h == tostring('{SourceIp:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n        and ('*' in ({QueryType}) or qtype_name in ({QueryType}))\\r\\n| summarize Count=count() by qtype_name, groupBin = bin(TimeGenerated, {TimeSpan})\\r\\n| render areachart\",\"size\":0,\"showAnalytics\":true,\"title\":\"DNS Queries by type over time\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"yAxis\":[\"Count\"]}},\"name\":\"DNS Queries by type over time\",\"styleSettings\":{\"margin\":\"2px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type == \\\"metadata_dns\\\"\\r\\n        and ('{SoueceHostName:label}' == '*' or (orig_hostname == tostring('{SoueceHostName:label}')))\\r\\n        and ('{SourceIp:label}' == '*' or (id_orig_h == tostring('{SourceIp:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\t\\tand ('*' in ({QueryType}) or qtype_name in ({QueryType}))\\r\\n        and id_resp_p == \\\"53\\\"\\r\\n|summarize Count=count() by qtype_name\\r\\n|order by qtype_name desc\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top Query Types\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top Query Type\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_dns\\\" \\r\\n        and ('{SoueceHostName:label}' == '*' or (orig_hostname == tostring('{SoueceHostName:label}')))\\r\\n        and ('{SourceIp:label}' == '*' or (id_orig_h == tostring('{SourceIp:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\t\\tand ('*' in ({QueryType}) or qtype_name in ({QueryType}))\\r\\n        and id_resp_p == \\\"53\\\"\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n| extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n| summarize Count=count() by orig_hostname, id_orig_h\\r\\n| sort by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Originators by Count\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"name\":\"Top Originators by Count\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_dns\\\" \\r\\n        and ('{SoueceHostName:label}' == '*' or (orig_hostname == tostring('{SoueceHostName:label}')))\\r\\n        and ('{SourceIp:label}' == '*' or (id_orig_h == tostring('{SourceIp:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\t\\tand ('*' in ({QueryType}) or qtype_name in ({QueryType}))\\r\\n        and id_resp_p == \\\"53\\\"\\r\\n        and rcode_name == \\\"NXDomain\\\"\\r\\n        and qtype_name != \\\"PTR\\\"\\r\\n//| make-series count() on TimeGenerated in range (ago(30d),now(),2d) by query\\r\\n|summarize Count=count() by query\\r\\n|order by Count desc\\r\\n|limit 10\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 Queries by Count to Non-Existent Domains\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"Top 10 Queries by Count to Non-Existent Domains\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_dns\\\" \\r\\n        and ('{SoueceHostName:label}' == '*' or (orig_hostname == tostring('{SoueceHostName:label}')))\\r\\n        and ('{SourceIp:label}' == '*' or (id_orig_h == tostring('{SourceIp:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\t\\tand ('*' in ({QueryType}) or qtype_name in ({QueryType}))\\r\\n| mv-expand todynamic(query) \\r\\n| extend querylength=strlen(query)\\r\\n| summarize count() by querylength, orig_hostname\\r\\n| order by querylength, count_ desc\\r\\n| project orig_hostname, querylength, count_\\r\\n| limit 500\",\"size\":0,\"showAnalytics\":true,\"title\":\"Query length by Host\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"scatterchart\"},\"name\":\"Query Length By Host\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where metadata_type == \\\"metadata_dns\\\"\\r\\n    and ('{SoueceHostName:label}' == '*' or (orig_hostname == tostring('{SoueceHostName:label}')))\\r\\n        and ('{SourceIp:label}' == '*' or (id_orig_h == tostring('{SourceIp:label}')))\\r\\n\\t\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\t\\tand ('*' in ({QueryType}) or qtype_name in ({QueryType}))\\r\\n| extend resp_hostname = iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname), orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|project-rename [\\\"dns_answers\\\"]=answers\\r\\n| project TimeGenerated, uid, id_orig_h,orig_hostname, id_resp_h, resp_hostname, id_resp_p, qtype_name, query, [\\\"dns_answers\\\"],total_answers,rejected\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"DNS Table\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"total_answers_d\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"rejected_b\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"failed\",\"text\":\"False\"},{\"operator\":\"Default\",\"representation\":\"Blank\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"100\",\"name\":\"DNS Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 Refresh the web page to fetch details of recently collected events\"},\"name\":\"text - 20\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNS\"},\"name\":\"DNS\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# SSL/x509\"},\"name\":\"text - 22\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"4755513f-9d62-48de-a2cd-5adb78495f53\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Timer\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":3600000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"Timer\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"d3a4111b-f265-49d2-b968-81c803fac8ba\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceHostname\",\"label\":\"Source hostname\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SourceHostname\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"6deb3c63-6bf5-43d6-bb48-ac23d3433359\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceIP\",\"label\":\"Source IP\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SourceIP\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9de88876-b43b-4429-8536-28f972756311\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DestinationIP\",\"label\":\"Destination IP\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"DestinationIP\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"91662e03-e1b3-4319-8209-ff8ec5cedd95\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Destinationport\",\"label\":\"Destination port\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"Destinationport\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"b21e67c2-fff0-49e9-8f03-dad19579ae79\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeSpan\",\"type\":2,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"1h\\\", \\\"label\\\":\\\"1 hour\\\", \\\"selected\\\":true  },\\r\\n    { \\\"value\\\":\\\"12h\\\", \\\"label\\\":\\\"12 hour\\\" },\\r\\n    { \\\"value\\\":\\\"24h\\\", \\\"label\\\":\\\"1 day\\\"}\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"label\":\"Time span\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"TimeSpan\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"fa288eef-d220-4317-95c5-b9b8daeb0bee\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SearchKeyWord\",\"label\":\"search keyword\",\"type\":1,\"isRequired\":true,\"value\":\"*\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SearchKeyWord\"},{\"type\":1,\"content\":{\"json\":\"<br />\"},\"name\":\"text - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n|summarize Count=count() by cipher\\r\\n|top 10 by Count desc\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top ciphers\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top ciphers\",\"styleSettings\":{\"margin\":\"2px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\" \\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}')) and isnotempty(version)\\r\\n|summarize Count=count() by version\\r\\n|top 10 by Count desc\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top TLS versions\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top TLS versions\",\"styleSettings\":{\"margin\":\"2px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n|summarize Count=count() by trim(@\\\"\\\\.0\\\",tostring(id_resp_p))\\r\\n|top 10 by Count desc\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top Destination ports\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"id_resp_p_d\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"id_resp_p_d\",\"sortOrder\":1}],\"tileSettings\":{\"showBorder\":false},\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top Destination ports\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\" \\r\\nand ('{SourceHostname:label}' == '*' or (orig_hostname has tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h has tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h has tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|summarize count() by orig_hostname\\r\\n| top 10 by count_\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top Source hosts (local)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top Source hosts (local)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n|summarize count() by  groupBin =bin(TimeGenerated, {TimeSpan})\\r\\n|render barchart\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"TLS sessions over time\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"name\":\"TLS sessions over time\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p== ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n|summarize count() by orig_hostname,groupBin =bin(TimeGenerated, {TimeSpan})\\r\\n| render barchart\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"TLS sessions over time per hostname\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"TLS sessions over time per hostname limit removed\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}')) and isnotempty(server_name)\\r\\n|summarize Count=count() by server_name\\r\\n|top 10 by Count desc\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top SNIs\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top SNIs\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n        and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}')) and isnotempty(server_name) and isnotempty(ja3) and isnotempty(ja3s)\\r\\n|summarize Count=count()by server_name, ja3, ja3s\\r\\n|sort by Count desc\\r\\n|limit 10\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top SNIs (Details)\",\"timeContextFromParameter\":\"Timer\",\"exportedParameters\":[{\"parameterName\":\"TopSNIs\",\"parameterType\":1,\"defaultValue\":\"*\"},{\"parameterName\":\"linesnidetails\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_3\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_3\",\"sortOrder\":2}]},\"name\":\"Top SNIs (Details)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 Click on a row in the above grid to view more details\"},\"name\":\"text - 25\"},{\"type\":1,\"content\":{\"json\":\"<hr style=\\\"border-top: 1.25px dotted red;background-color:#fff;\\\">\"},\"conditionalVisibility\":{\"parameterName\":\"linesnidetails\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"text - 26\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n| where  metadata_type ==\\\"metadata_ssl\\\" and ja3 == todynamic('{TopSNIs}')[\\\"ja3\\\"]\\r\\n|project server_name, ja3, ja3s\\r\\n\\r\\n\",\"size\":0,\"title\":\"Top SNIs (Details) DrillDown\",\"timeContextFromParameter\":\"Timer\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"TopSNIs\",\"comparison\":\"isNotEqualTo\",\"value\":\"*\"},\"name\":\"query - 24\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n|summarize Count=count()by cipher\\r\\n|order by Count asc\\r\\n|top 10 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Rare ciphers\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"filter\":true,\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_1\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_1\",\"sortOrder\":1}],\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"name\":\"Rare ciphers\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n|summarize Count=count()by ja3\\r\\n|order by Count asc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Rare JA3s\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Count\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"name\":\"Rare JA3s\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let AddMember = (\\r\\nVectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\" \\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname), \\r\\nserver_name= iff(isempty(server_name), \\\"Not Available\\\", server_name)\\r\\n|summarize count()by ja3\\r\\n|top 30 by count_\\r\\n|project ja3);\\r\\nVectraStream_function\\r\\n|where metadata_type ==\\\"metadata_ssl\\\" and ja3 in (AddMember)\\r\\n| summarize   Hostname=tostring(make_set(orig_hostname)),[\\\"Server Name (SNI)\\\"] = tostring(make_set(server_name)),Count = count() by ja3\\r\\n|  order by Count asc\\r\\n|project-rename [\\\"Total Seen\\\"]=Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Rare JA3s (Details)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"Rare JA3s (Details)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type ==\\\"metadata_x509\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n    and not (id_resp_p == 443 or id_resp_p == 993 or id_resp_p == 995 or id_resp_p == 465 or id_resp_p == 9001)\\r\\n|project-rename [\\\"Certificate Serial\\\"]=certificate_serial\\r\\n|summarize [\\\"Certificate Issuer\\\"] = make_set(certificate_issuer), [\\\"Responder Port\\\"] = make_set(id_resp_p), [\\\"Certificate CN\\\"] = make_set(certificate_cn), [\\\"Responder Host\\\"] = make_set(id_resp_h),count(certificate_cn)  by [\\\"Certificate Serial\\\"]\",\"size\":0,\"showAnalytics\":true,\"title\":\"SSL on non standard ports\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"SSL on non standard ports\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_x509\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n|extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|extend expiration_time = format_datetime((unixtime_seconds_todatetime(tolong(certificate_not_valid_after)/1000)),'MM/dd/yy HH:mm:ss')\\r\\n|summarize arg_max(TimeGenerated, *) by certificate_cn\\r\\n|project-rename [\\\"SAN dns\\\"]=san_dns,[\\\"Certificate CN\\\"]=certificate_cn,[\\\"Certificate Subject\\\"]=certificate_subject,[\\\"Certificate Issuer\\\"]=certificate_issuer,[\\\"Self-signed\\\"]=certificate_self_issued,[\\\"Key alg\\\"]=certificate_key_alg,[\\\"Key type\\\"]=certificate_key_type,[\\\"Key Length\\\"]=certificate_key_length,[\\\"Expiration date\\\"]=expiration_time\\r\\n|project orig_hostname, [\\\"SAN dns\\\"], [\\\"Certificate CN\\\"], [\\\"Certificate Subject\\\"],[\\\"Certificate Issuer\\\"], [\\\"Self-signed\\\"], [\\\"Key alg\\\"], [\\\"Key type\\\"], [\\\"Key Length\\\"],[\\\"Expiration date\\\"]\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Certificates\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"Certificates\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type ==\\\"metadata_ssl\\\" \\r\\n     and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n        and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{Destinationport:label}' == '*' or (id_resp_p == ('{Destinationport:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n| extend server_name= iff(isempty(server_name), \\\"Not Available\\\", server_name),resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n|project TimeGenerated, uid, id_orig_h,orig_hostname, id_resp_h, resp_hostname, id_resp_p, server_name,client_version, next_protocol,cipher,ja3,ja3s\\r\\n|order by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"SSL Table\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"TenantId\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"alertId_d\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"SSL Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 Refresh the web page to fetch details of recently collected events\"},\"name\":\"text - 23\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"SSL\"},\"name\":\"SSL\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Connection\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"59cbc4a8-a701-4e64-b1d2-457294802525\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Timer\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":3600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"Timer\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"164c8e9b-180e-4612-9905-de2f26b255fd\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceHostname\",\"label\":\"Source hostname\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":2592000000},\"defaultValue\":\"value::all\",\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SourceHostname\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"dcdf3996-7f16-41e4-943b-cfba842922ca\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceIP\",\"label\":\"Source IP\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SourceIP\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"bd9f9e25-56e0-4415-a7c9-b8cb5d199f40\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DestinationIP\",\"label\":\"Destination IP\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"DestinationIP\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"0e2b8d1c-835a-4843-9b89-03e0a269d3b0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DestinationPort\",\"label\":\"Destination port\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"DestinationPort\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"780884a0-27b1-46e3-aee2-f2bda25284df\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Services\",\"label\":\"Service\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"VectraStream_function \\r\\n|where isnotempty(service) and metadata_type==\\\"metadata_isession\\\"\\r\\n|summarize arg_max(TimeGenerated, *) by service\\r\\n|project service\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"Timer\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"Services\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"7ba5544a-8352-439b-8f45-a458cbe349b4\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeSpan\",\"type\":2,\"value\":\"1h\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\\"lable\\\": \\\"1 Hour\\\", \\\"value\\\": \\\"1h\\\"},\\r\\n    {\\\"lable\\\": \\\"6 Hour\\\", \\\"value\\\": \\\"6h\\\"},\\r\\n    {\\\"lable\\\": \\\"12 Hour\\\", \\\"value\\\": \\\"12h\\\"},\\r\\n    {\\\"lable\\\": \\\"1 Day\\\", \\\"value\\\": \\\"24h\\\"}\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"label\":\"Time span\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"TimeSpan\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"ce745ac1-b16e-4d64-8c52-0186b7db260c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SearchKeyWord\",\"label\":\"search keyword\",\"type\":1,\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"SearchKeyWord\"},{\"type\":1,\"content\":{\"json\":\"<br />\"},\"name\":\"text - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n   and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services}))\\r\\n|summarize Count=count()by service\\r\\n|top 10 by Count desc\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top Services by count\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top Services by count\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services}))\\r\\n|summarize Count=count() by trim(@\\\"\\\\.0\\\",tostring(id_resp_p))\\r\\n|top 10 by Count desc\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top Responder Ports by count\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"id_resp_p_d\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"id_resp_p_d\",\"sortOrder\":1}],\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top Responder Ports by count\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services}))\\r\\n|extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|summarize Count=count() by orig_hostname\\r\\n|top 10 by Count desc\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top Originators (sources) by # of connections\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top Originators (sources) by # of connections\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services}))\\r\\n|summarize Count=count() by id_resp_h\\r\\n|top 10 by Count desc\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"Top Responders (destinations) by # of connections\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":10}},\"name\":\"Top Responders (destinations) by # of connections\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function\\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services}))\\r\\n|extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname),resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname)\\r\\n|summarize Count = count() by orig_hostname,groupBin =bin(TimeGenerated, {TimeSpan})\\r\\n|render barchart\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Connection events (Top host)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":2}]},\"name\":\"Connection events (Top host)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services})) and isnotempty(orig_hostname)\\r\\n|extend orig_megabytes=((todouble(orig_ip_bytes)/1024)/1024) \\r\\n|extend resp_megabytes=((todouble(resp_ip_bytes)/1024)/1024) \\r\\n|extend MB_in=round(resp_megabytes,2) \\r\\n|extend MB_out=round(orig_megabytes,2) \\r\\n|extend Total=MB_in+MB_out\\r\\n|extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|summarize [\\\"Inbound Volume\\\"]=sum(MB_in), [\\\"Outbound Volume\\\"]=sum(MB_out), [\\\"Total Volume\\\"]=sum(Total) by orig_hostname,service\\r\\n|top 50 by [\\\"Total Volume\\\"] desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Volume of traffic per service by Origin Host (in Mb)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"orig_hostname_s\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Inbound Volume\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"orig_hostname_s\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"orig_hostname_s\"},\"centerContent\":{\"columnMatch\":\"Inbound Volume\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"nodeIdField\":\"orig_hostname_s\",\"sourceIdField\":\"orig_hostname_s\",\"targetIdField\":\"Inbound Volume\",\"graphOrientation\":3,\"showOrientationToggles\":false,\"staticNodeSize\":100,\"hivesMargin\":5},\"chartSettings\":{\"xAxis\":\"orig_hostname\",\"yAxis\":[\"Outbound Volume\",\"Inbound Volume\",\"Total Volume\",\"orig_hostname\",\"service\"]},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"Inbound Volume\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"Inbound Volume\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"Inbound Volume\",\"heatmapPalette\":\"greenRed\"}}},\"name\":\"Volume of traffic per service by Origin Host (in Mb)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n        and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n        and ('*' in ({Services}) or service in ({Services}))\\r\\n        and (local_orig==true and local_resp==false)\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|summarize Protocols = tostring(make_set(protoName)), obytes = sum(todouble(orig_ip_bytes)), rbytes=sum(todouble(resp_ip_bytes)) by id_orig_h, orig_hostname, id_resp_h, uid\\r\\n|top 50 by obytes desc\\r\\n|extend MB = ((obytes/1024)/1024) \\r\\n|extend Megabytes=round(MB,2)\\r\\n|project uid, orig_hostname, id_orig_h, id_resp_h, Megabytes, Protocols\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Outbound Data Flows in MBytes (Originated from internal hosts)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Protocols\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Protocols\",\"sortOrder\":2}]},\"name\":\"Top Outbound Data Flows in MBytes (Originated from internal hosts)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n        and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n        and ('*' in ({Services}) or service in ({Services}))\\r\\n        and (local_orig==true and local_resp==false)\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|summarize Protocols = tostring(make_set(protoName)), obytes = sum(todouble(orig_ip_bytes)), rbytes=sum(todouble(resp_ip_bytes)) by id_orig_h, orig_hostname, id_resp_h, uid\\r\\n|top 50 by rbytes desc\\r\\n|extend MB = ((rbytes/1024)/1024) \\r\\n|extend Megabytes=round(MB,2)\\r\\n|project uid, orig_hostname, id_orig_h, id_resp_h, Megabytes, Protocols\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Inbound Data Flows in MBytes (Originated from internal hosts)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"Top Inbound Data Flows in MBytes (Originated from internal hosts)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services}))\\r\\n\\tand (local_orig ==\\\"true\\\" and local_resp == \\\"true\\\") and isnotempty(resp_hostname)\\r\\n|extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|summarize Protocols = tostring(make_set(protoName)), obytes = sum(todouble(orig_ip_bytes)), rbytes=sum(todouble(resp_ip_bytes)) by id_orig_h, orig_hostname, resp_hostname, id_resp_h, uid\\r\\n|order by obytes desc\\r\\n|limit 50\\r\\n|extend MB = ((obytes/1024)/1024) \\r\\n|extend Megabytes=round(MB,2)\\r\\n|project uid, orig_hostname, id_orig_h, resp_hostname, id_resp_h, Megabytes, Protocols\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Internal Data Flow in Mbytes (Outbound)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"Top Internal Data Flow in Mbytes (Outbound)\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n\\tand ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n\\tand ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n\\tand ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n\\tand ('*' in ({Services}) or service in ({Services}))\\r\\n\\tand (local_orig ==\\\"true\\\" and local_resp == \\\"true\\\") and isnotempty(resp_hostname)\\r\\n|extend orig_hostname = iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname)\\r\\n|summarize Protocols = tostring(make_set(protoName)), obytes = sum(todouble(orig_ip_bytes)), rbytes=sum(todouble(resp_ip_bytes)) by id_orig_h, orig_hostname, resp_hostname, id_resp_h, uid\\r\\n|top 50 by rbytes desc\\r\\n|extend MB = ((rbytes/1024)/1024) \\r\\n|extend Megabytes=round(MB,2)\\r\\n|project uid, orig_hostname, id_orig_h,resp_hostname, id_resp_h,  Megabytes, Protocols\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Internal Data Flow in Mbytes (Inbound)\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Megabytes\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"Top Internal Data Flow in Mbytes (Inbound)\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"group - 20\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraStream_function \\r\\n|where metadata_type == \\\"metadata_isession\\\"\\r\\n    and ('{SourceHostname:label}' == '*' or (orig_hostname == tostring('{SourceHostname:label}')))\\r\\n    and ('{SourceIP:label}' == '*' or (id_orig_h == tostring('{SourceIP:label}')))\\r\\n        and ('{DestinationIP:label}' == '*' or (id_resp_h == tostring('{DestinationIP:label}')))\\r\\n        and ('{DestinationPort:label}' == '*' or (id_resp_p == ('{DestinationPort:label}')))\\r\\n        and ('{SearchKeyWord:label}' == '*' or (* has '{SearchKeyWord:label}'))\\r\\n        and ('*' in ({Services}) or service in ({Services}))\\r\\n| extend orig_hostname= iff(isempty(orig_hostname), \\\"Not Available\\\", orig_hostname),resp_hostname= iff(isempty(resp_hostname), \\\"Not Available\\\", resp_hostname),conntate= iff(isempty(conn_state), \\\"Not Available\\\", conn_state),service= iff(isempty(service), \\\"Not Available\\\", service)\\r\\n| summarize id_orig_h = tostring(make_set(id_orig_h)),id_resp_h = tostring(make_set(id_resp_h)),Protocols = tostring(make_set(protoName)), orig_hostname = tostring(make_set(orig_hostname)),resp_domain = tostring(make_set(resp_domain)) by uid,service,duration\\r\\n| extend  min_calc=(todouble(duration)/60000)   \\r\\n| extend  Minutes=round(min_calc,0) \\r\\n|top 20 by duration desc\\r\\n| extend resp_domain= iff(isempty(resp_domain), \\\"Not Available\\\", resp_domain)\\r\\n|project uid, id_orig_h, orig_hostname, id_resp_h, resp_domain, service, Minutes\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Open/Active Long Lived Connections\",\"timeContextFromParameter\":\"Timer\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Minutes\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Minutes\",\"sortOrder\":2}]},\"customWidth\":\"100\",\"name\":\"Open/Active Long Lived Connections\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 Refresh the web page to fetch details of recently collected events\"},\"name\":\"text - 20\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Connection\"},\"name\":\"Connection\"}]},\"name\":\"Main\",\"styleSettings\":{\"showBorder\":true}}],\"fromTemplateId\":\"sentinel-AIVectraStream\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=AIVectraStream; logoFileName=; description=; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=AIVectraStreamWorkbook; templateRelativePath=AIVectraStreamWorkbook.json; subtitle=; provider=Vectra AI}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 1 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName1'),'/',variables('huntingQueryVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "VectraHighVolumeOfNXDOMAIN_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Potential Exfiltration over DNS",
                "category": "Hunting Queries",
                "query": "//Adjust the threshold as desired (default is 500)\nlet min_fail_query = 500;\nVectraStream\n| where metadata_type == \"metadata_dns\"\n| where rcode_name in~ ('NXDOMAIN', 'SERVFAIL')\n| summarize count() by orig_hostname, id_orig_h, bin(TimeGenerated, 1h)\n| where count_ > min_fail_query\n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for high volume of DNS resolutions which return non existent domain. \nMetadata required = metadata_dns"
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1048.003,T1071.004"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId1'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 1",
                "parentId": "[variables('huntingQueryId1')]",
                "contentId": "[variables('_huntingQuerycontentId1')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 2 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName2'),'/',variables('huntingQueryVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "VectraMaliciousToolFileCopy_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Malicious Tools File Copy",
                "category": "Hunting Queries",
                "query": "let suspicious_names = dynamic([\"bloodhound.py\",\"BloodHound.py\",\"ADRecon.ps1\",\"ADRecon\",\"CrackMapExec\",\"crackmapexec\",\"Invoke-HoneypotBuster.ps1\",\"HoneypotBuster\",\"impacket\",\"impacket-maste\",\"Inveigh\",\"Inveigh-master\",\"Inveigh.ps1\",\"Inveigh-relay.ps1\",\"LaZagne\",\"laZagne.py\",\"laZagne-master\",\"mimipenguin-maste\",\"mimipenguin.py\",\"mimikatz.exe\",\"mimidrv.sys\",\"mimilib.dll\",\"nishang\",\"Nishang.psm1\",\"nishang.psm1\",\"PowerLessShell\",\"csproj.bat\",\"PowerSploit\",\"PowerUpSQL\",\"PsExec.exe\",\"PsExec64.exe\",\"procdump.exe\",\"Procdump.exe\",\"lsass.dmp\",\"lsass.DMP\",\"ReflectiveDLLInjection\",\"inject.exe\",\"inject.arm.exe\",\"inject.x64.exe\",\"reflective_dll.x64.dll\",\"reflective_dll.dll\",\"fingerprint.py\",\"packets.py\",\"Responder.py\",\"Responder-master\",\"BrowserListener.py\",\"DHCP.py\",\"DHCP_Auto.sh\",\"FindSMB2UPTime.py\",\"FindSQLSrv.py\",\"Icmp-Redirect.py\",\"RelayPackets.py\",\"SMBRelay.py\",\"Export-PotentiallyCrackableAccounts.ps1\",\"Find-PotentiallyCrackableAccounts.ps1\",\"Get-TGSCipher.ps1\",\"RiskySPNs.psd1\",\"RiskySPNs.psm\",\"RiskySPNs-master\",\"SessionGopher.ps1\",\"BloodHound.zip\",\"WorsePDF\"]);\nVectraStream\n| where metadata_type == \"metadata_smbfiles\"\n| where name has_any (suspicious_names)\n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h, timestamp = TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for suspicious malicious file names copy over SMB.\nMetadata required = metadata_smbfiles"
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess,LateralMovement,Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1570"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId2'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 2",
                "parentId": "[variables('huntingQueryId2')]",
                "contentId": "[variables('_huntingQuerycontentId2')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 3 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName3'),'/',variables('huntingQueryVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "VectraNetbiosLLMNRUsage_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Potential LLMNR/NBT-NS Poisoning and SMB Relay",
                "category": "Hunting Queries",
                "query": "//whitelist IP addresses from the result  (default is empty)\nlet whitelist = dynamic([\"\"]);\nVectraStream\n| where metadata_type == \"metadata_isession\"\n| where id_resp_p == \"137\" or id_resp_p == \"5535\"\n| where protoName == \"UDP\"\n| where id_resp_h !in (whitelist)\n| extend HostCustomEntity = resp_hostname, IPCustomEntity = id_resp_h, timestamp = TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for potential LLMNR/NBT-NS Poisoning and SMB Relay. The host of interest is the one responding to such request.\nBy responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials.\nMetadata required = metadata_isession"
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess,Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1557.001"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId3'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 3",
                "parentId": "[variables('huntingQueryId3')]",
                "contentId": "[variables('_huntingQuerycontentId3')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 4 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName4'),'/',variables('huntingQueryVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "VectraPoshC2_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_4",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Possible PoshC2 Tunnel",
                "category": "Hunting Queries",
                "query": "VectraStream\n| where metadata_type == \"metadata_ssl\"\n| where ja3 == \"e84d3d1743f1da2f03fe6296bd97b7d6\"\n| project TimeGenerated, orig_hostname, id_orig_h, id_resp_h, id_resp_p, service, version, server_name, ja3\n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h, timestamp = TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches PoshC2 Tunnel.\nPoshC2 can use protocols like HTTPS for command and control traffic\nMetadata required = metadata_ssl"
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1071.001"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId4'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 4",
                "parentId": "[variables('huntingQueryId4')]",
                "contentId": "[variables('_huntingQuerycontentId4')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 5 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName5'),'/',variables('huntingQueryVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "VectraPotentialDCSync_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_5",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Potential DCSync Attack",
                "category": "Hunting Queries",
                "query": "//Add IP addresses of your Domain Dontrollers (default is empty)\nlet IpDC = dynamic([\"\"]);\n//Add hostnames of your Domain Dontrollers (default is empty)\nlet NameDC = dynamic([\"\"]);\nVectraStream\n| where metadata_type == \"metadata_dcerpc\"\n| where endpoint == \"drsuapi\" and operation == \"DRSGetNCChanges\"\n| where id_orig_h !in (IpDC) or orig_hostname !in (NameDC)\n| extend AccountCustomEntity = username, HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h, timestamp = TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for potential DCSync Attack. \nIn this attack, an adversary attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)\nMetadata required = metadata_dcerpc"
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1003.006"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId5'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 5",
                "parentId": "[variables('huntingQueryId5')]",
                "contentId": "[variables('_huntingQuerycontentId5')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 6 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName6'),'/',variables('huntingQueryVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "VectraSuspectedKali_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_6",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Possible Kali Linux Detected",
                "category": "Hunting Queries",
                "query": "VectraStream\n| where metadata_type == \"metadata_httpsessioninfo\"\n| where user_agent matches regex \".*[lL]inux.*[kK]ali.*\"\n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h, timestamp = TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches Kali Linux machine in your environment. \nMetadata required = metadata_httpsessioninfo"
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1048.003"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId6'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 6",
                "parentId": "[variables('huntingQueryId6')]",
                "contentId": "[variables('_huntingQuerycontentId6')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 7 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName7'),'/',variables('huntingQueryVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "VectraSuspiciousBeacon_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_7",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Beaconing Behaviors",
                "category": "Hunting Queries",
                "query": "//Whitelist source IP (default is empty)\nlet whitelist_src_ip = dynamic([\"\"]);\n//Whitelist domain names (default is empty)\nlet whitelist_domain = dynamic([\"\"]);\nVectraStream\n| where metadata_type == \"metadata_beacon\"\n| where id_orig_h !in (whitelist_src_ip) or orig_hostname !in (whitelist_domain)\n| summarize  arg_max(session_count, *) by orig_hostname, id_resp_h\n| project ts, orig_hostname, id_orig_h, id_resp_h, id_resp_p, beacon_type, resp_domains, session_count\n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for beaconing behavior. \nVectra uses its AI to enrich metadata and detect beaconing behaviors within your environment.\nMetadata required = metadata_beacon"
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1095,T1071,T1573,T1008,T1095,T1571,T1219"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId7'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 7",
                "parentId": "[variables('huntingQueryId7')]",
                "contentId": "[variables('_huntingQuerycontentId7')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 8 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName8'),'/',variables('huntingQueryVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "VectraSuspiciousLongDNSQueries_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_8",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Suspicious Long DNS Queries",
                "category": "Hunting Queries",
                "query": "VectraStream\n| where metadata_type == \"metadata_dns\"\n| extend querylength = strlen(['query'])\n| summarize count() by querylength, orig_hostname, id_orig_h\n| sort by querylength desc \n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches long DNS queries.\nA high volume of long DNS queries may indicate the usage of DNS Tunneling.\nMetadata required = metadata_dns"
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1071.004,T1048.003"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId8'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 8",
                "parentId": "[variables('huntingQueryId8')]",
                "contentId": "[variables('_huntingQuerycontentId8')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 9 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName9'),'/',variables('huntingQueryVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "VectraSuspiciousNbOfSubDomains_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_9",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Suspicious number of sub-domains",
                "category": "Hunting Queries",
                "query": "//Adjust the threshold as desired (default is 500)\nlet min_sub_domains = 500;\nVectraStream\n| where metadata_type == \"metadata_dns\"\n| extend top_domain = extract(@\"(?:(?P<rex_sub_domain>[^\\.\\s]+)\\.)??(?P<rex_domain>(?:(?P<rex_domain_no_tld>[^\\.\\s]+)\\.)?(?P<rex_tld>[^\\.\\s]{2,}))$\",2,['query'])\n| summarize sub_domains=dcount(['query']) by top_domain, orig_hostname, id_orig_h\n| where sub_domains > min_sub_domains\n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for number of sub-domains attached per domain\nA high volume of sub-domains may indicate the usage of DNS Tunneling.\nMetadata required = metadata_dns"
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1071.004,T1048.003"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId9'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 9",
                "parentId": "[variables('huntingQueryId9')]",
                "contentId": "[variables('_huntingQuerycontentId9')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Vectra AI Stream Hunting Query 10 with template",
        "displayName": "Vectra AI Stream Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName10'),'/',variables('huntingQueryVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "VectraUnsecuredCredsGPP_HuntingQueries Hunting Query with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Vectra_AI_Stream_Hunting_Query_10",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Vectra AI - Suspicious Unsecured Credentials Group Policy Preferences",
                "category": "Hunting Queries",
                "query": "//List of suspicipous name in SYSVOL share\nlet filenames = dynamic([\"scheduledTasks.xml\",\"groups.xml\",\"services.xml\",\"datasources.xml\",\"printers.xml\",\"drives.xml\"]);\nVectraStream\n| where metadata_type == \"metadata_smbfiles\"\n| where name contains (filenames)\n| where path matches regex \".*sysvol.*\"\n| where action == \"SMB::FILE_READ\" or action == \"SMB::FILE_OPEN\"\n| extend HostCustomEntity = orig_hostname, IPCustomEntity = id_orig_h, timestamp = TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for suspicious Unsecured Credential using GPP Attack. \nAn adversary may look for legacy GPPs containing credentials, stored in an insecure manner. GPPs files are all stored on the domain controller in the SYSVOL share.\nMetadata required = metadata_smbfiles"
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1552.006"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId10'),'/'))))]",
              "properties": {
                "description": "Vectra AI Stream Hunting Query 10",
                "parentId": "[variables('huntingQueryId10')]",
                "contentId": "[variables('_huntingQuerycontentId10')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "Vectra AI Stream",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra AI",
                  "email": "tme@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Vectra AI Stream",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra AI",
          "email": "tme@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId1')]",
              "version": "[variables('huntingQueryVersion1')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId2')]",
              "version": "[variables('huntingQueryVersion2')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId3')]",
              "version": "[variables('huntingQueryVersion3')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId4')]",
              "version": "[variables('huntingQueryVersion4')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId5')]",
              "version": "[variables('huntingQueryVersion5')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId6')]",
              "version": "[variables('huntingQueryVersion6')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId7')]",
              "version": "[variables('huntingQueryVersion7')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId8')]",
              "version": "[variables('huntingQueryVersion8')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId9')]",
              "version": "[variables('huntingQueryVersion9')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId10')]",
              "version": "[variables('huntingQueryVersion10')]"
            }
          ]
        },
        "firstPublishDate": "2021-10-18",
        "providers": [
          "Vectra AI"
        ],
        "categories": {
          "domains": [
            "Security – Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
