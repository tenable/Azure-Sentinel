{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Watchlists Utilities"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-watchlistsutilities",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "Watchlist-Add-HostToWatchList-alert-trigger": "Watchlist-Add-HostToWatchList-alert-trigger",
    "_Watchlist-Add-HostToWatchList-alert-trigger": "[variables('Watchlist-Add-HostToWatchList-alert-trigger')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "Watchlist-Add-HostToWatchList-alert-trigger",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "Watchlist-Add-HostToWatchList-incident-trigger": "Watchlist-Add-HostToWatchList-incident-trigger",
    "_Watchlist-Add-HostToWatchList-incident-trigger": "[variables('Watchlist-Add-HostToWatchList-incident-trigger')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "Watchlist-Add-HostToWatchList-incident-trigger",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2')))]",
    "Watchlist-Add-IPToWatchList-alert-trigger": "Watchlist-Add-IPToWatchList-alert-trigger",
    "_Watchlist-Add-IPToWatchList-alert-trigger": "[variables('Watchlist-Add-IPToWatchList-alert-trigger')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "Watchlist-Add-IPToWatchList-alert-trigger",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3')))]",
    "Watchlist-Add-IPToWatchList-incident-trigger": "Watchlist-Add-IPToWatchList-incident-trigger",
    "_Watchlist-Add-IPToWatchList-incident-trigger": "[variables('Watchlist-Add-IPToWatchList-incident-trigger')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "Watchlist-Add-IPToWatchList-incident-trigger",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4')))]",
    "Watchlist-Add-URLToWatchList-alert-trigger": "Watchlist-Add-URLToWatchList-alert-trigger",
    "_Watchlist-Add-URLToWatchList-alert-trigger": "[variables('Watchlist-Add-URLToWatchList-alert-trigger')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "Watchlist-Add-URLToWatchList-alert-trigger",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5')))]",
    "Watchlist-Add-URLToWatchList-incident-trigger": "Watchlist-Add-URLToWatchList-incident-trigger",
    "_Watchlist-Add-URLToWatchList-incident-trigger": "[variables('Watchlist-Add-URLToWatchList-incident-trigger')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "Watchlist-Add-URLToWatchList-incident-trigger",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6')))]",
    "Watchlist-Add-UserToWatchList-alert-trigger": "Watchlist-Add-UserToWatchList-alert-trigger",
    "_Watchlist-Add-UserToWatchList-alert-trigger": "[variables('Watchlist-Add-UserToWatchList-alert-trigger')]",
    "playbookVersion7": "1.0",
    "playbookContentId7": "Watchlist-Add-UserToWatchList-alert-trigger",
    "_playbookContentId7": "[variables('playbookContentId7')]",
    "playbookId7": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId7'))]",
    "playbookTemplateSpecName7": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId7')))]",
    "Watchlist-Add-UserToWatchList-incident-trigger": "Watchlist-Add-UserToWatchList-incident-trigger",
    "_Watchlist-Add-UserToWatchList-incident-trigger": "[variables('Watchlist-Add-UserToWatchList-incident-trigger')]",
    "playbookVersion8": "1.0",
    "playbookContentId8": "Watchlist-Add-UserToWatchList-incident-trigger",
    "_playbookContentId8": "[variables('playbookContentId8')]",
    "playbookId8": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId8'))]",
    "playbookTemplateSpecName8": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId8')))]",
    "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-alert-trigger": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-alert-trigger",
    "_Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-alert-trigger": "[variables('Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-alert-trigger')]",
    "playbookVersion9": "1.0",
    "playbookContentId9": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-alert-trigger",
    "_playbookContentId9": "[variables('playbookContentId9')]",
    "playbookId9": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId9'))]",
    "playbookTemplateSpecName9": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId9')))]",
    "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-incident-trigger": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-incident-trigger",
    "_Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-incident-trigger": "[variables('Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-incident-trigger')]",
    "playbookVersion10": "1.0",
    "playbookContentId10": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-incident-trigger",
    "_playbookContentId10": "[variables('playbookContentId10')]",
    "playbookId10": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId10'))]",
    "playbookTemplateSpecName10": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId10')))]",
    "Watchlist-InformSubowner-IncidentTrigger": "Watchlist-InformSubowner-IncidentTrigger",
    "_Watchlist-InformSubowner-IncidentTrigger": "[variables('Watchlist-InformSubowner-IncidentTrigger')]",
    "playbookVersion11": "1.0",
    "playbookContentId11": "Watchlist-InformSubowner-IncidentTrigger",
    "_playbookContentId11": "[variables('playbookContentId11')]",
    "playbookId11": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId11'))]",
    "playbookTemplateSpecName11": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId11')))]",
    "Watchlist-CloseIncidentKnownIPs": "Watchlist-CloseIncidentKnownIPs",
    "_Watchlist-CloseIncidentKnownIPs": "[variables('Watchlist-CloseIncidentKnownIPs')]",
    "playbookVersion12": "1.0",
    "playbookContentId12": "Watchlist-CloseIncidentKnownIPs",
    "_playbookContentId12": "[variables('playbookContentId12')]",
    "playbookId12": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId12'))]",
    "playbookTemplateSpecName12": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId12')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-HostToWatchlist-AlertTrigger playbook",
        "displayName": "Add-HostToWatchlist-AlertTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Add-HostToWatchlist-AlertTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-HostToWatchlist-AlertTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_is_host_from_MDFC": {
                      "actions": {
                        "Condition_-_is_watchlist_available_-_MDFC": {
                          "actions": {
                            "For_each_-_MDFC": {
                              "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                              "actions": {
                                "Watchlists_-_Add_a_new_watchlist_item_-_MDFC": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": {
                                      "HostName": "@{items('For_each_-_MDFC')?['AzureID']}"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                      }
                                    },
                                    "method": "put",
                                    "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                                  }
                                }
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {
                            "Watchlists_-_Get_a_watchlist_by_alias_-_MDFC": [
                              "Succeeded",
                              "Failed"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Create_CSV_table_with_MDFC_hosts": {
                                "runAfter": {
                                  "For_each_MDFC_host_-_add_to_host_array_variable": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "Table",
                                "inputs": {
                                  "format": "CSV",
                                  "from": "@variables('Host')"
                                }
                              },
                              "For_each_MDFC_host_-_add_to_host_array_variable": {
                                "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                "actions": {
                                  "Append_to_array_variable_MDFC_host": {
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                      "name": "Host",
                                      "value": {
                                        "HostName": "@{items('For_each_MDFC_host_-_add_to_host_array_variable')?['AzureID']}"
                                      }
                                    }
                                  }
                                },
                                "type": "Foreach"
                              },
                              "Watchlists_-_Create_a_new_watchlist_with_data_-_MDFC": {
                                "runAfter": {
                                  "Create_CSV_table_with_MDFC_hosts": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "description": "hosts to watch",
                                    "displayName": "@{variables('Watchlist alias')}",
                                    "itemsSearchKey": "HostName",
                                    "rawContent": "@{body('Create_CSV_table_with_MDFC_hosts')}",
                                    "sourceType": "Local"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                    }
                                  },
                                  "method": "put",
                                  "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@outputs('Watchlists_-_Get_a_watchlist_by_alias_-_MDFC')['statusCode']",
                                  200
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Watchlists_-_Get_a_watchlist_by_alias_-_MDFC": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Condition_-_is_watchlist_available": {
                            "actions": {
                              "For_each": {
                                "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                "actions": {
                                  "Watchlists_-_Add_a_new_watchlist_item": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "body": {
                                        "HostName": "@{items('For_each')?['HostName']}"
                                      },
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                        }
                                      },
                                      "method": "put",
                                      "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                                    }
                                  }
                                },
                                "type": "Foreach"
                              }
                            },
                            "runAfter": {
                              "Watchlists_-_Get_a_watchlist_by_alias": [
                                "Succeeded",
                                "Failed"
                              ]
                            },
                            "else": {
                              "actions": {
                                "Create_CSV_table_with_hosts": {
                                  "runAfter": {
                                    "For_each_host_-_add_to_host_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table",
                                  "inputs": {
                                    "format": "CSV",
                                    "from": "@variables('Host')"
                                  }
                                },
                                "For_each_host_-_add_to_host_array_variable": {
                                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                  "actions": {
                                    "Append_to_array_variable_host": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "Host",
                                        "value": {
                                          "HostName": "@{items('For_each_host_-_add_to_host_array_variable')?['HostName']}"
                                        }
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                },
                                "Watchlists_-_Create_a_new_watchlist_with_data": {
                                  "runAfter": {
                                    "Create_CSV_table_with_hosts": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": {
                                      "description": "hosts to watch",
                                      "displayName": "@{variables('Watchlist alias')}",
                                      "itemsSearchKey": "HostName",
                                      "rawContent": "@{body('Create_CSV_table_with_hosts')}",
                                      "sourceType": "Local"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                      }
                                    },
                                    "method": "put",
                                    "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                                  }
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "equals": [
                                    "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                                    200
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          },
                          "Watchlists_-_Get_a_watchlist_by_alias": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "get",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@triggerBody()?['ProductName']",
                              "Azure Security Center"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Initialize_variable_-_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Host",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Add-HostToWatchlist-AlertTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add Host To Watchlist - Alert Trigger",
            "description": "This playbook will add a host entity from the alert to a new or existing watchlist.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "lastUpdateTime": "2022-04-25T00:00:00Z",
            "entities": [
              "Host"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add Host To Watchlist - Alert Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-HostToWatchlist-IncidentTrigger playbook",
        "displayName": "Add-HostToWatchlist-IncidentTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName2'),'/',variables('playbookVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "Add-HostToWatchlist-IncidentTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-HostToWatchlist-IncidentTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_is_watchlist_available_-_MDFC": {
                      "actions": {
                        "For_each_alert": {
                          "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                          "actions": {
                            "Condition_-_MDFC_alert": {
                              "actions": {
                                "For_each_MDFC_host": {
                                  "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                  "actions": {
                                    "Watchlists_-_Add_a_new_watchlist_item_-_MDFC": {
                                      "type": "ApiConnection",
                                      "inputs": {
                                        "body": {
                                          "HostName": "@{items('For_each_MDFC_host')?['AzureID']}"
                                        },
                                        "host": {
                                          "connection": {
                                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                          }
                                        },
                                        "method": "put",
                                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "else": {
                                "actions": {
                                  "For_each_host": {
                                    "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                    "actions": {
                                      "Watchlists_-_Add_a_new_watchlist_item": {
                                        "type": "ApiConnection",
                                        "inputs": {
                                          "body": {
                                            "HostName": "@{items('For_each_host')?['HostName']}"
                                          },
                                          "host": {
                                            "connection": {
                                              "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                            }
                                          },
                                          "method": "put",
                                          "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                                        }
                                      }
                                    },
                                    "type": "Foreach"
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@items('For_each_alert')?['properties']?['productName']",
                                      "Azure Security Center"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_a_watchlist_by_alias": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Create_CSV_table_with_hosts": {
                            "runAfter": {
                              "For_each_alert_with_no_watchlist": [
                                "Succeeded"
                              ]
                            },
                            "type": "Table",
                            "inputs": {
                              "format": "CSV",
                              "from": "@variables('Host')"
                            }
                          },
                          "For_each_alert_with_no_watchlist": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                              "Condition_-_MDFC_alert_-_no_watchlist": {
                                "actions": {
                                  "For_each_MDFC_host_-_add_to_host_array_variable": {
                                    "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                    "actions": {
                                      "Append_to_array_variable_MDFC_host": {
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                          "name": "Host",
                                          "value": {
                                            "HostName": "@{items('For_each_MDFC_host_-_add_to_host_array_variable')?['AzureID']}"
                                          }
                                        }
                                      }
                                    },
                                    "type": "Foreach"
                                  }
                                },
                                "else": {
                                  "actions": {
                                    "For_each_host_-_add_to_host_array_variable": {
                                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                      "actions": {
                                        "Append_to_array_variable_host": {
                                          "type": "AppendToArrayVariable",
                                          "inputs": {
                                            "name": "Host",
                                            "value": {
                                              "HostName": "@{items('For_each_host_-_add_to_host_array_variable')?['HostName']}"
                                            }
                                          }
                                        }
                                      },
                                      "type": "Foreach"
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "equals": [
                                        "@items('For_each_alert_with_no_watchlist')?['properties']?['productName']",
                                        "Azure Security Center"
                                      ]
                                    }
                                  ]
                                },
                                "type": "If"
                              }
                            },
                            "type": "Foreach"
                          },
                          "Watchlists_-_Create_a_new_watchlist_with_data": {
                            "runAfter": {
                              "Create_CSV_table_with_hosts": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "description": "hosts to watch",
                                "displayName": "@{variables('Watchlist alias')}",
                                "itemsSearchKey": "HostName",
                                "rawContent": "@{body('Create_CSV_table_with_hosts')}",
                                "sourceType": "Local"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Initialize_variable_-_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Host",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    },
                    "Watchlists_-_Get_a_watchlist_by_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Add-HostToWatchlist-IncidentTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add Host To Watchlist - Incident Trigger",
            "description": "This playbook will add a Host entity to a new or existing watchlist.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "mainSteps": [
              "**Logical flow to use this playbook**",
              "1. The analyst finished investigating an incident and one of its findings is a suspicious Host entity.",
              "2. The analyst wants to enter this entity into a watchlist (can be from block list type or allowed list).",
              "3. This playbook will run as a manual trigger from the full incident blade or the investigation graph blade, or automatically, and will add host to the selected watchlist."
            ],
            "lastUpdateTime": "2022-07-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add Host To Watchlist - Incident Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-IPToWatchlist-AlertTrigger playbook",
        "displayName": "Add-IPToWatchlist-AlertTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName3'),'/',variables('playbookVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "Add-IPToWatchlist-AlertTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-IPToWatchlist-AlertTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_is_watchlist_available": {
                      "actions": {
                        "For_each": {
                          "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                          "actions": {
                            "Watchlists_-_Add_a_new_watchlist_item": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "IpAddress": "@{items('For_each')?['Address']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_a_watchlist_by_alias": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Create_CSV_table_with_IPs": {
                            "runAfter": {
                              "For_each_IP_-_add_to_IP_array_variable": [
                                "Succeeded"
                              ]
                            },
                            "type": "Table",
                            "inputs": {
                              "format": "CSV",
                              "from": "@variables('IPs')"
                            }
                          },
                          "For_each_IP_-_add_to_IP_array_variable": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                              "Append_to_array_variable_IP": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "IPs",
                                  "value": {
                                    "IpAddress": "@{items('For_each_IP_-_add_to_IP_array_variable')?['Address']}"
                                  }
                                }
                              }
                            },
                            "type": "Foreach"
                          },
                          "Watchlists_-_Create_a_new_watchlist_with_data": {
                            "runAfter": {
                              "Create_CSV_table_with_IPs": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "description": "ips to watch",
                                "displayName": "@{variables('Watchlist alias')}",
                                "itemsSearchKey": "IpAddress",
                                "rawContent": "@{body('Create_CSV_table_with_IPs')}",
                                "sourceType": "Local"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Initialize_variable_-_IPs": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IPs",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    },
                    "Watchlists_-_Get_a_watchlist_by_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Add-IPToWatchlist-AlertTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add IP To Watchlist - Alert Trigger",
            "description": "This playbook will add a IP entity from the alert to a new or existing watchlist.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "lastUpdateTime": "2022-04-12T00:00:00Z",
            "entities": [
              "IP"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add IP To Watchlist - Alert Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-IPToWatchlist-IncidentTrigger playbook",
        "displayName": "Add-IPToWatchlist-IncidentTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName4'),'/',variables('playbookVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "Add-IPToWatchlist-IncidentTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-IPToWatchlist-IncidentTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_is_watchlist_available": {
                      "actions": {
                        "For_each": {
                          "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                          "actions": {
                            "Watchlists_-_Add_a_new_watchlist_item": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "IpAddress": "@{items('For_each')?['Address']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_a_watchlist_by_alias": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Create_CSV_table_with_IPs": {
                            "runAfter": {
                              "For_each_IP_-_add_to_IP_array_variable": [
                                "Succeeded"
                              ]
                            },
                            "type": "Table",
                            "inputs": {
                              "format": "CSV",
                              "from": "@variables('IPs')"
                            }
                          },
                          "For_each_IP_-_add_to_IP_array_variable": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                              "Append_to_array_variable_IP": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "IPs",
                                  "value": {
                                    "IpAddress": "@{items('For_each_IP_-_add_to_IP_array_variable')?['Address']}"
                                  }
                                }
                              }
                            },
                            "type": "Foreach"
                          },
                          "Watchlists_-_Create_a_new_watchlist_with_data": {
                            "runAfter": {
                              "Create_CSV_table_with_IPs": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "description": "ips to watch",
                                "displayName": "@{variables('Watchlist alias')}",
                                "itemsSearchKey": "IpAddress",
                                "rawContent": "@{body('Create_CSV_table_with_IPs')}",
                                "sourceType": "Local"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Initialize_variable_-_IPs": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IPs",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    },
                    "Watchlists_-_Get_a_watchlist_by_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Add-IPToWatchlist-IncidentTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add IP To Watchlist - Incident Trigger",
            "description": "This playbook will add a IP entity to a new or existing watchlist.",
            "mainSteps": [
              "**Logical flow to use this playbook**",
              "1. The analyst finished investigating an incident and one of its findings is a suspicious IP entity.",
              "2. The analyst wants to enter this entity into a watchlist (can be from block list type or allowed list).",
              "3. This playbook will run as a manual trigger from the full incident blade or the investigation graph blade, or automatically, and will add host to the selected watchlist."
            ],
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "lastUpdateTime": "2022-07-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add IP To Watchlist - Incident Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-URLToWatchlist-AlertTrigger playbook",
        "displayName": "Add-URLToWatchlist-AlertTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName5'),'/',variables('playbookVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "Add-URLToWatchlist-AlertTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-URLToWatchlist-AlertTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_is_watchlist_available": {
                      "actions": {
                        "For_each": {
                          "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                          "actions": {
                            "Watchlists_-_Add_a_new_watchlist_item": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Url": "@{items('For_each')?['Url']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_a_watchlist_by_alias": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Create_CSV_table_with_URLs": {
                            "runAfter": {
                              "For_each_URL_-_add_to_URL_array_variable": [
                                "Succeeded"
                              ]
                            },
                            "type": "Table",
                            "inputs": {
                              "format": "CSV",
                              "from": "@variables('URL')"
                            }
                          },
                          "For_each_URL_-_add_to_URL_array_variable": {
                            "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                            "actions": {
                              "Append_to_array_variable_URL": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "URL",
                                  "value": {
                                    "Url": "@{items('For_each_URL_-_add_to_URL_array_variable')?['Url']}"
                                  }
                                }
                              }
                            },
                            "type": "Foreach"
                          },
                          "Watchlists_-_Create_a_new_watchlist_with_data": {
                            "runAfter": {
                              "Create_CSV_table_with_URLs": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "description": "urls to watch",
                                "displayName": "@{variables('Watchlist alias')}",
                                "itemsSearchKey": "Url",
                                "rawContent": "@{body('Create_CSV_table_with_URLs')}",
                                "sourceType": "Local"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Entities_-_Get_URLs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/url"
                      }
                    },
                    "Initialize_variable_-_URL": {
                      "runAfter": {
                        "Entities_-_Get_URLs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "URL",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_URL": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    },
                    "Watchlists_-_Get_a_watchlist_by_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Add-URLToWatchlist-AlertTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add URL To Watchlist - Alert Trigger",
            "description": "This playbook will add a URL entity from the alert to a new or existing watchlist.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "lastUpdateTime": "2022-04-25T00:00:00Z",
            "entities": [
              "URL"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add URL To Watchlist - Alert Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-URLToWatchlist-IncidentTrigger playbook",
        "displayName": "Add-URLToWatchlist-IncidentTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName6'),'/',variables('playbookVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "Add-URLToWatchlist-IncidentTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-URLToWatchlist-IncidentTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_is_watchlist_available": {
                      "actions": {
                        "For_each": {
                          "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                          "actions": {
                            "Watchlists_-_Add_a_new_watchlist_item": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Url": "@{items('For_each')?['Url']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_a_watchlist_by_alias": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Create_CSV_table_with_URLs": {
                            "runAfter": {
                              "For_each_URL_-_add_to_URL_array_variable": [
                                "Succeeded"
                              ]
                            },
                            "type": "Table",
                            "inputs": {
                              "format": "CSV",
                              "from": "@variables('URL')"
                            }
                          },
                          "For_each_URL_-_add_to_URL_array_variable": {
                            "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                            "actions": {
                              "Append_to_array_variable_URL": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "URL",
                                  "value": {
                                    "Url": "@{items('For_each_URL_-_add_to_URL_array_variable')?['Url']}"
                                  }
                                }
                              }
                            },
                            "type": "Foreach"
                          },
                          "Watchlists_-_Create_a_new_watchlist_with_data": {
                            "runAfter": {
                              "Create_CSV_table_with_URLs": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "description": "urls to watch",
                                "displayName": "@{variables('Watchlist alias')}",
                                "itemsSearchKey": "Url",
                                "rawContent": "@{body('Create_CSV_table_with_URLs')}",
                                "sourceType": "Local"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Entities_-_Get_URLs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/url"
                      }
                    },
                    "Initialize_variable_-_URL": {
                      "runAfter": {
                        "Entities_-_Get_URLs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "URL",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_URL": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    },
                    "Watchlists_-_Get_a_watchlist_by_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Add-URLToWatchList-IncidentTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add URL To Watchlist - Incident Trigger",
            "description": "This playbook will add a URL entity to a new or existing watchlist.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "lastUpdateTime": "2022-07-21T00:00:00Z",
            "entities": [
              "URL"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add URL To Watchlist - Incident Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-UserToWatchlist-AlertTrigger playbook",
        "displayName": "Add-UserToWatchlist-AlertTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName7'),'/',variables('playbookVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "Add-UserToWatchlist-AlertTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion7')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-UserToWatchlist-AlertTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Accounts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "Initialize_variable_-_Users": {
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "accounts",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Users": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    },
                    "Watchlist_alias": {
                      "actions": {
                        "For_each": {
                          "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                          "actions": {
                            "Watchlists_-_Add_a_new_watchlist_item": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Name": "@{items('For_each')?['Name']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_a_watchlist_by_alias": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Create_CSV_table_with_users": {
                            "runAfter": {
                              "For_each_user_-_add_to_user_array_variable": [
                                "Succeeded"
                              ]
                            },
                            "type": "Table",
                            "inputs": {
                              "format": "CSV",
                              "from": "@variables('accounts')"
                            }
                          },
                          "For_each_user_-_add_to_user_array_variable": {
                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions": {
                              "Append_to_array_variable_user": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "accounts",
                                  "value": {
                                    "Name": "@{items('For_each_user_-_add_to_user_array_variable')?['Name']}"
                                  }
                                }
                              }
                            },
                            "type": "Foreach"
                          },
                          "Watchlists_-_Create_a_new_watchlist_with_data": {
                            "runAfter": {
                              "Create_CSV_table_with_users": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "description": "users to watch",
                                "displayName": "@{variables('Watchlist alias')}",
                                "itemsSearchKey": "Name",
                                "rawContent": "@{body('Create_CSV_table_with_users')}",
                                "sourceType": "Local"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Watchlists_-_Get_a_watchlist_by_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Add-UserToWatchlist-AlertTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId7'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId7')]",
                "contentId": "[variables('_playbookContentId7')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add User To Watchlist - Alert Trigger",
            "description": "This playbook will add a user entity from the alert to a new or existing watchlist.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "lastUpdateTime": "2022-04-25T00:00:00Z",
            "entities": [
              "Account"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add User To Watchlist - Alert Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Add-UserToWatchlist-IncidentTrigger playbook",
        "displayName": "Add-UserToWatchlist-IncidentTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName8'),'/',variables('playbookVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "Add-UserToWatchlist-IncidentTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion8')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Add-UserToWatchlist-IncidentTrigger",
              "type": "string"
            },
            "Watchlist Alias": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Accounts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "Initialize_variable_-_Users": {
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "accounts",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_Watchlist_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Users": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Watchlist alias",
                            "type": "string",
                            "value": "[[parameters('Watchlist Alias')]"
                          }
                        ]
                      }
                    },
                    "Watchlist_alias": {
                      "actions": {
                        "For_each": {
                          "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                          "actions": {
                            "Watchlists_-_Add_a_new_watchlist_item": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Name": "@{items('For_each')?['Name']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}/watchlistItem"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_a_watchlist_by_alias": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Create_CSV_table_with_users": {
                            "runAfter": {
                              "For_each_user_-_add_to_user_array_variable": [
                                "Succeeded"
                              ]
                            },
                            "type": "Table",
                            "inputs": {
                              "format": "CSV",
                              "from": "@variables('accounts')"
                            }
                          },
                          "For_each_user_-_add_to_user_array_variable": {
                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions": {
                              "Append_to_array_variable_user": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "accounts",
                                  "value": {
                                    "Name": "@{items('For_each_user_-_add_to_user_array_variable')?['Name']}"
                                  }
                                }
                              }
                            },
                            "type": "Foreach"
                          },
                          "Watchlists_-_Create_a_new_watchlist_with_data": {
                            "runAfter": {
                              "Create_CSV_table_with_users": [
                                "Succeeded"
                              ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "description": "users to watch",
                                "displayName": "@{variables('Watchlist alias')}",
                                "itemsSearchKey": "Name",
                                "rawContent": "@{body('Create_CSV_table_with_users')}",
                                "sourceType": "Local"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Watchlists_-_Get_a_watchlist_by_alias')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Watchlists_-_Get_a_watchlist_by_alias": {
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_alias": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(variables('Watchlist alias'))}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Add-UserToWatchlist-IncidentTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId8'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId8')]",
                "contentId": "[variables('_playbookContentId8')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add User To Watchlist - Incident Trigger",
            "description": "This playbook will add a User entity to a new or existing watchlist.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "mainSteps": [
              "**Logical flow to use this playbook**",
              "1. The analyst finished investigating an incident and one of its findings is a suspicious user entity.",
              "2. The analyst wants to enter this entity into a watchlist (can be from block list type or allowed list).",
              "3. This playbook will run as a manual trigger from the full incident blade or the investigation graph blade, or automatically, and will add host to the selected watchlist."
            ],
            "lastUpdateTime": "2022-07-21T00:00:00Z",
            "entities": [
              "Account"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add User To Watchlist - Incident Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP playbook",
        "displayName": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName9'),'/',variables('playbookVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion9')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP",
              "type": "string"
            },
            "WatchlistAlias": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Watchlist Alias"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "WatchlistAlias": {
                      "defaultValue": "[[parameters('WatchlistAlias')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Alert_-_Get_incident": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Cases/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}"
                      }
                    },
                    "Entities_-_Get_Accounts": {
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "For_each": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Condition_-_if_User_Is_VIP_": {
                          "actions": {
                            "Change_incident_severity": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Case/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(body('Alert_-_Get_incident')?['properties']?['CaseNumber'])}/Severity/@{encodeURIComponent('Critical')}"
                              }
                            },
                            "Change_incident_title_(V2)": {
                              "runAfter": {
                                "Change_incident_severity": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Value": "@{body('Alert_-_Get_incident')?['properties']?['Title']}; VIP USER - @{items('For_each')?['Name']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Case/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(body('Alert_-_Get_incident')?['properties']?['CaseNumber'])}/Title"
                              }
                            }
                          },
                          "runAfter": {
                            "Watchlists_-_Get_all_watchlist_Items_for_a_given_watchlist": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@string(body('Watchlists_-_Get_all_watchlist_items_for_a_given_watchlist'))",
                                  "@items('For_each')?['Name']"
                                ]
                              }
                            ]
                          },
                          "type": "If",
                          "description": "This condition returns true if IP was found in watchlist."
                        },
                        "Watchlists_-_Get_all_watchlist_Items_for_a_given_watchlist": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/watchlists/@{encodeURIComponent(parameters('WatchlistAlias'))}/watchlistItems"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-AlertTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId9'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId9')]",
                "contentId": "[variables('_playbookContentId9')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Watchlist - Change Incident Severity and Title if User VIP - Alert Trigger",
            "description": "This playbook leverages Microsoft Sentinel Watchlists in order to adapt the incidents severity which include User entity and check it against VIP user list.",
            "prerequisites": [
              "None"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Responder role to the Playbook's Managed Identity."
            ],
            "lastUpdateTime": "2022-04-12T00:00:00Z",
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Watchlist - Change Incident Severity and Title if User VIP - Alert Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP playbook",
        "displayName": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName10'),'/',variables('playbookVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion10')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP",
              "type": "string"
            },
            "WatchlistAlias": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Watchlist Alias"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "WatchlistAlias": {
                      "defaultValue": "[[parameters('WatchlistAlias')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Accounts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "For_each": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Condition_-_if_User_Is_VIP_": {
                          "actions": {
                            "Change_incident_severity": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Case/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/@{encodeURIComponent(triggerBody()?['workspaceId'])}/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(triggerBody()?['object']?['properties']?['incidentNumber'])}/Severity/@{encodeURIComponent('Critical')}"
                              }
                            },
                            "Change_incident_title_(V2)": {
                              "runAfter": {
                                "Change_incident_severity": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Value": "@{triggerBody()?['object']?['properties']?['title']}; VIP USER - @{items('For_each')?['Name']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Case/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/@{encodeURIComponent(triggerBody()?['workspaceId'])}/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(triggerBody()?['object']?['properties']?['incidentNumber'])}/Title"
                              }
                            }
                          },
                          "runAfter": {
                            "Watchlists_-_Get_all_watchlist_Items_for_a_given_watchlist": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@string(body('Watchlists_-_Get_all_watchlist_items_for_a_given_watchlist'))",
                                  "@items('For_each')?['Name']"
                                ]
                              }
                            ]
                          },
                          "type": "If",
                          "description": "This condition returns true if IP was found in watchlist."
                        },
                        "Watchlists_-_Get_all_watchlist_Items_for_a_given_watchlist": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/Watchlists/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/watchlists/@{encodeURIComponent(parameters('WatchlistAlias'))}/watchlistItems"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-IncidentTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId10'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId10')]",
                "contentId": "[variables('_playbookContentId10')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Watchlist - Change Incident Severity and Title if User VIP - Incident Trigger",
            "description": "This playbook leverages Microsoft Sentinel Watchlists in order to adapt the incidents severity which include User entity and check it against VIP user list",
            "prerequisites": [
              "None"
            ],
            "mainSteps": [
              "**Logical flow to use this playbook**",
              "For each User account included in the incident or alert (entities of type User):",
              "1. Check if User is included in the watchlist.",
              "2. If user is in the watchlist: ",
              "a. Change the incident severity to Critical",
              "b. Modify the incident title that include the User name and the text- **VIP User!!!**"
            ],
            "postDeployment": [
              "Assign Microsoft Sentinel Contributor role to the Playbook's Managed Identity"
            ],
            "lastUpdateTime": "2022-07-21T00:00:00Z",
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Watchlist - Change Incident Severity and Title if User VIP - Incident Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "InformSubowner-Watchlists-IncidentTrigger playbook",
        "displayName": "InformSubowner-Watchlists-IncidentTrigger playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName11'),'/',variables('playbookVersion11'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName11'))]"
      ],
      "properties": {
        "description": "InformSubowner-Watchlists-IncidentTrigger Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion11')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "InformSubowner-Watchlists-IncidentTrigger",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "Office365ConnectionName": "[[concat('office365', parameters('PlaybookName'))]",
            "MicrosoftTeamsConnectionName": "[[concat('teams', parameters('PlaybookName'))]",
            "AzureMonitorLogsConnectionName": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]",
            "_connection-3": "[[variables('connection-3')]",
            "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]",
            "_connection-4": "[[variables('connection-4')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('Office365ConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('Office365ConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureMonitorLogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureMonitorLogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftTeamsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('MicrosoftTeamsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-4')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Watchlist-InformSubowner",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftTeamsConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  },
                  "actions": {
                    "For_each_Alert": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Post_a_message_as_the_Flow_bot_to_a_user": {
                              "inputs": {
                                "body": {
                                  "messageBody": " Hi  @{body('Run_query_and_list_results_-_Get_Watchlist')?['value'][0]['OwnerName']}\n\nA new alert was triggered on your subscription: @{body('Run_query_and_list_results_-_Get_Watchlist')?['value'][0]['SubscriptionName']} by Azure Security Center.\n\nAn incident was created in Microsoft Sentinel.\n\nAlert title: @{items('For_each_Alert')?['properties']?['alertDisplayName']}\n\nDescription: @{items('For_each_Alert')?['properties']?['description']}\n\nThe Azure resource that triggered the alert:\n@{first(body('Filter_array_to_get_AzureResource_identifier'))['resourceId']}\n\nLink to the ASC alert:  @{items('For_each_Alert')?['properties']?['alertLink']}\n\nLink to the Microsoft Sentinel incident: @{triggerBody()?['object']?['properties']?['incidentUrl']}",
                                  "messageTitle": "New alert from Microsoft Sentinel in your subscription",
                                  "recipient": {
                                    "isAlert": true,
                                    "summary": "New Alert from Microsoft Sentinel in subscription @{body('Parse_JSON_to_get_subscriptionId')?['properties']?['effectiveSubscriptionId']}",
                                    "to": "@{body('Run_query_and_list_results_-_Get_Watchlist')?['value'][0]['OwnerEmail']}"
                                  }
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['teams']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/flowbot/actions/notification/recipienttypes/user"
                              },
                              "type": "ApiConnection"
                            },
                            "Send_an_email_(V2)": {
                              "inputs": {
                                "body": {
                                  "Body": "<p><strong>&nbsp;Hi &nbsp; </strong><strong>@{body('Run_query_and_list_results_-_Get_Watchlist')?['value'][0]['OwnerName']}</strong><strong><br>\n<br>\nA new alert was triggered on your subscription: </strong><strong>@{body('Run_query_and_list_results_-_Get_Watchlist')?['value'][0]['SubscriptionName']}</strong><strong>  by Azure Security Center.<br>\n<br>\nAn incident was created in Microsoft Sentinel.<br>\n<br>\n</strong>Alert title: <strong></strong><strong>@{items('For_each_Alert')?['properties']?['alertDisplayName']}</strong><strong><br>\n<br>\n</strong>Description:<strong> </strong><strong>@{items('For_each_Alert')?['properties']?['description']}</strong><strong><br>\n<br>\n</strong>The <strong>Azure resource</strong> that triggered the alert:<strong><br>\n</strong><strong>@{first(body('Filter_array_to_get_AzureResource_identifier'))['resourceId']}</strong><strong><br>\n<br>\n</strong>Link to the<strong> ASC alert: &nbsp;</strong><strong>@{items('For_each_Alert')?['properties']?['alertLink']}</strong><strong><br>\n<br>\n</strong>Link to the <strong>Microsoft Sentinel incident: </strong><strong>@{triggerBody()?['object']?['properties']?['incidentUrl']}</strong><strong></strong></p>",
                                  "Subject": "New Alert from Microsoft Sentinel in subscription @{body('Parse_JSON_to_get_subscriptionId')?['properties']?['effectiveSubscriptionId']}",
                                  "To": "@{body('Run_query_and_list_results_-_Get_Watchlist')?['value'][0]['OwnerEmail']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                              },
                              "runAfter": {
                                "Post_a_message_as_the_Flow_bot_to_a_user": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(body('Run_query_and_list_results_-_Get_Watchlist')?['value'])",
                                  0
                                ]
                              }
                            ]
                          },
                          "runAfter": {
                            "Run_query_and_list_results_-_Get_Watchlist": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        },
                        "Filter_array_to_get_AzureResource_identifier": {
                          "inputs": {
                            "from": "@items('For_each_Alert')?['properties']?['resourceIdentifiers']",
                            "where": "@equals(item()['type'], 'AzureResource')"
                          },
                          "type": "Query"
                        },
                        "Parse_JSON_to_get_subscriptionId": {
                          "description": "This action parses the additional data of the ASC alert, to get the subscription id field",
                          "inputs": {
                            "content": "@items('For_each_Alert')?['properties']?['additionalData']",
                            "schema": {
                              "properties": {
                                "ActionTaken": {
                                  "type": "string"
                                },
                                "Entities": {
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "properties": {
                                        "properties": {
                                          "address": {
                                            "type": "string"
                                          },
                                          "friendlyName": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "type",
                                      "kind",
                                      "properties"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "Hit Count": {
                                  "type": "string"
                                },
                                "Management URL": {
                                  "type": "string"
                                },
                                "ProcessingData": {
                                  "type": "string"
                                },
                                "Source IPs": {
                                  "type": "string"
                                },
                                "StoreAlertPublisher": {
                                  "type": "string"
                                },
                                "effectiveSubscriptionId": {
                                  "type": "string"
                                },
                                "resourceType": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "runAfter": {
                            "Filter_array_to_get_AzureResource_identifier": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson"
                        },
                        "Run_query_and_list_results_-_Get_Watchlist": {
                          "inputs": {
                            "body": "_GetWatchlist('SubOwners')\n| project SubscriptionId, OwnerName, SubscriptionName, OwnerEmail\n| where SubscriptionId == \"@{body('Parse_JSON_to_get_subscriptionId')?['effectiveSubscriptionId']}\"",
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/queryData",
                            "queries": {
                              "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                              "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                              "resourcetype": "Log Analytics Workspace",
                              "subscriptions": "@variables('SubscriptionID')",
                              "timerange": "Last 24 hours"
                            }
                          },
                          "runAfter": {
                            "Parse_JSON_to_get_subscriptionId": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        }
                      },
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "runAfter": {
                        "Initialize_variable_-_subscriptionId": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_variable_-_subscriptionId": {
                      "description": "The subscription where watchlist is under. Will be used to query watchlist in Azure Monitor Logs",
                      "inputs": {
                        "variables": [
                          {
                            "name": "SubscriptionID",
                            "type": "string",
                            "value": "[[subscription().subscriptionId]"
                          }
                        ]
                      },
                      "type": "InitializeVariable"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "office365": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                        "connectionName": "[[variables('Office365ConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                      },
                      "teams": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftTeamsConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftTeamsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]"
                      },
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                        "connectionName": "[[variables('AzureMonitorLogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId11'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId11')]",
                "contentId": "[variables('_playbookContentId11')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion11')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Watchlists - Inform Subscription Owner",
            "description": "This playbook leverages Microsoft Sentinel Watchlists in order to get the relevant subscription owner contact details, and inform about an ASC alert that occured in that subscription. It uses Microsoft Teams and Office 365 Outlook as ways to inform the sub owner.",
            "prerequisites": [
              "Create a Watchlist that this playbook will query:",
              "1.Create an input comma-separated value (CSV) file with the following columns: SubscriptionId, SubscriptionName, OwnerName, OwnerEmail, where each row represents a subscription in an Azure tenant.",
              "2. Upload the table to the Microsoft Sentinel Watchlist area. Make a note of the value you use as the Watchlist Alias, as you'll use it to query this watchlist from the playbook."
            ],
            "mainSteps": [
              "Note: This playbook utilizes two features currently in Preview.",
              "* Microsoft Sentinel Watchlists",
              "* Microsoft Sentinel Incident Trigger",
              "<img src='https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Watchlists%20Utilities/Playbooks/Watchlist-InformSubowner-IncidentTrigger/images/designerView.png?raw=true'/>"
            ],
            "lastUpdateTime": "2022-07-21T00:00:00Z",
            "entities": [
              "AzureResource"
            ],
            "tags": [
              "Notification"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Watchlists - Inform Subscription Owner",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName12')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Watchlist-CloseIncidentSafeIPs playbook",
        "displayName": "Watchlist-CloseIncidentSafeIPs playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName12'),'/',variables('playbookVersion12'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName12'))]"
      ],
      "properties": {
        "description": "Watchlist-CloseIncidentSafeIPs Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion12')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Watchlist-CloseIncidentSafeIPs",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic Apps resource) which will be created"
              }
            },
            "WatchlistName": {
              "type": "string",
              "metadata": {
                "description": "Name of watchlist that stores safe IP addresses. Should have a column 'ipaddress' which the ips are under."
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "AzureMonitorLogsConnectionName": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureMonitorLogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureMonitorLogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Watchlist-CloseIncidentSafeIps",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  },
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p>A playbook ran to check if the IPs in this incident are part of the Safe IPs watchlist (@{variables('WatchlistName')}).<br>\nThe following IPs &nbsp;found:<br>\n@{body('Create_HTML_table_-_safe')}<br>\n@{body('Create_HTML_table_-_not_safe')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Create_HTML_table_-_not_safe": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Condition": {
                      "actions": {
                        "Update_incident": {
                          "inputs": {
                            "body": {
                              "classification": {
                                "ClassificationAndReason": "BenignPositive - SuspiciousButExpected",
                                "ClassificationReasonText": "All the IPs in this incident were found in safe Ips wathclist @{variables('WatchlistName')}\n@{join(variables('SafeIPs'), ',')}"
                              },
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "status": "Closed"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "/Incidents"
                          },
                          "type": "ApiConnection"
                        }
                      },
                      "description": "This condition checks if all IPs involved in this alert are safe (found in watchlist)",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@length(variables('notSafeIPs'))",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Add_comment_to_incident_(V3)": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "Create_HTML_table_-_not_safe": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('notSafeIPs')"
                      },
                      "runAfter": {
                        "Create_HTML_table_-_safe": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Create_HTML_table_-_safe": {
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('SafeIPs')"
                      },
                      "runAfter": {
                        "For_each": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table"
                    },
                    "Entities_-_Get_IPs": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      },
                      "runAfter": {
                        "Initialize_variable_-_not_safe_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition_-_if_IP_found_in_watchlist": {
                          "actions": {
                            "Append_to_array_variable_-_add_to_safe_list": {
                              "inputs": {
                                "name": "SafeIPs",
                                "value": {
                                  "SafeIPs": "@{items('For_each')?['Address']}"
                                }
                              },
                              "type": "AppendToArrayVariable"
                            }
                          },
                          "description": "This condition returns true if IP was found in watchlist, and false if ip was not found.",
                          "else": {
                            "actions": {
                              "Append_to_array_variable_-_add_to_not_safe_list": {
                                "inputs": {
                                  "name": "notSafeIPs",
                                  "value": {
                                    "NotSafeIPs": "@{items('For_each')?['Address']}"
                                  }
                                },
                                "type": "AppendToArrayVariable"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(body('Run_query_and_list_results')?['value'])",
                                  0
                                ]
                              }
                            ]
                          },
                          "runAfter": {
                            "Run_query_and_list_results": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        },
                        "Run_query_and_list_results": {
                          "description": "Check if IP address is in watchlist",
                          "inputs": {
                            "body": "_GetWatchlist(\"@{variables('WatchlistName')}\") \n| where ipaddress == \"@{items('For_each')?['Address']}\"",
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/queryData",
                            "queries": {
                              "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                              "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                              "resourcetype": "Log Analytics Workspace",
                              "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                              "timerange": "Last 12 hours"
                            }
                          },
                          "type": "ApiConnection"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_variable_-_Watchlist_name": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "WatchlistName",
                            "type": "string",
                            "value": "[[parameters('WatchlistName')]"
                          }
                        ]
                      },
                      "type": "InitializeVariable"
                    },
                    "Initialize_variable_-_not_safe_IPs": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "notSafeIPs",
                            "type": "array"
                          }
                        ]
                      },
                      "runAfter": {
                        "Initialize_variable_-_safe_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable"
                    },
                    "Initialize_variable_-_safe_IPs": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "SafeIPs",
                            "type": "array"
                          }
                        ]
                      },
                      "runAfter": {
                        "Initialize_variable_-_Watchlist_name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                        "connectionName": "[[variables('AzureMonitorLogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId12'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId12')]",
                "contentId": "[variables('_playbookContentId12')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion12')]",
                "source": {
                  "kind": "Solution",
                  "name": "Watchlists Utilities",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Watchlist - close incidents with safe IPs",
            "description": "This playbook leverages Microsoft Sentinel Watchlists in order to close incidents which include IP addresses considered safe.",
            "prerequisites": [
              "<a href='https://docs.microsoft.com/azure/sentinel/watchlists?WT.mc_id=Portal-fx#create-a-new-watchlist'>Create a watchlist</a> for safe IPs with ip column named 'ipaddress' (can be changed in 'Run query' step). Watchlist should be located in the same workspace of the incidents."
            ],
            "mainSteps": [
              "For each Ip address included in the alert (entities of type IP):",
              "1. Check if IP is included in watchlist.",
              "- If IP is in the watchlist, consider the IP safe, **Add it to Safe IPs array.**",
              "- If IP is not in the watchlist, meaning that we are not sure it is safe, **Add it to not Safe IPs array.**",
              "2. Add a comment to the incident the list of safe and not safe IPs found.",
              "3. If the not safe list is empty (length == 0), close the incident as Benign Positive.",
              "** Configurations **",
              "- Configure the step 'Run query and list results with the identifiers of the Sentinel workspace where the watchlist is stored.",
              "- Configure the identity used in the 'Run query and list results' step with the Log Analytics Reader RBAC role on the Microsoft Sentinel resource group.",
              "- Configure the Managed Identity of the Logic App with the Microsoft Sentinel Responder RBAC role on the Microsoft Sentinel resource group.",
              "- The watchlist used in this example has at list one column named **ipaddress** which stores the safe address. See the csv file attached in this folder as an example.",
              "<img src='https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Watchlists%20Utilities/Playbooks/Watchlist-CloseIncidentKnownIPs/images/designerLight1.png'/>",
              "<img src='https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Watchlists%20Utilities/Playbooks/Watchlist-CloseIncidentKnownIPs/images/designerLight2.png'/>",
              "<img src='https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Watchlists%20Utilities/Playbooks/Watchlist-CloseIncidentKnownIPs/images/commentLight.png'/>"
            ],
            "lastUpdateTime": "2022-07-22T10:00:00Z",
            "entities": [
              "Ip"
            ],
            "tags": [
              "Triage"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Watchlist - close incidents with safe IPs ",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Watchlists Utilities",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-HostToWatchList-alert-trigger')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-HostToWatchList-incident-trigger')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-IPToWatchList-alert-trigger')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-IPToWatchList-incident-trigger')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-URLToWatchList-alert-trigger')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-URLToWatchList-incident-trigger')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-UserToWatchList-alert-trigger')]",
              "version": "[variables('playbookVersion7')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-Add-UserToWatchList-incident-trigger')]",
              "version": "[variables('playbookVersion8')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-alert-trigger')]",
              "version": "[variables('playbookVersion9')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-ChangeIncidentSeverityandTitleIFUserVIP-incident-trigger')]",
              "version": "[variables('playbookVersion10')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-InformSubowner-IncidentTrigger')]",
              "version": "[variables('playbookVersion11')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Watchlist-CloseIncidentKnownIPs')]",
              "version": "[variables('playbookVersion12')]"
            }
          ]
        },
        "firstPublishDate": "2022-05-23",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
