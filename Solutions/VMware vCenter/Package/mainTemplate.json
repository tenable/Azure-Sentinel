{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for VMware vCenter"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "vCenter",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-vcenter",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "cd8447d9-b096-4673-92d8-2a1e8291a125",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "parserVersion1": "1.0.0",
    "parserContentId1": "vCenter-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "vCenter",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]",
    "uiConfigId1": "VMwarevCenter",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "VMwarevCenter",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "f1fcb22c-b459-42f2-a7ee-7276b5f1309c",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "03e8a895-b5ba-49a0-aed3-f9a997d92fbe",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "VMware vCenter Workbook with template",
        "displayName": "VMware vCenter workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "vCenterWorkbook Workbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": ""
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **vCenter** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-vCenter-parser)\"},\"name\":\"text - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cd8447d9-b096-4673-92d8-2a1e8291a125\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Sets the time name for analysis\",\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Countrydb = externaldata(Network:string, geoname_id:string, continent_code:string, continent_name:string, country_iso_code:string, country_name:string)\\r\\n[@\\\"https://raw.githubusercontent.com/datasets/geoip2-ipv4/master/data/geoip2-ipv4.csv\\\"];\\r\\nlet UsersLocation = vCenter\\r\\n| where EventType has_any ('UserLoginSessionEvent', 'UserLogoutSessionEvent')\\r\\n| project EventTime,ClientIP;\\r\\nUsersLocation\\r\\n| extend Dummy=1\\r\\n| summarize count() by Hour=bin(EventTime,24h), ClientIP,Dummy\\r\\n| partition by Hour(\\r\\n                  lookup (Countrydb|extend Dummy=1) on Dummy\\r\\n                | where ipv4_is_match(ClientIP, Network)\\r\\n                )\\r\\n| summarize sum(count_) by country_name\",\"size\":0,\"title\":\"User Login Locations\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"map\"},\"customWidth\":\"60\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"vCenter\\r\\n| where EventType has_any (\\\"UserLoginSessionEvent\\\",\\\"UserLogoutSessionEvent\\\")\\r\\n| project TimeGenerated, ClientIP\\r\\n| summarize count() by Hour=bin(TimeGenerated,24h), ClientIP\",\"size\":0,\"title\":\"Login Events by IP Address\",\"color\":\"blueDark\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"graphSettings\":{\"type\":0},\"chartSettings\":{\"xAxis\":\"Hour\",\"yAxis\":[\"count_\"]}},\"customWidth\":\"40\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"55\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"vCenter\\r\\n| where EventType has_any ('UserLoginSessionEvent', 'UserLogoutSessionEvent')\\r\\n| project EventTime=EventTime, LoginAgent = UserAgent, Status=strcat(iff(EventType has 'UserLoginSessionEvent', '✅ - Logged in', '❌ - Logged out' )),User=Username, SourceAddress=ClientIP\",\"size\":2,\"title\":\"User Sessions\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"filter\":true},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"URL Category\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"purple\"}},\"showBorder\":false}},\"customWidth\":\"60\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"vCenter\\n| where EventType has_any ('UserLoginSessionEvent', 'UserLogoutSessionEvent')\\n| project User=Username, LoginAgent = UserAgent\\n| summarize count() by LoginAgent\",\"size\":2,\"title\":\"User - Login Agents\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"40\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"vCenter\\n| where EventType has_any (\\\"RoleAddedEvent\\\",\\\"RoleRemoved\\\",\\\"RoleUpdatedEvent\\\")\\n| project EventTime=EventTime, Hostname=Hostname, Operation= Operation, RoleName, NewRoleName,OldRoleName, RemovedPriviledges, AddedPriviledges\",\"size\":0,\"title\":\"Events- Access Management\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"65\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"vCenter\\n| where EventType has_any (\\\"RoleAddedEvent\\\",\\\"RoleRemoved\\\",\\\"RoleUpdatedEvent\\\")\\n| summarize count() by Operation, RoleName\",\"size\":2,\"aggregation\":3,\"title\":\"Access Mgmt - Operations\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"35\",\"name\":\"query - 1 - Copy\"}],\"fromTemplateId\":\"sentinel-vCenterWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": ".description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "VMware vCenter",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "vCenter Data Parser with template",
        "displayName": "vCenter Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "vCenter Data Parser with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "vCenter",
                "category": "Samples",
                "functionAlias": "vCenter",
                "query": "\nlet vCenter_Login =() {\r\nvcenter_CL\r\n| where Message has (\"UserLoginSessionEvent\")\r\n| parse Message  with * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity \"]\" * \"[User \" DomainName:string \"\\\\\" Username:string \"@\" SourceIP \" logged in as \" UserAgent:string \"]\"\r\n};\r\nlet vCenter_Logout =() {vcenter_CL\r\n| where Message has (\"UserLogoutSessionEvent\")\r\n| parse Message with * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity \"]\" * \"[User\" DomainName:string \"\\\\\" Username:string \"@\" SourceIP \" logged out (login time:\" LoginTime:string \", number of API invocations: \" APIInvocationCount:int \", user agent:\" UserAgent:string \")]\"\r\n};\r\nlet vCenter_Role=() {vcenter_CL\r\n| where Message has_any(\"RoleAddedEvent\",\"RoleRemovedEvent\")\r\n| parse Message with * \" \" * \" \" Hostname:string \"vpxd\" * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity:string \"]\" * \"[New role \" RoleName:string \" \" Operation:string  \"]\"\r\n};\r\nlet vCenter_RoleModified=() {vcenter_CL\r\n| where Message has (\"RoleUpdatedEvent\")\r\n| parse Message with * \" \" * \" \" Hostname:string \"vpxd\" * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity:string \"]\" * \"Previous name: \" OldRoleName:string \", new name \"NewRoleName:string \" Added privileges: \" AddedPriviledges:string \" Removed privileges: \" RemovedPriviledges:string \"]\"\r\n};\r\nunion vCenter_Login,vCenter_Logout,vCenter_Role,vCenter_RoleModified",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "vCenter"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "VMware vCenter",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "vCenter",
        "category": "Samples",
        "functionAlias": "vCenter",
        "query": "\nlet vCenter_Login =() {\r\nvcenter_CL\r\n| where Message has (\"UserLoginSessionEvent\")\r\n| parse Message  with * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity \"]\" * \"[User \" DomainName:string \"\\\\\" Username:string \"@\" SourceIP \" logged in as \" UserAgent:string \"]\"\r\n};\r\nlet vCenter_Logout =() {vcenter_CL\r\n| where Message has (\"UserLogoutSessionEvent\")\r\n| parse Message with * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity \"]\" * \"[User\" DomainName:string \"\\\\\" Username:string \"@\" SourceIP \" logged out (login time:\" LoginTime:string \", number of API invocations: \" APIInvocationCount:int \", user agent:\" UserAgent:string \")]\"\r\n};\r\nlet vCenter_Role=() {vcenter_CL\r\n| where Message has_any(\"RoleAddedEvent\",\"RoleRemovedEvent\")\r\n| parse Message with * \" \" * \" \" Hostname:string \"vpxd\" * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity:string \"]\" * \"[New role \" RoleName:string \" \" Operation:string  \"]\"\r\n};\r\nlet vCenter_RoleModified=() {vcenter_CL\r\n| where Message has (\"RoleUpdatedEvent\")\r\n| parse Message with * \" \" * \" \" Hostname:string \"vpxd\" * \"Event [\" EventId:string \"] [1-1] [\" EventTime:datetime \"] [\" EventType:string \"] [\" EventSeverity:string \"]\" * \"Previous name: \" OldRoleName:string \", new name \"NewRoleName:string \" Added privileges: \" AddedPriviledges:string \" Removed privileges: \" RemovedPriviledges:string \"]\"\r\n};\r\nunion vCenter_Login,vCenter_Logout,vCenter_Role,vCenter_RoleModified",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "VMware vCenter",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "VMware vCenter data connector with template",
        "displayName": "VMware vCenter template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "VMware vCenter data connector with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "VMware vCenter",
                  "publisher": "VMware",
                  "descriptionMarkdown": "The [vCenter](https://www.vmware.com/in/products/vcenter-server.html) connector allows you to easily connect your vCenter server logs with Microsoft Sentinel. This gives you more insight into your organization's data centers and improves your security operation capabilities.",
                  "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on a Kusto Function to work as expected. Follow the steps to use this Kusto functions alias **vCenter** in queries and workbooks. [Follow these steps to get this Kusto functions.](https://aka.ms/sentinel-vcenter-parser)",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "vCenter",
                      "baseQuery": "vCenter"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Total Events by Event Type",
                      "query": "vCenter \n | summarize count() by eventtype"
                    },
                    {
                      "description": "log in/out to vCenter Server",
                      "query": "vCenter \n | where eventtype in ('UserLogoutSessionEvent','UserLoginSessionEvent') \n | summarize count() by eventtype,eventid,username,useragent \n | top 10 by count_"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "vCenter_CL",
                      "lastDataReceivedQuery": "vCenter \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "vCenter \n      | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "write permission is required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "delete": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "This data connector depends on a parser (based on a Kusto Function) to work as expected. \n> 1. If you have not installed the vCenter solution from ContentHub then [Follow the steps](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/VCenter/Parsers/vCenter.txt) to use the Kusto function alias, **vCenter**"
                    },
                    {
                      "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Linux Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Linux Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "1. Install and onboard the agent for Linux"
                    },
                    {
                      "description": "Follow the configuration steps below to get vCenter server logs into Microsoft Sentinel. Refer to the [Azure Monitor Documentation](https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-json) for more details on these steps.\n For vCenter Server logs, we have issues while parsing the data by OMS agent data using default settings. \nSo we advice to capture the logs into custom table **vCenter_CL** using below instructions. \n1. Login to the server where you have installed OMS agent.\n2. Download config file [vCenter.conf](https://aka.ms/sentinel-vcenter-conf) \n\t\twget -v https://aka.ms/sentinel-vcenteroms-conf -O vcenter.conf \n3. Copy vcenter.conf to the /etc/opt/microsoft/omsagent/**workspace_id**/conf/omsagent.d/ folder. \n\t\tcp vcenter.conf /etc/opt/microsoft/omsagent/<<workspace_id>>/conf/omsagent.d/\n4. Edit vcenter.conf as follows:\n\n\t a. vcenter.conf uses the port **22033** by default. Ensure this port is not being used by any other source on your server\n\n\t b. If you would like to change the default port for **vcenter.conf** make sure that you dont use default Azure monotoring /log analytic agent ports I.e.(For example CEF uses TCP port **25226** or **25224**) \n\n\t c. replace **workspace_id** with real value of your Workspace ID (lines 13,14,15,18)\n5. Save changes and restart the Azure Log Analytics agent for Linux service with the following command:\n\t\tsudo /opt/microsoft/omsagent/bin/service_control restart\n6. Modify /etc/rsyslog.conf file - add below template preferably at the beginning / before directives section \n\t\t$template vcenter,\"%timestamp% %hostname% %msg%\\n\" \n7. Create a custom conf file in /etc/rsyslog.d/ for example 10-vcenter.conf and add following filter conditions.\n\n\t With an added statement you will need to create a filter which will specify the logs coming from the vcenter server to be forwarded to the custom table.\n\n\t reference: [Filter Conditions — rsyslog 8.18.0.master documentation](https://rsyslog.readthedocs.io/en/latest/configuration/filters.html)\n\n\t Here is an example of filtering that can be defined, this is not complete and will require additional testing for each installation.\n\t\t if $rawmsg contains \"vcenter-server\" then @@127.0.0.1:22033;vcenter\n\t\t & stop \n\t\t if $rawmsg contains \"vpxd\" then @@127.0.0.1:22033;vcenter\n\t\t & stop\n\t\t \n8. Restart rsyslog\n\t\t systemctl restart rsyslog",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "2. Configure the logs to be collected"
                    },
                    {
                      "description": "[Follow these instructions](https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.monitoring.doc/GUID-9633A961-A5C3-4658-B099-B81E0512DC21.html) to configure the vCenter to forward syslog. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
                      "title": "3. Configure and connect the vCenter device(s)"
                    }
                  ],
                  "metadata": {
                    "id": "VMwarevCenter",
                    "version": "1.0.0",
                    "kind": "dataConnector",
                    "source": {
                      "kind": "solution",
                      "name": "VMware vCenter"
                    },
                    "author": {
                      "name": "Microsoft"
                    },
                    "support": {
                      "tier": "microsoft",
                      "name": "Microsoft",
                      "email": "support@microsoft.com"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "VMware vCenter",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "VMware vCenter",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "VMware vCenter",
          "publisher": "VMware",
          "descriptionMarkdown": "The [vCenter](https://www.vmware.com/in/products/vcenter-server.html) connector allows you to easily connect your vCenter server logs with Microsoft Sentinel. This gives you more insight into your organization's data centers and improves your security operation capabilities.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "vCenter",
              "baseQuery": "vCenter"
            }
          ],
          "dataTypes": [
            {
              "name": "vCenter_CL",
              "lastDataReceivedQuery": "vCenter \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "vCenter \n      | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Total Events by Event Type",
              "query": "vCenter \n | summarize count() by eventtype"
            },
            {
              "description": "log in/out to vCenter Server",
              "query": "vCenter \n | where eventtype in ('UserLogoutSessionEvent','UserLoginSessionEvent') \n | summarize count() by eventtype,eventid,username,useragent \n | top 10 by count_"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "write permission is required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "delete": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "This data connector depends on a parser (based on a Kusto Function) to work as expected. \n> 1. If you have not installed the vCenter solution from ContentHub then [Follow the steps](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/VCenter/Parsers/vCenter.txt) to use the Kusto function alias, **vCenter**"
            },
            {
              "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux"
            },
            {
              "description": "Follow the configuration steps below to get vCenter server logs into Microsoft Sentinel. Refer to the [Azure Monitor Documentation](https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-json) for more details on these steps.\n For vCenter Server logs, we have issues while parsing the data by OMS agent data using default settings. \nSo we advice to capture the logs into custom table **vCenter_CL** using below instructions. \n1. Login to the server where you have installed OMS agent.\n2. Download config file [vCenter.conf](https://aka.ms/sentinel-vcenter-conf) \n\t\twget -v https://aka.ms/sentinel-vcenteroms-conf -O vcenter.conf \n3. Copy vcenter.conf to the /etc/opt/microsoft/omsagent/**workspace_id**/conf/omsagent.d/ folder. \n\t\tcp vcenter.conf /etc/opt/microsoft/omsagent/<<workspace_id>>/conf/omsagent.d/\n4. Edit vcenter.conf as follows:\n\n\t a. vcenter.conf uses the port **22033** by default. Ensure this port is not being used by any other source on your server\n\n\t b. If you would like to change the default port for **vcenter.conf** make sure that you dont use default Azure monotoring /log analytic agent ports I.e.(For example CEF uses TCP port **25226** or **25224**) \n\n\t c. replace **workspace_id** with real value of your Workspace ID (lines 13,14,15,18)\n5. Save changes and restart the Azure Log Analytics agent for Linux service with the following command:\n\t\tsudo /opt/microsoft/omsagent/bin/service_control restart\n6. Modify /etc/rsyslog.conf file - add below template preferably at the beginning / before directives section \n\t\t$template vcenter,\"%timestamp% %hostname% %msg%\\n\" \n7. Create a custom conf file in /etc/rsyslog.d/ for example 10-vcenter.conf and add following filter conditions.\n\n\t With an added statement you will need to create a filter which will specify the logs coming from the vcenter server to be forwarded to the custom table.\n\n\t reference: [Filter Conditions — rsyslog 8.18.0.master documentation](https://rsyslog.readthedocs.io/en/latest/configuration/filters.html)\n\n\t Here is an example of filtering that can be defined, this is not complete and will require additional testing for each installation.\n\t\t if $rawmsg contains \"vcenter-server\" then @@127.0.0.1:22033;vcenter\n\t\t & stop \n\t\t if $rawmsg contains \"vpxd\" then @@127.0.0.1:22033;vcenter\n\t\t & stop\n\t\t \n8. Restart rsyslog\n\t\t systemctl restart rsyslog",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "[Follow these instructions](https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.monitoring.doc/GUID-9633A961-A5C3-4658-B099-B81E0512DC21.html) to configure the vCenter to forward syslog. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
              "title": "3. Configure and connect the vCenter device(s)"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on a Kusto Function to work as expected. Follow the steps to use this Kusto functions alias **vCenter** in queries and workbooks. [Follow these steps to get this Kusto functions.](https://aka.ms/sentinel-vcenter-parser)"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "VMware vCenter Analytics Rule 1 with template",
        "displayName": "VMware vCenter Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "vCenter-Root impersonation_AnalyticalRules Analytics Rule with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when root impersonation occurs.",
                "displayName": "vCenter - Root impersonation",
                "enabled": false,
                "query": "vCenter\n | where Message has_all ('ImpersonateUser', 'VcIntegrity', 'root')\n | extend user = 'root'\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "vCenter",
                    "dataTypes": [
                      "vCenter"
                    ]
                  }
                ],
                "tactics": [
                  "PrivilegeEscalation"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "user"
                      }
                    ],
                    "entityType": "Account"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "VMware vCenter Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "VMware vCenter",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "VMware vCenter Analytics Rule 2 with template",
        "displayName": "VMware vCenter Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "vCenterRootLogin_AnalyticalRules Analytics Rule with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when root user login from uncommon IP address.",
                "displayName": "VMware vCenter - Root login",
                "enabled": false,
                "query": "let p_lookback = 14d;\nlet t_lookback = 1h;\nlet root_ips = vCenter\n| where TimeGenerated between (ago(p_lookback) .. ago(t_lookback))\n| where EventType has_all ('UserLoginSessionEvent', 'root', 'logged in')\n| summarize make_set(SourceIP,128);\nvCenter\n| where TimeGenerated > ago(t_lookback)\n| where EventType   has_all ('UserLoginSessionEvent', 'root', 'logged in')\n| where SourceIP   !in (root_ips)\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "vCenter",
                    "dataTypes": [
                      "vCenter"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "PrivilegeEscalation"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIP"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "VMware vCenter Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "VMware vCenter",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "VMware vCenter",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            }
          ]
        },
        "firstPublishDate": "2022-06-29",
        "providers": [
          "VMware"
        ],
        "categories": {
          "domains": [
            "IT Operations"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
