{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "AWS IAM - Enrich incident with user info",
        "description": "Once a new Microsoft Sentinel incident is created, this playbook gets triggered and performs the following actions:\n 1. Gets users from the incident.\n 2. Obtains information about users in AWS IAM.\n 3. Adds obtained information as a comment to the incident.",
        "prerequisites": [
            "1. Prior to the deployment of this playbook, [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector) needs to be deployed under the same subscription.",
            "2. Obtain AWS IAM API credentials. Refer to [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector/readme.md) documentation."
        ],
        "lastUpdateTime": "2022-08-10T12:00:00.000Z",
        "entities": [
            "Account"
        ],
        "tags": [
            "Enrichment"
        ],
		"postDeployment": [
			"**a. Authorize connections**", 
			"Once deployment is complete, authorize each connection.", 
			"1. Click the Microsoft Sentinel connection resource", 
			"2. Click edit API connection",
			"3. Click Authorize",
			"4. Sign in",
			"5. Click Save",
			"6. Repeat steps for other connections",
			"**b. Configurations in Sentinel**",
			"1. In Microsoft sentinel, analytical rules should be configured to trigger an incident that contains user name in AWS. In the Entity maping section of the analytics rule creation workflow, user name should be mapped to **Name** identitfier of the **Account** entity type. Check the [documentation](https://learn.microsoft.com/azure/sentinel/map-data-fields-to-entities) to learn more about mapping entities.",
			"2. Configure the automation rules to trigger the playbook. Check the [documentation](https://learn.microsoft.com/azure/sentinel/tutorial-respond-threats-playbook?tabs=LAC) to learn more about automation rules."
		],
        "support": {
            "tier": "microsoft"
        },
        "author": {
            "name": "Microsoft"
        },
		"releaseNotes": [
        {
          "version": "1.0.0",
          "title": "AWS IAM - Enrich incident with user info",
          "notes": [
            "Initial version"
          ]
        }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AWSIAM-EnrichIncidentWithUserInfo",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "aws_iam_functionapp_id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/aws-iam-', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_Accounts": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/account"
                            }
                        },
                        "For_each_user": {
                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions": {
                                "Add_comment_to_incident_(V3)_2": {
                                    "runAfter": {
                                        "Scope": [
                                            "TimedOut",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>Playbook could not obtain information about user @{outputs('Get_user_name')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Get_user_name": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": "@items('For_each_user')?['Name']"
                                },
                                "Scope": {
                                    "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                            "runAfter": {
                                                "Create_message": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "message": "<p>@{outputs('Create_message')}</p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            }
                                        },
                                        "Create_HTML_table_with_tags": {
                                            "runAfter": {
                                                "Parse_GetUser_response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Table",
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@body('Parse_GetUser_response')?['Tags']"
                                            }
                                        },
                                        "Create_HTML_table_with_user_groups": {
                                            "runAfter": {
                                                "Select_user_groups_fields_for_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Table",
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@body('Select_user_groups_fields_for_table')"
                                            }
                                        },
                                        "Create_message": {
                                            "runAfter": {
                                                "Create_HTML_table_with_user_groups": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "User name: @{body('Parse_GetUser_response')?['UserName']}\nUser ID: @{body('Parse_GetUser_response')?['UserId']}\nUser create date: @{body('Parse_GetUser_response')?['CreateDate']}\nUser tags:\n@{body('Create_HTML_table_with_tags')}\nUser groups:\n@{body('Create_HTML_table_with_user_groups')}"
                                        },
                                        "GetUser": {
                                            "runAfter": {},
                                            "type": "Function",
                                            "inputs": {
                                                "function": {
                                                    "id": "[concat(variables('aws_iam_functionapp_id'), '/functions/GetUser')]"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "username": "@outputs('Get_user_name')"
                                                }
                                            }
                                        },
                                        "ListGroupsForUser": {
                                            "runAfter": {
                                                "GetUser": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Function",
                                            "inputs": {
                                                "function": {
                                                    "id": "[concat(variables('aws_iam_functionapp_id'), '/functions/ListGroupsForUser')]"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "username": "@outputs('Get_user_name')"
                                                }
                                            }
                                        },
                                        "Parse_GetUser_response": {
                                            "runAfter": {
                                                "ListGroupsForUser": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('GetUser')",
                                                "schema": {
                                                    "properties": {
                                                        "Arn": {
                                                            "type": "string"
                                                        },
                                                        "CreateDate": {
                                                            "type": "string"
                                                        },
                                                        "Path": {
                                                            "type": "string"
                                                        },
                                                        "Tags": {
                                                            "items": {
                                                                "properties": {
                                                                    "Key": {
                                                                        "type": "string"
                                                                    },
                                                                    "Value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Key",
                                                                    "Value"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "UserId": {
                                                            "type": "string"
                                                        },
                                                        "UserName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Parse_ListGroupsForUser_response": {
                                            "runAfter": {
                                                "Create_HTML_table_with_tags": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('ListGroupsForUser')",
                                                "schema": {
                                                    "items": {
                                                        "properties": {
                                                            "Arn": {
                                                                "type": "string"
                                                            },
                                                            "CreateDate": {
                                                                "type": "string"
                                                            },
                                                            "GroupId": {
                                                                "type": "string"
                                                            },
                                                            "GroupName": {
                                                                "type": "string"
                                                            },
                                                            "Path": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Path",
                                                            "GroupName",
                                                            "GroupId",
                                                            "Arn",
                                                            "CreateDate"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            }
                                        },
                                        "Select_user_groups_fields_for_table": {
                                            "runAfter": {
                                                "Parse_ListGroupsForUser_response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Select",
                                            "inputs": {
                                                "from": "@body('Parse_ListGroupsForUser_response')",
                                                "select": {
                                                    "GroupId": "@item()['GroupId']",
                                                    "GroupName": "@item()['GroupName']"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Get_user_name": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Scope"
                                }
                            },
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}