{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for SentinelSOARessentials"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-sentinelsoaressentials",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "Incident-Assignment-Shifts": "Incident-Assignment-Shifts",
    "_Incident-Assignment-Shifts": "[variables('Incident-Assignment-Shifts')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "Incident-Assignment-Shifts",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "Notify-IncidentClosed": "Notify-IncidentClosed",
    "_Notify-IncidentClosed": "[variables('Notify-IncidentClosed')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "Notify-IncidentClosed",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2')))]",
    "Notify-IncidentReopened": "Notify-IncidentReopened",
    "_Notify-IncidentReopened": "[variables('Notify-IncidentReopened')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "Notify-IncidentReopened",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3')))]",
    "Notify-IncidentSeverityChanged": "Notify-IncidentSeverityChanged",
    "_Notify-IncidentSeverityChanged": "[variables('Notify-IncidentSeverityChanged')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "Notify-IncidentSeverityChanged",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4')))]",
    "Notify-Owner": "Notify-Owner",
    "_Notify-Owner": "[variables('Notify-Owner')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "Notify-Owner",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5')))]",
    "Post-Message-Slack-alert-trigger": "Post-Message-Slack-alert-trigger",
    "_Post-Message-Slack-alert-trigger": "[variables('Post-Message-Slack-alert-trigger')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "Post-Message-Slack-alert-trigger",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6')))]",
    "Post-Message-Teams-alert-trigger": "Post-Message-Teams-alert-trigger",
    "_Post-Message-Teams-alert-trigger": "[variables('Post-Message-Teams-alert-trigger')]",
    "playbookVersion7": "1.0",
    "playbookContentId7": "Post-Message-Teams-alert-trigger",
    "_playbookContentId7": "[variables('playbookContentId7')]",
    "playbookId7": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId7'))]",
    "playbookTemplateSpecName7": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId7')))]",
    "Post-Message-Teams-incident-trigger": "Post-Message-Teams-incident-trigger",
    "_Post-Message-Teams-incident-trigger": "[variables('Post-Message-Teams-incident-trigger')]",
    "playbookVersion8": "1.0",
    "playbookContentId8": "Post-Message-Teams-incident-trigger",
    "_playbookContentId8": "[variables('playbookContentId8')]",
    "playbookId8": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId8'))]",
    "playbookTemplateSpecName8": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId8')))]",
    "Post-Message-Slack-incident-trigger": "Post-Message-Slack-incident-trigger",
    "_Post-Message-Slack-incident-trigger": "[variables('Post-Message-Slack-incident-trigger')]",
    "playbookVersion9": "1.0",
    "playbookContentId9": "Post-Message-Slack-incident-trigger",
    "_playbookContentId9": "[variables('playbookContentId9')]",
    "playbookId9": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId9'))]",
    "playbookTemplateSpecName9": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId9')))]",
    "relateAlertsToIncident-basedOnIP": "relateAlertsToIncident-basedOnIP",
    "_relateAlertsToIncident-basedOnIP": "[variables('relateAlertsToIncident-basedOnIP')]",
    "playbookVersion10": "1.0",
    "playbookContentId10": "relateAlertsToIncident-basedOnIP",
    "_playbookContentId10": "[variables('playbookContentId10')]",
    "playbookId10": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId10'))]",
    "playbookTemplateSpecName10": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId10')))]",
    "Send-basic-email": "Send-basic-email",
    "_Send-basic-email": "[variables('Send-basic-email')]",
    "playbookVersion11": "1.0",
    "playbookContentId11": "Send-basic-email",
    "_playbookContentId11": "[variables('playbookContentId11')]",
    "playbookId11": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId11'))]",
    "playbookTemplateSpecName11": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId11')))]",
    "Send-email-with-formatted-incident-report": "Send-email-with-formatted-incident-report",
    "_Send-email-with-formatted-incident-report": "[variables('Send-email-with-formatted-incident-report')]",
    "playbookVersion12": "1.0",
    "playbookContentId12": "Send-email-with-formatted-incident-report",
    "_playbookContentId12": "[variables('playbookContentId12')]",
    "playbookId12": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId12'))]",
    "playbookTemplateSpecName12": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId12')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Sentinel_Incident_Assignment_Shifts playbook",
        "displayName": "Sentinel_Incident_Assignment_Shifts playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Sentinel_Incident_Assignment_Shifts Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Sentinel_Incident_Assignment_Shifts",
              "type": "String"
            },
            "EmailAddress": {
              "defaultValue": "Your email address",
              "type": "string"
            }
          },
          "variables": {
            "AzureMonitorLogs": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "AzureSentinel": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "office365": "[[concat('office365-', parameters('PlaybookName'))]",
            "Shifts": "[[concat('shifts-', parameters('PlaybookName'))]",
            "azure": "[[concat('https://management','.azure','.com')]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
            "_connection-3": "[[variables('connection-3')]",
            "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/shifts')]",
            "_connection-4": "[[variables('connection-4')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureMonitorLogs')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('EmailAddress')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinel')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('EmailAddress')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('office365')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('EmailAddress')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('Shifts')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('EmailAddress')]",
                "api": {
                  "id": "[[variables('_connection-4')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "IncidentAssignmentShifts",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogs'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinel'))]",
                "[[resourceId('Microsoft.Web/connections', variables('office365'))]",
                "[[resourceId('Microsoft.Web/connections', variables('Shifts'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation",
                        "retryPolicy": {
                          "type": "none"
                        }
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "runs": 1,
                          "maximumWaitingRuns": 100
                        }
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_Check_Incident_Owner": {
                      "actions": {
                        "Condition_-_Check_User_Array": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Update_incident": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 18px\"><strong>Incident assigned to </strong></span><span style=\"color: rgb(85,57,130); font-size: 18px\"><strong></strong></span><span style=\"color: rgb(147,101,184); font-size: 18px\"><strong>@{body('Update_incident')?['properties']?['owner']?['assignedTo']}</strong></span><span style=\"color: rgb(147,101,184); font-size: 18px\"><strong></strong></span><span style=\"color: rgb(147,101,184); font-size: 18px\"><strong> </strong></span><br>\n<span style=\"font-size: 12px; color: rgb(41,105,176)\">Incident assigned to </span><span style=\"font-size: 12px; color: rgb(41,105,176)\"><strong>@{body('Update_incident')?['properties']?['owner']?['assignedTo']}</strong></span><span style=\"font-size: 12px; color: rgb(41,105,176)\"> </span><span style=\"font-size: 12px; color: rgb(41,105,176)\">by '</span><span style=\"font-size: 12px; color: rgb(41,105,176)\"><em>@{workflow().name}</em></span><span style=\"font-size: 12px; color: rgb(41,105,176)\">' Playbook.</span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Compose_HTML_Email": {
                              "runAfter": {
                                "Add_comment_to_incident_(V3)": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Compose",
                              "inputs": "<!DOCTYPE html>\n<html>\n<head>    \n<style>\n.header-Informational{background-color: grey;color: white;}.header-Low{background-color: yellow;color: black;}.header-Medium{background-color: orange;color: black;}.header-High{background-color: red;color: white;}\nspan{display: none;}.severity-1{display: inline;text-decoration:none;}\n{display: inline;text-decoration:none;}.cell{float: left;overflow: hidden;text-overflow: ellipsis;white-space: nowrap; max-width: 100%;}\n</style>\n</head>\n<body>\n<table class=\"header-@{triggerBody()?['object']?['properties']?['severity']}\" style=\"table-layout: auto; width: 100%; padding-left: 10px; padding-right:10px;font-size:20px\" ><tr>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 20%;\">Severity:<b><i>@{triggerBody()?['object']?['properties']?['severity']}</b></i></td>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 75%;\">Title: <b><i>@{triggerBody()?['object']?['properties']?['title']}</b></i></td></tr><tr>\n</table>\n<div style=\"margin-top: 20px\">\n\n  The following incident in Microsoft Sentinel has been assigned to <b>@{body('Update_incident')?['properties']?['owner']?['assignedTo']}</b>.\n\n\n  <h1>Incident Details:</h1>\n\n  <b>Incident Number:</b> @{triggerBody()?['object']?['properties']?['incidentNumber']}<br />\n  <b>Title:</b> @{triggerBody()?['object']?['properties']?['title']} <br />\n  <b>Owner:</b> @{body('Update_incident')?['properties']?['owner']?['assignedTo']} <br />\n  <b>Severity:</b> @{triggerBody()?['object']?['properties']?['severity']}<br />\n  <b>TimeGenerated(UTC):</b> @{triggerBody()?['object']?['properties']?['createdTimeUtc']} <br />\n  <b>Status:</b> @{triggerBody()?['object']?['properties']?['status']} <br />\n  <br />\n  <b>Incident link:</b> <a href=\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident@{triggerBody()?['object']?['id']}\">View Incident</a><br />\n\n  </body>\n  </html>\n\n"
                            },
                            "Run_query_and_list_results_-_Get_user_with_low_assignment_": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "let Shifts = datatable ( User:string, Count:string )\n@{replace(string(variables('User')),'\\','')};\nShifts\n| extend Count = toint(Count)\n| sort by User\n| top 1 by Count asc",
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/queryData",
                                "queries": {
                                  "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                  "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                                  "resourcetype": "Log Analytics Workspace",
                                  "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                  "timerange": "Last 24 hours"
                                }
                              }
                            },
                            "Send_an_email_(V2)": {
                              "runAfter": {
                                "Compose_HTML_Email": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Body": "<p>@{outputs('Compose_HTML_Email')}</p>",
                                  "Subject": "Microsoft Sentinel Incident Assignment Notification - Incident Number: @{triggerBody()?['object']?['properties']?['incidentNumber']}",
                                  "To": "@body('Update_incident')?['properties']?['owner']?['email']"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                              }
                            },
                            "Update_incident": {
                              "runAfter": {
                                "Run_query_and_list_results_-_Get_user_with_low_assignment_": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "owner": "@{body('Run_query_and_list_results_-_Get_user_with_low_assignment_')['value'][0]['User']}",
                                  "ownerAction": "Assign"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Incidents"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_Shifts_list": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('User'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each_Shifts_list": {
                          "foreach": "@body('List_all_shifts')?['value']",
                          "actions": {
                            "Condition_-_Start_and_End_date": {
                              "actions": {
                                "Append_to_User_array_variable": {
                                  "runAfter": {
                                    "Set_variable_-_JsonResult": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "User",
                                    "value": "@{items('For_each_Shifts_list')?['userId']}\",\"@{length(variables('JsonResult'))}"
                                  }
                                },
                                "HTTP_-_Get_total_incidents_for_user": {
                                  "type": "Http",
                                  "inputs": {
                                    "authentication": {
                                      "type": "ManagedServiceIdentity"
                                    },
                                    "method": "GET",
                                    "uri": "[[uriComponentToString(uri(variables('azure'),'subscriptions/@{triggerBody()?[''workspaceInfo'']?[''SubscriptionId'']}/resourceGroups/@{triggerBody()?[''workspaceInfo'']?[''ResourceGroupName'']}/providers/Microsoft.OperationalInsights/workspaces/@{triggerBody()?[''workspaceInfo'']?[''WorkspaceName'']}/providers/Microsoft.SecurityInsights/Incidents?api-version=2020-01-01&$filter=(properties/owner/objectId eq ''@{items(''For_each_Shifts_list'')?[''userId'']}'' and properties/createdTimeUtc ge @{items(''For_each_Shifts_list'')?[''sharedShift'']?[''startDateTime'']})&$top=2000'))]"
                                  }
                                },
                                "Parse_JSON_-_HTTP": {
                                  "runAfter": {
                                    "HTTP_-_Get_total_incidents_for_user": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('HTTP_-_Get_total_incidents_for_user')",
                                    "schema": {
                                      "properties": {
                                        "value": {
                                          "items": {
                                            "properties": {
                                              "etag": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "properties": {
                                                "properties": {
                                                  "additionalData": {
                                                    "properties": {
                                                      "alertProductNames": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "alertsCount": {
                                                        "type": "integer"
                                                      },
                                                      "bookmarksCount": {
                                                        "type": "integer"
                                                      },
                                                      "commentsCount": {
                                                        "type": "integer"
                                                      },
                                                      "tactics": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "classification": {
                                                    "type": "string"
                                                  },
                                                  "createdTimeUtc": {
                                                    "type": "string"
                                                  },
                                                  "description": {
                                                    "type": "string"
                                                  },
                                                  "firstActivityTimeGenerated": {
                                                    "type": "string"
                                                  },
                                                  "firstActivityTimeUtc": {
                                                    "type": "string"
                                                  },
                                                  "incidentNumber": {
                                                    "type": "integer"
                                                  },
                                                  "incidentUrl": {
                                                    "type": "string"
                                                  },
                                                  "labels": {
                                                    "items": {
                                                      "properties": {
                                                        "labelName": {
                                                          "type": "string"
                                                        },
                                                        "labelType": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "labelName",
                                                        "labelType"
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "lastActivityTimeGenerated": {
                                                    "type": "string"
                                                  },
                                                  "lastActivityTimeUtc": {
                                                    "type": "string"
                                                  },
                                                  "lastModifiedTimeUtc": {
                                                    "type": "string"
                                                  },
                                                  "owner": {
                                                    "properties": {
                                                      "assignedTo": {
                                                        "type": "string"
                                                      },
                                                      "email": {
                                                        "type": "string"
                                                      },
                                                      "objectId": {
                                                        "type": "string"
                                                      },
                                                      "userPrincipalName": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "relatedAnalyticRuleIds": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "severity": {
                                                    "type": "string"
                                                  },
                                                  "status": {
                                                    "type": "string"
                                                  },
                                                  "title": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name",
                                              "etag",
                                              "type",
                                              "properties"
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Set_variable_-_JsonResult": {
                                  "runAfter": {
                                    "Parse_JSON_-_HTTP": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "JsonResult",
                                    "value": "@body('Parse_JSON_-_HTTP')?['value']"
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "lessOrEquals": [
                                      "@ticks(formatDateTime(items('For_each_Shifts_list')?['sharedShift']?['startDateTime']))",
                                      "@ticks(formatDateTime(utcNow()))"
                                    ]
                                  },
                                  {
                                    "greaterOrEquals": [
                                      "@ticks(formatDateTime(items('For_each_Shifts_list')?['sharedShift']?['endDateTime']))",
                                      "@ticks(formatDateTime(addHours(utcNow(),variables('ExpectedWorkHoursPerIncident'))))"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "runAfter": {
                            "List_all_shifts": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach",
                          "runtimeConfiguration": {
                            "concurrency": {
                              "repetitions": 1
                            }
                          }
                        },
                        "List_all_shifts": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['shifts']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/v1.0/teams/@{encodeURIComponent('')}/schedule/shifts",
                            "queries": {
                              "endTime": "@{addDays(utcNow(),1)}",
                              "startTime": "@{addDays(utcNow(),-1)}"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_-_JsonResult": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@triggerBody()?['object']?['properties']?['owner']?['assignedTo']",
                              "@null"
                            ]
                          },
                          {
                            "not": {
                              "equals": [
                                "@triggerBody()?['object']?['properties']?['status']",
                                "Closed"
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_variable_-_ExpectedWorkHoursPerIncident": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ExpectedWorkHoursPerIncident",
                            "type": "integer",
                            "value": 1
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_JsonResult": {
                      "runAfter": {
                        "Initialize_variable_-_User": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "JsonResult",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_User": {
                      "runAfter": {
                        "Initialize_variable_-_ExpectedWorkHoursPerIncident": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "User",
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogs'))]",
                        "connectionName": "[[variables('AzureMonitorLogs')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]"
                      },
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinel'))]",
                        "connectionName": "[[variables('AzureSentinel')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                      },
                      "office365": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('office365'))]",
                        "connectionName": "[[variables('office365')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                      },
                      "shifts": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Shifts'))]",
                        "connectionName": "[[variables('Shifts')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/shifts')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Incident Assignment Shifts",
            "description": "This playbook will assign an Incident to an owner based on the Shifts schedule in Microsoft Teams. When an incident is assigned, the incident owner will be notified via email. Incidents are assigned to users based on the following criteria:<br> *Only users who have started their shifts during the time the Logic App runs will be considered. *Users who still have at least 1 hours left before going off shift (can be configured in playbook) *User with the least incidents assigned on the current Shift will be assigned incident first. <br> Refer to [Automate Incident Assignment with Shifts for Teams](https://techcommunity.microsoft.com/t5/azure-sentinel/automate-incident-assignment-with-shifts-for-teams/ba-p/2297549) for more details.",
            "prerequisites": [
              "1. Have [Shifts](https://support.microsoft.com/office/get-started-in-shifts-5f3e30d8-1821-4904-be26-c3cd25a497d6) schedule setup in Microsoft Teams.",
              "2. Have user account with Owner role in Microsoft Teams",
              "3. Have user account or Service Principal or Managed Identity with Microsoft Sentinel Responder role for HTTP and Microsoft Sentinel connectors",
              "4. Have user account or Service Principal with Log Analytics Reader role on Microsoft Sentinel workspace for Azure Monitor Logs connector",
              "5. Have An O365 account to be used to send email notification"
            ],
            "postDeployment": [
              "**1. Enable Managed Identity and configure role assignment**",
              "- Once deployed, go to the Logic App's blade and click on **Identity** under Settings.",
              "- Select **On** under the **System assigned** tab. Click **Save** and select **Yes** when prompted.",
              "- Click on **Azure role assignments** to assign role to the Managed Identity.",
              "- Click on **+ Add role assignment**.",
              "- Select **Resource group** under Scope and select the **Subscription** and **Resource group** where the Microsoft Sentinel **Workspace** is located.",
              "- Select **Microsoft Sentinel Responder** under Role and click **Save**.",
              "**2. Configure connections**",
              "- Edit the Logic App or go to Logic app designer.",
              "- Expand each step to find the following connectors (6 in total)",
              "1. Incident Trigger\n2. Update Incident\n3. Add comment to incident\n4. List all shifts\n5. Run query and list results\n6. Send an email",
              "- Fix these connectors by adding a new connection to each connector and sign in with the accounts described under pre-requisites.",
              "**3. Select the Shifts schedule**",
              "- Edit the Logic App or go to Logic app designer.",
              "- Find the **List all shifts** connector, click on the **X** sign next to Team field for the drop-down list to appear.",
              "- Select the Teams channel with your Shifts schedule from the drop-down list.",
              "- Save the Logic App once you have completed the above steps."
            ],
            "lastUpdateTime": "2022-08-05T00:00:00Z",
            "tags": [
              "Incident management"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Sentinel_Incident_Assignment_Shifts",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Notify-IncidentClosed playbook",
        "displayName": "Notify-IncidentClosed playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName2'),'/',variables('playbookVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "Notify-IncidentClosed Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Notify-IncidentClosed",
              "type": "string"
            },
            "Notification email": {
              "type": "string",
              "defaultValue": "Notification email",
              "metadata": {
                "description": "Enter value for Notification email"
              }
            },
            "Teams Channel ID": {
              "type": "string",
              "defaultValue": "Teams Channel ID",
              "metadata": {
                "description": "Enter value for Teams Channel ID"
              }
            },
            "Teams Team ID": {
              "type": "string",
              "defaultValue": "Teams Team ID",
              "metadata": {
                "description": "Enter value for Teams Team ID"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "Office365ConnectionName": "[[concat('Office365-', parameters('PlaybookName'))]",
            "TeamsConnectionName": "[[concat('Teams-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Office365')]",
            "_connection-3": "[[variables('connection-3')]",
            "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Teams')]",
            "_connection-4": "[[variables('connection-4')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Notification email": {
                      "defaultValue": "[[parameters('Notification email')]",
                      "type": "string"
                    },
                    "Teams Channel ID": {
                      "defaultValue": "[[parameters('Teams Channel ID')]",
                      "type": "string"
                    },
                    "Teams Team ID": {
                      "defaultValue": "[[parameters('Teams Team ID')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Compose_-_Incident_URL": {
                      "type": "Compose",
                      "inputs": "<a href=\"@{triggerBody()?['object']?['properties']?['incidentUrl']}\">Click here to view incident</a>"
                    },
                    "Compose_-_Teams_adaptive_card_response": {
                      "runAfter": {
                        "Send_an_email_(V2)": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": {
                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                        "body": [
                          {
                            "color": "Good",
                            "size": "Large",
                            "text": "Microsoft Sentinel Incident Closed!",
                            "type": "TextBlock",
                            "weight": "Bolder",
                            "wrap": true
                          },
                          {
                            "text": "Incident details:",
                            "type": "TextBlock",
                            "wrap": true
                          },
                          {
                            "facts": [
                              {
                                "title": "Title",
                                "value": "@{triggerBody()?['object']?['properties']?['title']}"
                              },
                              {
                                "title": "Incident ID",
                                "value": "@{triggerBody()?['object']?['properties']?['incidentNumber']}"
                              },
                              {
                                "title": "Description",
                                "value": "@{triggerBody()?['object']?['properties']?['description']}"
                              },
                              {
                                "title": "Tactics",
                                "value": "@{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')}"
                              },
                              {
                                "title": "Alert providers",
                                "value": "@{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')}"
                              },
                              {
                                "title": "Status",
                                "value": "@{triggerBody()?['object']?['properties']?['status']}"
                              },
                              {
                                "title": "Classification",
                                "value": "@{triggerBody()?['object']?['properties']?['classification']}"
                              },
                              {
                                "title": "Classification comment",
                                "value": "@{triggerBody()?['object']?['properties']?['classificationComment']}"
                              },
                              {
                                "title": "Classification reason",
                                "value": "@{triggerBody()?['object']?['properties']?['classificationReason']}"
                              },
                              {
                                "title": "Incident updated by",
                                "value": "@{triggerBody()?['incidentUpdates']?['updatedBy']?['name']}"
                              },
                              {
                                "title": "Incident URL",
                                "value": "[[Click here to view incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})"
                              }
                            ],
                            "type": "FactSet"
                          }
                        ],
                        "type": "AdaptiveCard",
                        "version": "1.4"
                      }
                    },
                    "Post_adaptive_card_in_a_chat_or_channel": {
                      "runAfter": {
                        "Compose_-_Teams_adaptive_card_response": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "messageBody": "@{outputs('Compose_-_Teams_adaptive_card_response')}",
                          "recipient": {
                            "channelId": "@parameters('Teams Channel ID')",
                            "groupId": "@parameters('Teams Team ID')"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v1.0/teams/conversation/adaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                      }
                    },
                    "Send_an_email_(V2)": {
                      "runAfter": {
                        "Compose_-_Incident_URL": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p><span style=\"font-size: 18px\"><strong>Incident details:</strong></span><br>\n<br>\n<strong>Title</strong>: @{triggerBody()?['object']?['properties']?['title']};<br>\n<strong>Incident ID</strong>: @{triggerBody()?['object']?['properties']?['incidentNumber']};<br>\n<strong>Description</strong>: @{triggerBody()?['object']?['properties']?['description']};<br>\n<strong>Tactics</strong>: @{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')};<br>\n<strong>Alert providers</strong>: @{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')};<br>\n<strong>Status</strong>: @{triggerBody()?['object']?['properties']?['status']};<br>\n<strong>Classification</strong>: @{triggerBody()?['object']?['properties']?['classification']};<br>\n<strong>Classification comment</strong>: @{triggerBody()?['object']?['properties']?['classificationComment']};<br>\n<strong>Classification reason</strong>: @{triggerBody()?['object']?['properties']?['classificationReason']}<br>\n<strong>Incident updated by</strong>: @{triggerBody()?['incidentUpdates']?['updatedBy']?['name']};<br>\n<strong>Incident URL</strong>: @{outputs('Compose_-_Incident_URL')}</p>",
                          "Subject": "Microsoft Sentinel Incident Closed!",
                          "To": "@parameters('Notification email')"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "office365": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                        "connectionName": "[[variables('Office365ConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Office365')]"
                      },
                      "teams": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                        "connectionName": "[[variables('TeamsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Teams')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Notify-IncidentClosed",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('Office365ConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('Office365ConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('TeamsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('TeamsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-4')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Notify When Incident Is Closed",
            "description": "This playbook is utilizing new update trigger to notify person/group on Microsoft Teams/Outlook when incident is closed.",
            "prerequisites": [
              "1. Email address to where notification will be sent to.",
              "2. (Optional) Microsoft Teams Team ID and Channel ID, or choose them in Logic Apps designer after the deployment. [Guidance to get Ids](Instructions to get IDs - https://www.linkedin.com/pulse/3-ways-locate-microsoft-team-id-christopher-barber-/)"
            ],
            "postDeployment": [
              "1. Authorize Microsoft Teams and Microsoft Office 365 Outlook connectors.",
              "2. Add playbook as an action to the automation rule: Trigger = When incident is updated;  Condition = Status Changed To Closed."
            ],
            "lastUpdateTime": "2022-08-05T00:00:00Z",
            "tags": [
              "Notification",
              "Incident Update"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Notify When Incident Is Closed",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Notify-IncidentReopened playbook",
        "displayName": "Notify-IncidentReopened playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName3'),'/',variables('playbookVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "Notify-IncidentReopened Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Notify-IncidentReopened",
              "type": "string"
            },
            "Notification email": {
              "type": "string",
              "defaultValue": "Notification email",
              "metadata": {
                "description": "Enter value for Notification email"
              }
            },
            "Teams Channel ID": {
              "type": "string",
              "defaultValue": "Teams Channel ID",
              "metadata": {
                "description": "Enter value for Teams Channel ID"
              }
            },
            "Teams Team ID": {
              "type": "string",
              "defaultValue": "Teams Team ID",
              "metadata": {
                "description": "Enter value for Teams Team ID"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "Office365ConnectionName": "[[concat('Office365-', parameters('PlaybookName'))]",
            "TeamsConnectionName": "[[concat('Teams-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Office365')]",
            "_connection-3": "[[variables('connection-3')]",
            "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Teams')]",
            "_connection-4": "[[variables('connection-4')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Notification email": {
                      "defaultValue": "[[parameters('Notification email')]",
                      "type": "string"
                    },
                    "Teams Channel ID": {
                      "defaultValue": "[[parameters('Teams Channel ID')]",
                      "type": "string"
                    },
                    "Teams Team ID": {
                      "defaultValue": "[[parameters('Teams Team ID')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Compose_-_Incident_URL": {
                      "type": "Compose",
                      "inputs": "<a href=\"@{triggerBody()?['object']?['properties']?['incidentUrl']}\">Click here to view incident</a>"
                    },
                    "Compose_-_Teams_adaptive_card_response": {
                      "runAfter": {
                        "Send_an_email_(V2)": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": {
                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                        "body": [
                          {
                            "color": "Attention",
                            "size": "Large",
                            "text": "Microsoft Sentinel Incident Reopened!",
                            "type": "TextBlock",
                            "weight": "Bolder",
                            "wrap": true
                          },
                          {
                            "text": "Incident details:",
                            "type": "TextBlock",
                            "wrap": true
                          },
                          {
                            "facts": [
                              {
                                "title": "Title",
                                "value": "@{triggerBody()?['object']?['properties']?['title']}"
                              },
                              {
                                "title": "Incident ID",
                                "value": "@{triggerBody()?['object']?['properties']?['incidentNumber']}"
                              },
                              {
                                "title": "Description",
                                "value": "@{triggerBody()?['object']?['properties']?['description']}"
                              },
                              {
                                "title": "Severity",
                                "value": "@{triggerBody()?['object']?['properties']?['severity']}"
                              },
                              {
                                "title": "Tactics",
                                "value": "@{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')}"
                              },
                              {
                                "title": "Alert providers",
                                "value": "@{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')}"
                              },
                              {
                                "title": "New Status",
                                "value": "@{triggerBody()?['object']?['properties']?['status']}"
                              },
                              {
                                "title": "Incident updated by",
                                "value": "@{triggerBody()?['incidentUpdates']?['updatedBy']?['name']}"
                              },
                              {
                                "title": "Incident URL",
                                "value": "[[Click here to view incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})"
                              }
                            ],
                            "type": "FactSet"
                          }
                        ],
                        "type": "AdaptiveCard",
                        "version": "1.4"
                      }
                    },
                    "Post_adaptive_card_in_a_chat_or_channel": {
                      "runAfter": {
                        "Compose_-_Teams_adaptive_card_response": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "messageBody": "@{outputs('Compose_-_Teams_adaptive_card_response')}",
                          "recipient": {
                            "channelId": "@parameters('Teams Channel ID')",
                            "groupId": "@parameters('Teams Team ID')"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v1.0/teams/conversation/adaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                      }
                    },
                    "Send_an_email_(V2)": {
                      "runAfter": {
                        "Compose_-_Incident_URL": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p><span style=\"font-size: 18px\"><strong>Incident details:</strong></span><br>\n<br>\n<strong>Title</strong>: @{triggerBody()?['object']?['properties']?['title']};<br>\n<strong>Incident ID</strong>: @{triggerBody()?['object']?['properties']?['incidentNumber']};<br>\n<strong>Description</strong>: @{triggerBody()?['object']?['properties']?['description']};<br>\n<strong>Severity</strong>: @{triggerBody()?['object']?['properties']?['severity']};<br>\n<strong>Tactics</strong>: @{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')};<br>\n<strong>Alert providers</strong>: @{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')};<br>\n<strong>New Status</strong>: @{triggerBody()?['object']?['properties']?['status']};<br>\n<strong>Incident updated by</strong>: @{triggerBody()?['incidentUpdates']?['updatedBy']?['name']};<br>\n<strong>Incident URL</strong>: @{outputs('Compose_-_Incident_URL')}</p>",
                          "Subject": "Microsoft Sentinel Incident Reopened!",
                          "To": "@parameters('Notification email')"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "office365": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                        "connectionName": "[[variables('Office365ConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Office365')]"
                      },
                      "teams": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                        "connectionName": "[[variables('TeamsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Teams')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Notify-IncidentReopened",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('Office365ConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('Office365ConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('TeamsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('TeamsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-4')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Notify When Incident Is Reopened",
            "description": "This playbook is utilizing new update trigger to notify person/group on Microsoft Teams/Outlook when incident is reopened.",
            "prerequisites": [
              "1. Email address to where notification will be sent to.",
              "2. (Optional) Microsoft Teams Team ID and Channel ID, or choose them in Logic Apps designer after the deployment. [Guidance to get Ids](Instructions to get IDs - https://www.linkedin.com/pulse/3-ways-locate-microsoft-team-id-christopher-barber-/)"
            ],
            "postDeployment": [
              "1. Authorize Microsoft Teams and Microsoft Office 365 Outlook connectors.",
              "2. Add playbook as an action to the automation rule: Trigger = When incident is updated;  Condition = Staus Changed From Closed."
            ],
            "lastUpdateTime": "2022-08-05T00:00:00Z",
            "tags": [
              "Notification",
              "Incident update"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Notify When Incident Is Reopened",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Notify-IncidentSeverityChanged playbook",
        "displayName": "Notify-IncidentSeverityChanged playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName4'),'/',variables('playbookVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "Notify-IncidentSeverityChanged Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Notify-IncidentSeverityChanged",
              "type": "string"
            },
            "Notification email": {
              "type": "string",
              "defaultValue": "Notification email",
              "metadata": {
                "description": "Enter value for Notification email"
              }
            },
            "Teams Channel ID": {
              "type": "string",
              "defaultValue": "Teams Channel ID",
              "metadata": {
                "description": "Enter value for Teams Channel ID"
              }
            },
            "Teams Team ID": {
              "type": "string",
              "defaultValue": "Teams Team ID",
              "metadata": {
                "description": "Enter value for Teams Team ID"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "Office365ConnectionName": "[[concat('Office365-', parameters('PlaybookName'))]",
            "TeamsConnectionName": "[[concat('Teams-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Office365')]",
            "_connection-3": "[[variables('connection-3')]",
            "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Teams')]",
            "_connection-4": "[[variables('connection-4')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Notification email": {
                      "defaultValue": "[[parameters('Notification email')]",
                      "type": "string"
                    },
                    "Teams Channel ID": {
                      "defaultValue": "[[parameters('Teams Channel ID')]",
                      "type": "string"
                    },
                    "Teams Team ID": {
                      "defaultValue": "[[parameters('Teams Team ID')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Compose_-_Incident_URL": {
                      "type": "Compose",
                      "inputs": "<a href=\"@{triggerBody()?['object']?['properties']?['incidentUrl']}\">Click here to view incident</a>"
                    },
                    "Compose_-_Teams_adaptive_card_response": {
                      "runAfter": {
                        "Send_an_email_(V2)": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": {
                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                        "body": [
                          {
                            "color": "Warning",
                            "size": "Large",
                            "text": "Microsoft Sentinel Incident Severity Changed!",
                            "type": "TextBlock",
                            "weight": "Bolder",
                            "wrap": true
                          },
                          {
                            "text": "Incident details:",
                            "type": "TextBlock",
                            "wrap": true
                          },
                          {
                            "facts": [
                              {
                                "title": "Title",
                                "value": "@{triggerBody()?['object']?['properties']?['title']}"
                              },
                              {
                                "title": "Incident ID",
                                "value": "@{triggerBody()?['object']?['properties']?['incidentNumber']}"
                              },
                              {
                                "title": "Description",
                                "value": "@{triggerBody()?['object']?['properties']?['description']}"
                              },
                              {
                                "title": "Tactics",
                                "value": "@{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')}"
                              },
                              {
                                "title": "Alert providers",
                                "value": "@{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')}"
                              },
                              {
                                "title": "New Severity",
                                "value": "@{triggerBody()?['object']?['properties']?['severity']}"
                              },
                              {
                                "title": "Incident updated by",
                                "value": "@{triggerBody()?['incidentUpdates']?['updatedBy']?['name']}"
                              },
                              {
                                "title": "Incident URL",
                                "value": "[[Click here to view incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})"
                              }
                            ],
                            "type": "FactSet"
                          }
                        ],
                        "type": "AdaptiveCard",
                        "version": "1.4"
                      }
                    },
                    "Post_adaptive_card_in_a_chat_or_channel": {
                      "runAfter": {
                        "Compose_-_Teams_adaptive_card_response": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "messageBody": "@{outputs('Compose_-_Teams_adaptive_card_response')}",
                          "recipient": {
                            "channelId": "@parameters('Teams Channel ID')",
                            "groupId": "@parameters('Teams Team ID')"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v1.0/teams/conversation/adaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                      }
                    },
                    "Send_an_email_(V2)": {
                      "runAfter": {
                        "Compose_-_Incident_URL": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p><span style=\"font-size: 18px\"><strong>Incident details:</strong></span><br>\n<br>\n<strong>Title</strong>: @{triggerBody()?['object']?['properties']?['title']};<br>\n<strong>Incident ID</strong>: @{triggerBody()?['object']?['properties']?['incidentNumber']};<br>\n<strong>Description</strong>: @{triggerBody()?['object']?['properties']?['description']};<br>\n<strong>Tactics</strong>: @{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')};<br>\n<strong>Alert providers</strong>: @{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')};<br>\n<strong>New Severity</strong>: @{triggerBody()?['object']?['properties']?['severity']};<br>\n<strong>Incident updated by</strong>: @{triggerBody()?['incidentUpdates']?['updatedBy']?['name']};<br>\n<strong>Incident URL</strong>: @{outputs('Compose_-_Incident_URL')}</p>",
                          "Subject": "Microsoft Sentinel Incident Severity Changed!",
                          "To": "@parameters('Notification email')"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "office365": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                        "connectionName": "[[variables('Office365ConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Office365')]"
                      },
                      "teams": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                        "connectionName": "[[variables('TeamsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Teams')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Notify-IncidentSeverityChanged",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('Office365ConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('Office365ConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('TeamsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('TeamsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-4')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Notify When Incident Severity Changed",
            "description": "This playbook is utilizing new update trigger to notify person/group on Microsoft Teams/Outlook when incident severity change.",
            "prerequisites": [
              "1. Email address to where notification will be sent to.",
              "2. (Optional) Microsoft Teams Team ID and Channel ID, or choose them in Logic Apps designer after the deployment. [Guidance to get Ids](Instructions to get IDs - https://www.linkedin.com/pulse/3-ways-locate-microsoft-team-id-christopher-barber-/)"
            ],
            "postDeployment": [
              "1. Authorize Microsoft Teams and Microsoft Office 365 Outlook connectors.",
              "2. Add playbook as an action to the automation rule: Trigger = When incident is updated;  Condition = Status Changed To Closed."
            ],
            "lastUpdateTime": "2022-08-05T00:00:00Z",
            "tags": [
              "Notification",
              "Incident Update"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Notify-IncidentSeverityChanged",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "updatetrigger-notifyOwner playbook",
        "displayName": "updatetrigger-notifyOwner playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName5'),'/',variables('playbookVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "updatetrigger-notifyOwner Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "updatetrigger-notifyOwner",
              "type": "String",
              "metadata": {
                "description": "Name of the Logic Apps resource to be created"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "TeamsConnectionName": "[[concat('teams-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('TeamsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('TeamsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "notifyOwnerTeams",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Post_message_in_a_chat_or_channel": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "messageBody": "<p><span style=\"font-size: 16px\"><strong>You have been assigned to a Microsoft Sentinel Incident </strong></span><span style=\"font-size: 16px\"><strong>@{triggerBody()?['object']?['properties']?['incidentNumber']}</strong></span><span style=\"font-size: 16px\"><strong>: </strong></span><span style=\"font-size: 16px\"><strong>@{triggerBody()?['object']?['properties']?['title']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><br>\nClick here to view incident:<br>\n@{triggerBody()?['object']?['properties']?['incidentUrl']}<br>\n</p>",
                          "recipient": "@triggerBody()?['object']?['properties']?['owner']?['email']"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "teams": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                        "connectionName": "[[variables('TeamsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Notify Incident Owner in Microsoft Teams",
            "description": "This playbook sends a Teams message to the new incident owner.",
            "prerequisites": [
              "Microsoft Teams account that allows to send messages"
            ],
            "postdeploymentsteps": [
              "1. Authorize Microsoft Teams connector in Logic Apps designer",
              "2. Attach this playbook to an automation rule with trigger: When an incident is updated, condition: Owner Changed."
            ],
            "lastUpdateTime": "2022-08-05T00:00:00Z",
            "tags": [
              "Notification",
              "Update Trigger"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Notify Incident Owner in Microsoft Teams",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "PostMessageSlack-OnAlert playbook",
        "displayName": "PostMessageSlack-OnAlert playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName6'),'/',variables('playbookVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "PostMessageSlack-OnAlert Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "PostMessageSlack-OnAlert",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic Apps resource to be created"
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "SlackConnectionName": "[[concat('Slack-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/slack')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('SlackConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "PostMessageSlack_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('SlackConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Alert_-_Get_incident": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      }
                    },
                    "Post_message": {
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['slack']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/chat.postMessage",
                        "queries": {
                          "text": "New Incident: @{body('Alert_-_Get_incident')?['properties']?['title']}\nDescription: @{body('Alert_-_Get_incident')?['properties']?['description']}\nIncident Severity: @{body('Alert_-_Get_incident')?['properties']?['severity']}\nSubscription: @{triggerBody()?['WorkspaceSubscriptionId']}\nIncident Entites: @{triggerBody()?['Entities']}\n\nPlease Investigate.\n\n"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                      },
                      "slack": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('SlackConnectionName'))]",
                        "connectionName": "[[variables('SlackConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/slack')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Post Message Slack",
            "description": "This playbook will post a message in a Slack channel when an alert is created in Microsoft Sentinel",
            "prerequisites": "Slack connector will require a Slack account and user credentials",
            "postDeployment": [
              "After deployment, you can run this playbook manually on an alert or attach it to an **analytics rule** so it will rune when an alert is created."
            ],
            "lastUpdateTime": "2022-08-05T00:00:00Z",
            "tags": [
              "Notification"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "PostMessageSlack-OnAlert",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "PostMessageTeams-OnAlert playbook",
        "displayName": "PostMessageTeams-OnAlert playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName7'),'/',variables('playbookVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "PostMessageTeams-OnAlert Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion7')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "PostMessageTeams-OnAlert",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic Apps resource to be created"
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "TeamsConnectionName": "[[concat('teams-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('TeamsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('TeamsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "PostMessageTeams",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Alert_-_Get_incident": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      }
                    },
                    "Post_a_message_(V3)": {
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "body": {
                            "content": "<p>Severity@{body('Alert_-_Get_incident')?['properties']?['severity']}:<br>\n<br>\nMicrosoft Sentinel Alert;<br>\nTItle:@{body('Alert_-_Get_incident')?['properties']?['title']}<br>\nStatus:@{body('Alert_-_Get_incident')?['properties']?['status']}<br>\nNumber:@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}<br>\nCreated Time (UTC):@{body('Alert_-_Get_incident')?['properties']?['createdTimeUtc']}<br>\nUrl:@{body('Alert_-_Get_incident')?['properties']?['incidentUrl']}<br>\nEntities:@{triggerBody()?['Entities']}</p>",
                            "contentType": "html"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v3/beta/teams/@{encodeURIComponent('d05ba55c-593e-4bfa-8011-26e0626b5c14')}/channels/@{encodeURIComponent('19:8e52aee721394ab78563596463c067dc@thread.skype')}/messages"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "teams": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                        "connectionName": "[[variables('TeamsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId7'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId7')]",
                "contentId": "[variables('_playbookContentId7')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Post Message Teams",
            "description": "This playbook will post a message in a Microsoft Teams channel when an Alert is created in Microsoft Sentinel.",
            "prerequisites": [
              "MS teams Account that allow to post messages"
            ],
            "lastUpdateTime": "2022-08-04T00:00:00Z",
            "tags": [
              "Notification"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Post Message Teams - Alert Trigger",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "PostMessageTeams playbook",
        "displayName": "PostMessageTeams playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName8'),'/',variables('playbookVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "PostMessageTeams Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion8')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "PostMessageTeams",
              "type": "string",
              "metadata": {
                "description": "Incident trigger"
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "TeamsConnectionName": "[[concat('teams-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('TeamsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('TeamsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "PostMessageTeams",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Post_a_message_(V3)": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "body": {
                            "content": "<p>Severity: @{triggerBody()?['object']?['properties']?['severity']}<br>\nTItle: @{triggerBody()?['object']?['properties']?['title']}<br>\nStatus: @{triggerBody()?['object']?['properties']?['status']}<br>\nID: @{triggerBody()?['object']?['properties']?['incidentNumber']}<br>\nURL:@{triggerBody()?['object']?['properties']?['incidentUrl']}<br>\n</p>",
                            "contentType": "html"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v3/beta/teams/@{encodeURIComponent('d05ba55c-593e-4bfa-8011-26e0626b5c14')}/channels/@{encodeURIComponent('19:8e52aee721394ab78563596463c067dc@thread.skype')}/messages"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "teams": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                        "connectionName": "[[variables('TeamsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId8'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId8')]",
                "contentId": "[variables('_playbookContentId8')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Post Message Teams",
            "description": "This playbook will post a message in a Microsoft Teams channel when an Incident is created in Microsoft Sentinel.",
            "prerequisites": [
              "MS teams Account that allow to post messages"
            ],
            "postDeployment": [
              "After deployment, attach this playbook to an **automation rule** so it runs when the incident is created."
            ],
            "lastUpdateTime": "2021-07-14T00:00:00Z",
            "tags": [
              "Notification"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "PostMessageTeams-Incident",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "PostMessageSlack playbook",
        "displayName": "PostMessageSlack playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName9'),'/',variables('playbookVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "PostMessageSlack Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion9')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "PostMessageSlack",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic Apps resource to be created"
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "SlackConnectionName": "[[concat('Slack-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/slack')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('SlackConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "PostMessageSlack",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('SlackConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Post_message": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['slack']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/chat.postMessage",
                        "queries": {
                          "text": "New Incident: @{triggerBody()?['object']?['properties']?['title']}\nDescription: @{triggerBody()?['object']?['properties']?['description']}\nIncident Severity: @{triggerBody()?['object']?['properties']?['severity']}\nSubscription: @{triggerBody()?['workspaceInfo']?['SubscriptionId']}\nIncident Entites: @{triggerBody()?['object']?['properties']?['relatedEntities']}\n\nPlease Investigate.\n\n"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                      },
                      "slack": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('SlackConnectionName'))]",
                        "connectionName": "[[variables('SlackConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/slack')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId9'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId9')]",
                "contentId": "[variables('_playbookContentId9')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Post Message Slack",
            "description": "This playbook will post a message in a Slack channel when an Incident is created in Microsoft Sentinel",
            "prerequisites": "Slack connector will require a Slack account and user credentials",
            "postDeployment": [
              "After deployment, attach this playbook to an **automation rule** so it runs when the incident is created."
            ],
            "lastUpdateTime": "2022-08-05T00:00:00Z",
            "tags": [
              "Notification"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "PostMessageSlack-incident",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "relateAlertsToIncident-basedOnIP playbook",
        "displayName": "relateAlertsToIncident-basedOnIP playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName10'),'/',variables('playbookVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "relateAlertsToIncident-basedOnIP Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion10')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "relateAlertsToIncident-basedOnIP",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic Apps resource) which will be created"
              }
            },
            "WorkspaceName": {
              "defaultValue": "WorkspaceName",
              "type": "String",
              "metadata": {
                "description": "Name of the worksapce where related alerts are found"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "azuremonitorlogsConnectionName": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('azuremonitorlogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('azuremonitorlogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "relateAlertsToIncident-basedOnIP",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Add_comment_to_incident": {
                      "inputs": {
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p>Alerts \"@{string(variables('addedAlerts'))}\" were added by a playbook based on same the IP @{variables('firstIPAddress')}.</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "For_each_alert_found_in_the_query": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_IPs": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each_alert_found_in_the_query": {
                      "actions": {
                        "Add_alert_to_incident": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "relatedResourceId": "@{items('For_each_alert_found_in_the_query')}"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Relation/Create"
                          },
                          "runAfter": {
                            "Alert_-_Get_incident": [
                              "Failed"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "Alert_-_Get_incident": {
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/alerts/@{encodeURIComponent(items('For_each_alert_found_in_the_query'))}"
                          },
                          "type": "ApiConnection"
                        },
                        "Append_the_Id_of_the_added_alert_into_\"addedAlerts\"_variable": {
                          "inputs": {
                            "name": "addedAlerts",
                            "value": "@items('For_each_alert_found_in_the_query')"
                          },
                          "runAfter": {
                            "Add_alert_to_incident": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@json(body('Run_query_and_list_results')?['value'][0]['list_SystemAlertId'])",
                      "runAfter": {
                        "Wait_for_3_minutes": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      },
                      "type": "Foreach"
                    },
                    "Initialize_a_string_variable_with_the_first_IP_entity": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "firstIPAddress",
                            "type": "string",
                            "value": "@{first(body('Entities_-_Get_IPs')?['IPs'])?['Address']}"
                          }
                        ]
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable"
                    },
                    "Initialize_an_array_variable_for_logging_added_alerts": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "addedAlerts",
                            "type": "array"
                          }
                        ]
                      },
                      "runAfter": {
                        "Initialize_a_string_variable_with_the_first_IP_entity": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable"
                    },
                    "Run_query_and_list_results": {
                      "inputs": {
                        "body": "let excludedAlerts=toscalar ( SecurityIncident |\nwhere IncidentName ==\"@{triggerBody()?['object']?['name']}\" | summarize make_set(AlertIds));\nSecurityAlert\n| where SystemAlertId !in (excludedAlerts)\n| mv-expand entitiesJson = todynamic(Entities)\n| where entitiesJson.Type == \"ip\" and entitiesJson.Address == \"@{variables('firstIPAddress')}\"\n| summarize time_gen = max(TimeGenerated) by SystemAlertId\n| sort by time_gen desc\n| summarize make_list(SystemAlertId, maxSize=149)",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/queryData",
                        "queries": {
                          "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                          "resourcename": "@parameters('workspaceName')",
                          "resourcetype": "Log Analytics Workspace",
                          "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                          "timerange": "Last 7 days"
                        }
                      },
                      "runAfter": {
                        "Initialize_an_array_variable_for_logging_added_alerts": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Wait_for_3_minutes": {
                      "inputs": {
                        "interval": {
                          "count": 3,
                          "unit": "Minute"
                        }
                      },
                      "runAfter": {
                        "Run_query_and_list_results": [
                          "Succeeded"
                        ]
                      },
                      "type": "Wait"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "workspaceName": {
                      "defaultValue": "[[parameters('WorkspaceName')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                        "connectionName": "[[variables('azuremonitorlogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]"
                      },
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId10'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId10')]",
                "contentId": "[variables('_playbookContentId10')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Relate alerts to incident by IP",
            "description": "This playbook looks for other alerts with the same IP as the triggered incident. When such an alert is found, this playbook will add the alert to the incident (only if it isn't related to another incident).",
            "mainSteps": [
              "When a new incident is created:",
              "1. Get the first IP entity of the incident",
              "2. Make a list of alerts with the IP fetched in the previous step. Please note we exclude all the alerts with the same IP already related to the triggered incident.",
              "3. For each alert in the list:",
              "3.1 Get the incident of the alert",
              "3.2 If the last step fails (meaning the current alert is not related to another incident): add this alert to the incident.",
              "4. Add a comment to the incident specifying all the alerts added to it by listing their \"SystemAlertId\" field."
            ],
            "lastUpdateTime": "2022-03-20T00:00:00Z",
            "entities": [
              "Ip"
            ],
            "tags": [
              "grouping"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Relate alerts to incident by IP",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Send-basic-email playbook",
        "displayName": "Send-basic-email playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName11'),'/',variables('playbookVersion11'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName11'))]"
      ],
      "properties": {
        "description": "Send-basic-email Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion11')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Send-basic-email",
              "type": "String"
            },
            "NotificationEmail": {
              "type": "String",
              "metadata": {
                "description": "Incident details will be sent to this email (ex. soc@xyz.com)"
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "o365ConnectionName": "[[concat('o365-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('o365ConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Send-basic-email",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Compose_Incident_link": {
                      "runAfter": {
                        "Create_HTML_table_with_Entities": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "<a href=\"@{triggerBody()?['object']?['properties']?['incidentUrl']}\">@{triggerBody()?['object']?['properties']?['incidentUrl']}</a>"
                    },
                    "Create_HTML_table_with_Entities": {
                      "runAfter": {
                        "Select_Entities": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table",
                      "inputs": {
                        "format": "HTML",
                        "from": "@body('Select_Entities')"
                      }
                    },
                    "Select_Entities": {
                      "type": "Select",
                      "inputs": {
                        "from": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "select": {
                          "Entity": "@item()?['properties']?['friendlyName']",
                          "Entity Type": "@item()?['kind']"
                        }
                      }
                    },
                    "Send_an_email_with_Incident_details": {
                      "runAfter": {
                        "Compose_Incident_link": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p><span style=\"font-size: 16px\"><strong>New incident created in Microsoft Sentinel. Incident details:</strong></span><br>\n<br>\n<span style=\"font-size: 14px\"><strong>Incident title:<br>\n</strong></span>@{triggerBody()?['object']?['properties']?['title']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Incident ID:<br>\n</strong></span>@{triggerBody()?['object']?['properties']?['incidentNumber']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Creation time:<br>\n</strong></span>@{triggerBody()?['object']?['properties']?['createdTimeUtc']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Severity:<br>\n</strong></span>@{triggerBody()?['object']?['properties']?['severity']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Alert providers:<br>\n</strong></span>@{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Tactics:<br>\n</strong></span>@{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Description:<br>\n</strong></span>@{triggerBody()?['object']?['properties']?['description']}<br>\n<br>\n<span style=\"font-size: 14px\"><strong>Entities:<br>\n</strong></span><span style=\"font-size: 12px\"></span><span style=\"font-size: 12px\">@{body('Create_HTML_table_with_Entities')}</span><span style=\"font-size: 12px\"></span><br>\n<br>\n<span style=\"font-size: 14px\"><strong>Incident link:<br>\n</strong></span>@{outputs('Compose_Incident_link')}<br>\n</p>",
                          "Importance": "High",
                          "Subject": "New Microsoft Sentinel Incident - @{triggerBody()?['object']?['properties']?['title']}",
                          "To": "[[parameters('NotificationEmail')]"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "office365": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]",
                        "connectionName": "[[variables('o365ConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId11'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId11')]",
                "contentId": "[variables('_playbookContentId11')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion11')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Send basic email",
            "description": "This playbook will be sending email with basic incidents details (Incident title, severity, tactics, link,…) when incident is created in Microsoft Sentinel.",
            "prerequisites": " An O365 account to be used to send email notification (The user account will be used in O365 connector: Send an email step.)",
            "postDeployment": [
              "**1. Configure connections**",
              "Edit the Logic App or go to Logic app designer.",
              "Expand “Send an email with Incident details” and fix this connector by adding a new connection or signing-in to marked one with user that has mailbox.",
              "Note:  Email sent with this playbook will be from user that creates connection!",
              "**2. Attach the playbook**",
              "Attach the playbook",
              "[Learn more about automation rules](https://docs.microsoft.com/azure/sentinel/automate-incident-handling-with-automation-rules#creating-and-managing-automation-rules)",
              "Note: Playbook is disabled by default. Please enable it before assigning to the Automation rule!"
            ],
            "lastUpdateTime": "2021-07-14T00:00:00Z",
            "tags": [
              "Notification"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Send basic email",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName12')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Send-email-with-formatted-incident-report playbook",
        "displayName": "Send-email-with-formatted-incident-report playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName12'),'/',variables('playbookVersion12'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName12'))]"
      ],
      "properties": {
        "description": "Send-email-with-formatted-incident-report Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion12')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Send-email-with-formatted-incident-report",
              "type": "string"
            },
            "NotificationEmail": {
              "type": "string",
              "metadata": {
                "description": "Incident details will be sent to this email (ex. soc@xyz.com)"
              }
            },
            "Company logo link": {
              "defaultValue": "https://azure.microsoft.com/svghandler/azure-sentinel",
              "type": "string",
              "metadata": {
                "description": "Company logo that will be visible in the incident report (size defined in template) (ex. https://azure.microsoft.com/svghandler/azure-sentinel)"
              }
            },
            "Company name": {
              "defaultValue": "Contoso SOC",
              "type": "string",
              "metadata": {
                "description": "Company name that will be visible in the report, you can also add SOC (ex. Contoso SOC)"
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "o365ConnectionName": "[[concat('o365-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('o365ConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Send-email-with-formatted-incident-report",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Company logo link": {
                      "defaultValue": "[[parameters('Company logo link')]",
                      "type": "String"
                    },
                    "Report name": {
                      "defaultValue": "[[parameters('Company name')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Compose_Email_response": {
                      "runAfter": {
                        "Create_HTML_table_with_Alerts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "<!DOCTYPE html>\n<html>\n\n<table style=\"width: 100%; border-collapse: collapse;\" border=\"1\" width=\"100%\">\n\n<tbody>\n\n<tr>\n<td style=\"width: 19%;\" align=\"center\" width=\"19%\">\n<strong><img src=\"https://azure.microsoft.com/svghandler/azure-sentinel?width=150&amp;height=79\" alt=\"\" /></strong>\n</td>\n\n<td style=\"width: 41.1434%;\" width=\"48%\">\n<p style=\"text-align: center;\"><span style=\"font-size: 16pt;\"><strong>@{parameters('Report name')}</strong></span></p>\n<p style=\"text-align: center;\"><strong>Microsoft Sentinel incident report</strong></p>\n</td>\n\n<td style=\"width: 20%;\" width=\"20%\">\n<p><span style=\"font-size: 12pt;\"><strong>Incident ID: @{triggerBody()?['object']?['properties']?['incidentNumber']}</strong></span></p>\n<p><span style=\"font-size: 13pt;\"><strong><a href=\"@{triggerBody()?['object']?['properties']?['incidentUrl']}\">View incident</a></strong></span></p>\n</td>\n\n<td style=\"width: 13%;\" align=\"center\" width=\"13%\">\n<strong><img src=\"@{parameters('Company logo link')}?width=150&amp;height=79\" alt=\"\" /></strong>\n</td>\n\n</tr>\n\n<tr>\n<td style=\"width: 93.1434%;\" colspan=\"4\" width=\"100%\">\n<p>Incident title:</p>\n<p><span style=\"font-size: 16pt;\"><strong>@{triggerBody()?['object']?['properties']?['title']}</strong></span></p>\n<p>&nbsp;</p>\n</td>\n</tr>\n\n</tbody>\n</table>\n\n<table style=\"width: 100%; border-collapse: collapse;\" border=\"1\" width=\"100%\">\n\n<tbody>\n\n<tr style=\"vertical-align: top;\">\n<td style=\"width: 23.25%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Creation time</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{triggerBody()?['object']?['properties']?['createdTimeUtc']}</span></p>\n</td>\n\n<td style=\"width: 23.25%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Severity</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{triggerBody()?['object']?['properties']?['severity']}</span></p>\n</td>\n\n<td style=\"width: 23.3934%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Alert providers</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{join(triggerBody()?['object']?['properties']?['additionalData']?['alertProductNames'], '<br />')}</span></p>\n</td>\n\n<td style=\"width: 23.25%; height: 190px;\">\n<p><span style=\"font-size: 12pt;\"><strong>Tactics</strong></span><br /><br/>\n<span style=\"font-size: 12.0pt;\">@{join(triggerBody()?['object']?['properties']?['additionalData']?['tactics'], '<br />')}</span></p>\n</td>\n</tr>\n\n<td style=\"width: 93.1434%;\" colspan=\"4\" width=\"100%\">\n<p><span style=\"font-size: 12pt;\"><strong>Description</strong></span><br /><br />\n<span style=\"font-size: 12.0pt;\">@{triggerBody()?['object']?['properties']?['description']}</span></p>\n</td>\n</tr>\n\n<tr>\n<td style=\"width: 46.5%;\" colspan=\"2\" width=\"50%\">\n<p><span style=\"font-size: 12pt;\"><strong>Entities</strong></span></p>\n<p>@{body('Create_HTML_table_with_Entities')}</p>\n<p>&nbsp;</p>\n</td>\n\n<td style=\"width: 46.6434%;\" colspan=\"2\" width=\"50%\">\n@{body('Create_HTML_table_with_Alerts')}\n</td>\n\n</tr>\n\n</tbody>\n</table>\n</html>"
                    },
                    "Create_HTML_table_with_Alerts": {
                      "runAfter": {
                        "Select_Alerts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table",
                      "inputs": {
                        "format": "HTML",
                        "from": "@body('Select_Alerts')"
                      }
                    },
                    "Create_HTML_table_with_Entities": {
                      "runAfter": {
                        "Select_Entities": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table",
                      "inputs": {
                        "format": "HTML",
                        "from": "@body('Select_Entities')"
                      }
                    },
                    "Select_Alerts": {
                      "runAfter": {
                        "Create_HTML_table_with_Entities": [
                          "Succeeded"
                        ]
                      },
                      "type": "Select",
                      "inputs": {
                        "from": "@triggerBody()?['object']?['properties']?['Alerts']",
                        "select": {
                          "Alerts": "@item()?['properties']?['alertDisplayName']"
                        }
                      }
                    },
                    "Select_Entities": {
                      "type": "Select",
                      "inputs": {
                        "from": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "select": {
                          "Entity": "@item()?['properties']?['friendlyName']",
                          "Entity type": "@item()?['kind']"
                        }
                      }
                    },
                    "Send_an_email_with_Incident_details": {
                      "runAfter": {
                        "Compose_Email_response": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p>@{outputs('Compose_Email_response')}</p>",
                          "Importance": "High",
                          "Subject": "New Microsoft Sentinel incident - @{triggerBody()?['object']?['properties']?['title']}",
                          "To": "[[parameters('NotificationEmail')]"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "office365": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]",
                        "connectionName": "[[variables('o365ConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId12'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId12')]",
                "contentId": "[variables('_playbookContentId12')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion12')]",
                "source": {
                  "kind": "Solution",
                  "name": "SentinelSOARessentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Send email with formatted incident report",
            "description": "This playbook will be sending email with formated incidents report (Incident title, severity, tactics, link,…) when incident is created in Microsoft Sentinel. Email notification is made in HTML.",
            "prerequisites": "An O365 account to be used to send email notification (The user account will be used in O365 connector (Send an email).) Link with company logo. No formating since size is defined in the Playbook. Linke example - https://azure.microsoft.com/svghandler/azure-sentinel",
            "postDeployment": [
              "**1.Configure connections**\nEdit the Logic App or go to Logic app designer.\nExpand “Send an email with Incident details” and fix this connector by adding a new connection or signing-in to marked one with user that has mailbox.\nNote:  Email sent with this playbook will be from user that creates connection!\n**Attach the playbook**\nAttach the playbook\n[Learn more about automation rules](https://docs.microsoft.com/azure/sentinel/automate-incident-handling-with-automation-rules#creating-and-managing-automation-rules)\nNote: Playbook is disabled by default. Please enable it before assigning to the Automation rule!"
            ],
            "lastUpdateTime": "2021-07-14T00:00:00Z",
            "tags": [
              "Notification"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Send email with formatted incident report",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "SentinelSOARessentials",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_Incident-Assignment-Shifts')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Notify-IncidentClosed')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Notify-IncidentReopened')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Notify-IncidentSeverityChanged')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Notify-Owner')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Post-Message-Slack-alert-trigger')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Post-Message-Teams-alert-trigger')]",
              "version": "[variables('playbookVersion7')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Post-Message-Teams-incident-trigger')]",
              "version": "[variables('playbookVersion8')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Post-Message-Slack-incident-trigger')]",
              "version": "[variables('playbookVersion9')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_relateAlertsToIncident-basedOnIP')]",
              "version": "[variables('playbookVersion10')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Send-basic-email')]",
              "version": "[variables('playbookVersion11')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Send-email-with-formatted-incident-report')]",
              "version": "[variables('playbookVersion12')]"
            }
          ]
        },
        "firstPublishDate": "2022-06-27",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
