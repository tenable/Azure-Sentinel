{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "title": "Google Directory - Suspend User", 
        "description": "Once a new Microsoft Sentinel incident is created, this playbook gets triggered and performs the following actions:\n 1. Gets users from the incident.\n 2. Sends an adaptive card to the Teams channel where the analyst can choose users to suspend.\n 3. Suspends users.\n 4. Adds comment to the incident about suspended users.",
        "prerequisites": [
            "1. Google Directory Custom API Connector has to be deployed prior to the deployment of this playbook under the same subscription.",
            "2. Google Directory API credentials are required. Refer to the Google Directory Custom Connector documentation."
        ],
        "lastUpdateTime": "2022-08-08T12:00:00.000Z", 
        "entities": ["Account"],
        "tags": ["Remediation", "Response from teams"], 
        "support": {
            "tier": "microsoft"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Google-SuspendUser",
            "type": "String"
        },
        "TeamsGroupId": {
            "defaultValue": "TeamsGroupId",
            "type": "String",
            "metadata": {
                "description": "Id of the Teams Group where the adaptive card will be posted."
            }
        },
        "TeamsChannelId": {
            "defaultValue": "TeamsChannelId",
            "type": "String",
            "metadata": {
                "description": "Id of the Teams Channel where the adaptive card will be posted."
            }
        },
        "GoogleDirectoryConnectorName": {
            "defaultValue": "GoogleDirectory",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName": "[concat('teams-', parameters('PlaybookName'))]",
        "GoogleDirectoryCustomAPIConnectionName": "[concat('googledirectory-connection-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('TeamsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('TeamsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('GoogleDirectoryCustomAPIConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('GoogleDirectoryCustomAPIConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('GoogleDirectoryConnectorName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('GoogleDirectoryCustomAPIConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Compose": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": "@split(body('Post_adaptive_card_and_wait_for_a_response')['data']['users_to_suspend'], ',')"
                                },
                                "Set_variable": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "users_to_suspend",
                                        "value": "@outputs('Compose')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Post_adaptive_card_and_wait_for_a_response": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "contains": [
                                            "@body('Post_adaptive_card_and_wait_for_a_response')",
                                            "data"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "@body('Post_adaptive_card_and_wait_for_a_response')['data']",
                                            "users_to_suspend"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Entities_-_Get_Accounts": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/account"
                            }
                        },
                        "For_each_user": {
                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {
                                        "get_user_email": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "emails",
                                        "value": {
                                            "title": "@outputs('get_user_email')",
                                            "value": "@outputs('get_user_email')"
                                        }
                                    }
                                },
                                "get_account_name": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": "@items('For_each_user')?['Name']"
                                },
                                "get_account_upn_suffix": {
                                    "runAfter": {
                                        "get_account_name": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@items('For_each_user')?['UPNSuffix']"
                                },
                                "get_user_email": {
                                    "runAfter": {
                                        "get_account_upn_suffix": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@concat(outputs('get_account_name'), '@', outputs('get_account_upn_suffix'))"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_users_to_suspend": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_user_to_suspend": {
                            "foreach": "@variables('users_to_suspend')",
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "Update_User": [
                                            "TimedOut",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>User @{items('For_each_user_to_suspend')} was not suspended due to error.</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Add_comment_to_incident_(V3)_2": {
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)": [
                                            "Skipped"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>User @{items('For_each_user_to_suspend')} was suspended.</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Update_User": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "suspended": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['googledirectory']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/admin/directory/v1/users/@{encodeURIComponent(items('For_each_user_to_suspend'))}",
                                        "queries": {
                                            "alt": "json",
                                            "prettyPrint": true
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_Adaptive_Card_Body": {
                            "runAfter": {
                                "For_each_user": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                "actions": [
                                    {
                                        "id": "btnSubmit",
                                        "title": "Submit",
                                        "type": "Action.Submit"
                                    },
                                    {
                                        "id": "btnIgnore",
                                        "title": "Ignore",
                                        "type": "Action.Submit"
                                    }
                                ],
                                "body": [
                                    {
                                        "size": "large",
                                        "text": "Azure Sentinel - Suspend user in GCP",
                                        "type": "TextBlock",
                                        "weight": "bolder",
                                        "wrap": true
                                    },
                                    {
                                        "text": " Incident No : @{triggerBody()?['object']?['properties']?['incidentNumber']}  ",
                                        "type": "TextBlock",
                                        "weight": "Bolder",
                                        "wrap": true
                                    },
                                    {
                                        "text": "@{triggerBody()?['object']?['properties']?['description']}",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "text": "For more details check the incident:",
                                        "type": "TextBlock",
                                        "weight": "Bolder",
                                        "wrap": true
                                    },
                                    {
                                        "text": "[Click here to view the Incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "id": "PollQuestionAction",
                                        "text": "Select users to suspend",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "choices": "@variables('emails')",
                                        "id": "users_to_suspend",
                                        "isMultiSelect": true,
                                        "style": "compact",
                                        "type": "Input.ChoiceSet"
                                    }
                                ],
                                "type": "AdaptiveCard",
                                "version": "1.0"
                            }
                        },
                        "Initialize_variable_TeamsChannelId": {
                            "runAfter": {
                                "Initialize_variable_TeamsGroupId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TeamsChannelId",
                                        "type": "string",
                                        "value": "[parameters('TeamsChannelId')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_TeamsGroupId": {
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TeamsGroupId",
                                        "type": "string",
                                        "value": "[parameters('TeamsGroupId')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_emails": {
                            "runAfter": {
                                "Initialize_variable_TeamsChannelId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emails",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_users_to_suspend": {
                            "runAfter": {
                                "Initialize_variable_emails": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "users_to_suspend",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Post_adaptive_card_and_wait_for_a_response": {
                            "runAfter": {
                                "Get_Adaptive_Card_Body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "body": {
                                        "messageBody": "@{outputs('Get_Adaptive_Card_Body')}",
                                        "recipient": {
                                            "channelId": "@variables('TeamsChannelId')",
                                            "groupId": "@variables('TeamsGroupId')"
                                        },
                                        "updateMessage": "Thanks for your response!"
                                    },
                                    "notificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "googledirectory": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('GoogleDirectoryCustomAPIConnectionName'))]",
                                "connectionName": "[variables('GoogleDirectoryCustomAPIConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('GoogleDirectoryConnectorName'))]"
                            },
                            "teams": {
                                "connectionName": "[variables('TeamsConnectionName')]",
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/teams')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}