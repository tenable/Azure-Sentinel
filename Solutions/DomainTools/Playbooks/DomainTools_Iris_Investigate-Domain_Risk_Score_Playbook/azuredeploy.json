{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Domain Risk Score - DomainTools Iris Investigate", 
        "description": "Given a domain or set of domains associated with an incident return the risk scores and adjust the severity of the incident if a high risk domain is observed, adding the risk details in the comments of the incident.",
        "prerequisites": "A DomainTools API Key provisioned for Iris Investigate. Visit https://www.domaintools.com/integrations to request a trial key.",
        "lastUpdateTime": "2022-09-24T00:00:00.000Z", 
        "entities": ["host"], 
        "tags": ["Enrichment"], 
        "support": {
            "tier": "community" 
        },
        "author": {
            "name": "Dan Nunes, DomainTools"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "DomainTools_Iris_Investigate-Domain_Risk_Score_Playbook",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }
    },
    "variables": {
		"DomainToolsApiKey": "[concat('domaintoolsirisinves-', parameters('PlaybookName'))]",
		"AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
	},
    "resources": [
        {
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('AzureSentinelConnectionName')]",
			"location": "[resourceGroup().location]",
			"kind": "V1",
			"properties": {
				"displayName": "[variables('AzureSentinelConnectionName')]",
				"customParameterValues": {},
				"parameterValueType": "Alternative",
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
				}
			}
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('DomainToolsApiKey')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "[parameters('UserName')]",
				"customParameterValues": {},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/farsightdnsdb')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
			"identity": {
				"type": "SystemAssigned"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('DomainToolsApiKey'))]",
				"[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
			],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "High": {
                            "defaultValue": 100,
                            "type": "Int"
                        },
                        "Informational": {
                            "defaultValue": 49,
                            "type": "Int"
                        },
                        "Low": {
                            "defaultValue": 69,
                            "type": "Int"
                        },
                        "Medium": {
                            "defaultValue": 89,
                            "type": "Int"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "DNS_Name_Variable": {
                            "runAfter": {
                                "Host_Name_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "dns_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Domain_Name_Variable": {
                            "runAfter": {
                                "DNS_Name_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "domain_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Domain_Risk_Score_Variable": {
                            "runAfter": {
                                "Domain_Name_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "domain_risk_score",
                                        "type": "integer"
                                    }
                                ]
                            }
                        },
                        "Entities_-_Get_Hosts": {
                            "runAfter": {
                                "incident_assigned_severity_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/host"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions": {
                                "Check_DNS_Name_is_empty": {
                                    "actions": {
                                        "Set_Domain_Name_Variable": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "domain_name",
                                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_DNS_Name_Variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_variable": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "domain_name",
                                                    "value": "@variables('host_name')"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@variables('dns_name')",
                                                        ""
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Check_if_results_exists": {
                                    "actions": {
                                        "Loop_through_the_results_object": {
                                            "foreach": "@body('Investigate_Domain')?['response']?['results']",
                                            "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                    "runAfter": {
                                                        "Domain_Risk_Score_Table": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p><span style=\"font-size: 16px\"><strong>DomainTools Risk Score details for: </strong></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"> : </span><span style=\"font-size: 16px\">@{variables('domain_risk_score')}</span><span style=\"font-size: 16px\"><br>\nDomain Risk Components: </span><span style=\"font-size: 16px\">@{replace(replace(replace(body('Domain_Risk_Score_Table') , '&quot;', ''),']','') , '[', '') }</span><span style=\"font-size: 16px\"></span><br>\n<br>\nFind more details: https://research.domaintools.com/iris/search/?q=@{variables('domain_name')}</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    }
                                                },
                                                "Domain_Risk_Score_Table": {
                                                    "runAfter": {
                                                        "Severity_Condition": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table",
                                                    "inputs": {
                                                        "format": "HTML",
                                                        "from": "@items('Loop_through_the_results_object')?['domain_risk']?['components']"
                                                    }
                                                },
                                                "Set_Domain_Risk_Score": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "domain_risk_score",
                                                        "value": "@items('Loop_through_the_results_object')?['domain_risk']?['risk_score']"
                                                    }
                                                },
                                                "Severity_Condition": {
                                                    "actions": {
                                                        "Add_Informational_to_Array": {
                                                            "runAfter": {},
                                                            "type": "AppendToArrayVariable",
                                                            "inputs": {
                                                                "name": "Incident_severity",
                                                                "value": "@variables('severity_informational_text')"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Set_Domain_Risk_Score": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Severity_low": {
                                                                "actions": {
                                                                    "Add_Low_to_Array": {
                                                                        "runAfter": {},
                                                                        "type": "AppendToArrayVariable",
                                                                        "inputs": {
                                                                            "name": "Incident_severity",
                                                                            "value": "@variables('severity_low_text')"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "else": {
                                                                    "actions": {
                                                                        "Severity_medium": {
                                                                            "actions": {
                                                                                "Add_Medium_to_Array": {
                                                                                    "runAfter": {},
                                                                                    "type": "AppendToArrayVariable",
                                                                                    "inputs": {
                                                                                        "name": "Incident_severity",
                                                                                        "value": "@variables('severity_medium_text')"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "runAfter": {},
                                                                            "else": {
                                                                                "actions": {
                                                                                    "Severity_high": {
                                                                                        "actions": {
                                                                                            "Add_High_to_Array": {
                                                                                                "runAfter": {},
                                                                                                "type": "AppendToArrayVariable",
                                                                                                "inputs": {
                                                                                                    "name": "Incident_severity",
                                                                                                    "value": "@variables('severity_high_text')"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "runAfter": {},
                                                                                        "expression": {
                                                                                            "and": [
                                                                                                {
                                                                                                    "greater": [
                                                                                                        "@variables('domain_risk_score')",
                                                                                                        "@variables('severity_medium')"
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "lessOrEquals": [
                                                                                                        "@variables('domain_risk_score')",
                                                                                                        "@variables('severity_high')"
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "type": "If"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "greater": [
                                                                                            "@variables('domain_risk_score')",
                                                                                            "@variables('severity_low')"
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "lessOrEquals": [
                                                                                            "@variables('domain_risk_score')",
                                                                                            "@variables('severity_medium')"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "If"
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "greater": [
                                                                                "@variables('domain_risk_score')",
                                                                                "@variables('severity_informational')"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "lessOrEquals": [
                                                                                "@variables('domain_risk_score')",
                                                                                "@variables('severity_low')"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "lessOrEquals": [
                                                                    "@variables('domain_risk_score')",
                                                                    "@variables('severity_informational')"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {
                                        "Investigate_Domain": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Add_comment_to_incident_(V3)_2": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                        "message": "<p><strong>No results found for: </strong>@{variables('domain_name')}</p>"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/Incidents/Comment"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Investigate_Domain')?['response']?['results'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Investigate_Domain": {
                                    "runAfter": {
                                        "Check_DNS_Name_is_empty": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['domaintoolsirisinves']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/iris-investigate/investigate_domain",
                                        "queries": {
                                            "domain": "@variables('domain_name')"
                                        }
                                    }
                                },
                                "Set_DNS_Name_Variable": {
                                    "runAfter": {
                                        "Set_Host_Name_Variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "dns_name",
                                        "value": "@items('For_each')?['DnsDomain']"
                                    }
                                },
                                "Set_Host_Name_Variable": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "host_name",
                                        "value": "@items('For_each')?['HostName']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Host_Name_Variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "host_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Incident_Severity_Array": {
                            "runAfter": {
                                "Domain_Risk_Score_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Incident_severity",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Incident_Severity_Check": {
                            "actions": {
                                "Check_High": {
                                    "actions": {
                                        "Set_high_severity_to_incident": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "incident_assigned_severity_value",
                                                "value": "@variables('severity_high_text')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_Unique_Incident_Severity": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Check_Medium": {
                                                "actions": {
                                                    "Set_medium_severity_to_incident": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "incident_assigned_severity_value",
                                                            "value": "@variables('severity_medium_text')"
                                                        }
                                                    }
                                                },
                                                "runAfter": {},
                                                "else": {
                                                    "actions": {
                                                        "Check_Low": {
                                                            "actions": {
                                                                "Set_low_severity_to_incident": {
                                                                    "runAfter": {},
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "incident_assigned_severity_value",
                                                                        "value": "@variables('severity_low_text')"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "else": {
                                                                "actions": {
                                                                    "Check_Informational": {
                                                                        "actions": {
                                                                            "Set_informational_severity_to_incident": {
                                                                                "runAfter": {},
                                                                                "type": "SetVariable",
                                                                                "inputs": {
                                                                                    "name": "incident_assigned_severity_value",
                                                                                    "value": "@variables('severity_informational_text')"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {},
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "contains": [
                                                                                        "@variables('Incident_severity_unique')",
                                                                                        "@variables('severity_informational_text')"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "contains": [
                                                                            "@variables('Incident_severity_unique')",
                                                                            "@variables('severity_low_text')"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "contains": [
                                                                "@variables('Incident_severity_unique')",
                                                                "@variables('severity_medium_text')"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@variables('Incident_severity_unique')",
                                                    "@variables('severity_high')"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Set_Unique_Incident_Severity": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Incident_severity_unique",
                                        "value": "@union(variables('Incident_severity'),variables('Incident_severity'))"
                                    }
                                },
                                "Update_incident": {
                                    "runAfter": {
                                        "Check_High": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "severity": "@variables('incident_assigned_severity_value')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Incidents"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('Incident_severity'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Incident_Severity_Unique_Array": {
                            "runAfter": {
                                "Incident_Severity_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Incident_severity_unique",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "incident_assigned_severity_value": {
                            "runAfter": {
                                "severity_high_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "incident_assigned_severity_value",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "severity_high_threshold_value": {
                            "runAfter": {
                                "severity_medium_threshold_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_high",
                                        "type": "integer",
                                        "value": "@parameters('High')"
                                    }
                                ]
                            }
                        },
                        "severity_high_value": {
                            "runAfter": {
                                "severity_medium_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_high_text",
                                        "type": "string",
                                        "value": "High"
                                    }
                                ]
                            }
                        },
                        "severity_informational_threshold_value": {
                            "runAfter": {
                                "Incident_Severity_Unique_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_informational",
                                        "type": "integer",
                                        "value": "@parameters('Informational')"
                                    }
                                ]
                            }
                        },
                        "severity_informational_value": {
                            "runAfter": {
                                "severity_high_threshold_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_informational_text",
                                        "type": "string",
                                        "value": "Informational"
                                    }
                                ]
                            }
                        },
                        "severity_low_threshold_value": {
                            "runAfter": {
                                "severity_informational_threshold_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_low",
                                        "type": "integer",
                                        "value": "@parameters('Low')"
                                    }
                                ]
                            }
                        },
                        "severity_low_value": {
                            "runAfter": {
                                "severity_informational_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_low_text",
                                        "type": "string",
                                        "value": "Low"
                                    }
                                ]
                            }
                        },
                        "severity_medium_threshold_value": {
                            "runAfter": {
                                "severity_low_threshold_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_medium",
                                        "type": "integer",
                                        "value": "@parameters('Medium')"
                                    }
                                ]
                            }
                        },
                        "severity_medium_value": {
                            "runAfter": {
                                "severity_low_value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "severity_medium_text",
                                        "type": "string",
                                        "value": "Medium"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
								"connectionProperties": {
									"authentication": {
										"type": "ManagedServiceIdentity"
									}
								}
                            },
                            "domaintoolsirisinves": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('DomainToolsApiKey'))]",
                                "connectionName": "[variables('DomainToolsApiKey')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/domaintoolsirisinves')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
