{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "42Crunch - plugins@42crunch.com",
    "comments": "Solution template for 42Crunch API Protection"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "42Crunch API Protection Workbook",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "42crunch1580391915541.42crunch_sentinel_solution",
    "_solutionId": "[variables('solutionId')]",
    "email": "plugins@42crunch.com",
    "_email": "[variables('email')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "42CrunchAPIProtectionWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "25c86f99-0a91-4b7f-88f3-599a008e5ab8",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "2c59e609-e0a0-4e8e-adc5-ab4224be8a36",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]",
    "analyticRuleVersion3": "1.0.0",
    "analyticRulecontentId3": "d944d564-b6fa-470d-b5ab-41b341878c5e",
    "_analyticRulecontentId3": "[variables('analyticRulecontentId3')]",
    "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId3'))]",
    "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId3')))]",
    "analyticRuleVersion4": "1.0.0",
    "analyticRulecontentId4": "1b047dc3-a879-4f99-949b-d1dc867efc83",
    "_analyticRulecontentId4": "[variables('analyticRulecontentId4')]",
    "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId4'))]",
    "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId4')))]",
    "analyticRuleVersion5": "1.0.0",
    "analyticRulecontentId5": "c6258d51-7b82-4942-8293-94c1dcf91595",
    "_analyticRulecontentId5": "[variables('analyticRulecontentId5')]",
    "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId5'))]",
    "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId5')))]",
    "analyticRuleVersion6": "1.0.0",
    "analyticRulecontentId6": "28500be7-cfcf-40e1-bad4-bc524e9283e2",
    "_analyticRulecontentId6": "[variables('analyticRulecontentId6')]",
    "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId6'))]",
    "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId6')))]",
    "analyticRuleVersion7": "1.0.0",
    "analyticRulecontentId7": "bbd163f4-1f56-434f-9c23-b06713c119c2",
    "_analyticRulecontentId7": "[variables('analyticRulecontentId7')]",
    "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId7'))]",
    "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId7')))]",
    "analyticRuleVersion8": "1.0.0",
    "analyticRulecontentId8": "421b38ec-4295-4aed-8299-c92e268ad663",
    "_analyticRulecontentId8": "[variables('analyticRulecontentId8')]",
    "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId8'))]",
    "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId8')))]",
    "analyticRuleVersion9": "1.0.0",
    "analyticRulecontentId9": "d951d64d-0ecd-4675-8c79-6c870d5f72ac",
    "_analyticRulecontentId9": "[variables('analyticRulecontentId9')]",
    "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId9'))]",
    "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId9')))]",
    "analyticRuleVersion10": "1.0.0",
    "analyticRulecontentId10": "b808063b-07d5-432c-95d0-8900da61cce9",
    "_analyticRulecontentId10": "[variables('analyticRulecontentId10')]",
    "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId10'))]",
    "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId10')))]",
    "analyticRuleVersion11": "1.0.0",
    "analyticRulecontentId11": "7bdc10d6-aa24-4ca9-9a93-802cd8761354",
    "_analyticRulecontentId11": "[variables('analyticRulecontentId11')]",
    "analyticRuleId11": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId11'))]",
    "analyticRuleTemplateSpecName11": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId11')))]",
    "uiConfigId1": "42CrunchAPIProtection",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "42CrunchAPIProtection",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "42Crunch API Protection Workbook with template",
        "displayName": "42Crunch API Protection workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "42CrunchAPIProtectionWorkbookWorkbook Workbook with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Monitor and protect APIs using the 42Crunch API microfirewall"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| summarize request = count() by Source_IP_s\\r\\n| render piechart \",\"size\":0,\"title\":\"Requests by IP Address\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"mapSettings\":{\"locInfo\":\"CountryRegion\",\"locInfoColumn\":\"Source_IP_s\",\"sizeAggregation\":\"Sum\",\"legendAggregation\":\"Sum\"}},\"customWidth\":\"33\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| summarize request = count() by tostring(Status_d)\\r\\n| render piechart \",\"size\":0,\"title\":\"Status Code Return\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"33\",\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| summarize request = count() by Instance_Name_s\\r\\n| render piechart \",\"size\":0,\"title\":\"Hits by Instances\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"33\",\"name\":\"query - 5 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| make-series requests = count() default = 0 on Timestamp_t from  ago(1h) to now() step 5m by Instance_Name_s\\r\\n| render areachart \",\"size\":0,\"title\":\"Request over Time\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\n| summarize Requests = count() , FailedRequests = countif(Status_d != 200) , SuccesfullRequests = countif(Status_d  == 200), LastEventTime  = max(TimeGenerated) by InstanceName = Instance_Name_s\\n| extend Status = iff(LastEventTime >= ago(2h), \\\"Available\\\", \\\"Unavailable\\\")\\n| project Status,InstanceName, Requests, SuccesfullRequests, FailedRequests, LastEventTime\",\"size\":1,\"title\":\"Protection Instances\",\"exportFieldName\":\"InstanceName\",\"exportParameterName\":\"InstanceName\",\"exportDefaultValue\":\"\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Status\",\"formatter\":11},{\"columnMatch\":\"Requests\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"SuccesfullRequests\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenDarkDark\"}},{\"columnMatch\":\"FailedRequests\",\"formatter\":4,\"formatOptions\":{\"palette\":\"redDark\"}}]}},\"name\":\"Protection Instances\"},{\"type\":1,\"content\":{\"json\":\"## Instance Information\\r\\nSelect instance from the table above to see detailed information.\",\"style\":\"upsell\"},\"name\":\"text - 7\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Detailed Information for: {InstanceName}\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| where Instance_Name_s  == '{InstanceName}'\\r\\n| make-series requests = count() default = 0 on Timestamp_t from  ago(24h) to now() step 1h\\r\\n| render areachart \",\"size\":0,\"title\":\"Requests Over Time\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| where Instance_Name_s  == '{InstanceName}'\\r\\n| make-series requests = count() default = 0 on Timestamp_t from  ago(24h) to now() step 1h by Source_IP_s \\r\\n| render areachart \",\"size\":0,\"title\":\"Requests by IP Address\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 1 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| where Instance_Name_s  contains '{InstanceName}'\\r\\n| summarize Requests = count() , FailedRequests = countif(Status_d != 200) , SuccesfullRequests = countif(Status_d  == 200) by URIPath = URI_Path_s\\r\\n| sort by Requests\",\"size\":0,\"title\":\"Requests Summary by URI\",\"timeContext\":{\"durationMs\":86400000},\"exportFieldName\":\"URIPath\",\"exportParameterName\":\"Path\",\"exportDefaultValue\":\"\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"customWidth\":\"55\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| where Instance_Name_s  contains '{InstanceName}'\\r\\n| summarize Requests = count() , FailedRequests = countif(Status_d != 200) , SuccesfullRequests = countif(Status_d  == 200) by SourceIP = Source_IP_s\",\"size\":0,\"title\":\"Requests Summary by IP\",\"timeContext\":{\"durationMs\":86400000},\"exportFieldName\":\"SourceIP\",\"exportParameterName\":\"SourceIP\",\"exportDefaultValue\":\"\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Additional Information\\r\\nSelect a Path or Ip Address from the tables above to see detailed information.\",\"style\":\"upsell\"},\"name\":\"text - 8\"}],\"exportParameters\":true},\"conditionalVisibility\":{\"parameterName\":\"InstanceName\",\"comparison\":\"isNotEqualTo\",\"value\":\"\"},\"name\":\"Detailed Information for: {InstanceName}\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| where URI_Path_s == '{Path}'\\r\\n| summarize count() by ErrorMessage = Error_Message_s, URIPAth = URI_Path_s , Status = Status_d, SourceIP = Source_IP_s\",\"size\":0,\"title\":\"Requests by Path: {Path}\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"55\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"apifirewall_log_1_CL\\r\\n| where Source_IP_s == '{SourceIP}'\\r\\n| summarize count() by ErrorMessage = Error_Message_s, URIPAth = URI_Path_s , Status = Status_d\",\"size\":0,\"title\":\"Request by IP Address: {SourceIP}\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy\"}],\"exportParameters\":true},\"conditionalVisibilities\":[{\"parameterName\":\"Path\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"SourceIP\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"group - 2\"}],\"fromTemplateId\":\"sentinel-42CrunchAPIProtectionWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=42CrunchAPIProtectionWorkbook; logoFileName=42CrunchLogo.svg; description=Monitor and protect APIs using the 42Crunch API microfirewall; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=42Crunch API Protection Workbook; templateRelativePath=42CrunchAPIProtectionWorkbook.json; subtitle=; provider=42Crunch}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 1 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "APIAccountTakeover_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against account takeover",
                "displayName": "API - Account Takeover",
                "enabled": false,
                "query": "let firstRec = apifirewall_log_1_CL \n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_1\" and (URI_Path_s has \"/api/register\" or URI_Path_s has \"/api/reset\") and Status_d == 403;\nlet recCount = iff((toscalar(firstRec | count) >= 20), 1, 0);\nfirstRec | take recCount\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess",
                  "Discovery"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 2 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "APIAnomalyDetection_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection anomaly detection",
                "displayName": "API - Anomaly Detection",
                "enabled": false,
                "query": "let infoRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_4\" and URI_Path_s has \"/api/users/info\" and Status_d == 200;\nlet timestamp = toscalar(infoRec | top 1 by Timestamp_t desc | summarize by Timestamp_t);\nlet activityRec = apifirewall_log_1_CL\n  | where Timestamp_t < timestamp and TimeGenerated >= ago(5m)\n  | project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n  | where Instance_Name_s == \"Instance_4\" and URI_Path_s has \"/api/users/activity\" and Status_d == 200;\nactivityRec\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 3 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName3'),'/',variables('analyticRuleVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "APIAPIScaping_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId3')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against API scraping",
                "displayName": "API - API Scraping",
                "enabled": false,
                "query": "let firstRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_7\" and URI_Path_s has \"/api/properties?page=\" and Status_d == 200;\nlet rateLimitCount = (toscalar(firstRec | count));\nlet recCount = iff((rateLimitCount > 100), 1, 0);\nfirstRec | top recCount by Timestamp_t desc;\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "Reconnaissance",
                  "Collection"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId3'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 3",
                "parentId": "[variables('analyticRuleId3')]",
                "contentId": "[variables('_analyticRulecontentId3')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 4 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName4'),'/',variables('analyticRuleVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "APIBOLA_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId4')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against BOLA",
                "displayName": "API - BOLA",
                "enabled": false,
                "query": "let loginRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_5\" and URI_Path_s has \"/api/login\" and Status_d == 200;\nlet ipAddress = toscalar(loginRec\n| top 1 by Timestamp_t desc\n| summarize by Source_IP_s);\nlet listRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_5\" and URI_Path_s has \"/api/accounts/list\" and Status_d == 200;\nlet listCnt = (toscalar(listRec | count));\nlet accountRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_5\" and Source_IP_s == ipAddress and URI_Path_s matches regex \"/api/accounts/\\\\d{6}$\";\nlet accountCnt = (toscalar(accountRec | count));\nlet recCount = iff((toscalar(listRec | count) == 0) and (accountCnt > 5), accountCnt, 0);\naccountRec | take recCount\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId4'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 4",
                "parentId": "[variables('analyticRuleId4')]",
                "contentId": "[variables('_analyticRulecontentId4')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 5 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName5'),'/',variables('analyticRuleVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "APIFirstTimeAccess_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId5')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against first-time access",
                "displayName": "API - Rate limiting",
                "enabled": false,
                "query": "let firstRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_9\" and URI_Path_s has \"/api/login\" |\ntop 1 by Timestamp_t desc;\nlet ipAddress = toscalar(firstRec | summarize by Source_IP_s);\nlet secondRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(7d) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_9\" and URI_Path_s has \"/api/login\" and Source_IP_s == ipAddress;\nlet recCount = iff((toscalar(secondRec | count) > 1), 0, 1);\nsecondRec | take recCount\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "Discovery",
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId5'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 5",
                "parentId": "[variables('analyticRuleId5')]",
                "contentId": "[variables('_analyticRulecontentId5')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 6 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName6'),'/',variables('analyticRuleVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "APIInvalidHostAccess_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId6')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against invalid host access",
                "displayName": "API - Invalid host access",
                "enabled": false,
                "query": "apifirewall_log_1_CL \n| where TimeGenerated >= ago(5m) \n| where Error_Step_s has \"hostpath_mapping\" \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Response_Header_s, Request_Header_s, Errors_s, Type, UUID_g \n| sort by TimeGenerated desc \n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "Reconnaissance"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId6'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 6",
                "parentId": "[variables('analyticRuleId6')]",
                "contentId": "[variables('_analyticRulecontentId6')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 7 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName7'),'/',variables('analyticRuleVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "APIJWTValidation_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId7')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against JWT validation",
                "displayName": "API - JWT validation",
                "enabled": false,
                "query": "apifirewall_log_1_CL \n| where TimeGenerated >= ago(5m) \n| where Error_Message_s has \"missing [\\\"x-access-token\\\"]\" \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Response_Header_s, Request_Header_s, Errors_s, Type, UUID_g \n| sort by TimeGenerated desc \n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId7'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 7",
                "parentId": "[variables('analyticRuleId7')]",
                "contentId": "[variables('_analyticRulecontentId7')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 8 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName8'),'/',variables('analyticRuleVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "APIKiterunnerDetection_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId8')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against Kiterunner enumeration",
                "displayName": "API - Kiterunner detection",
                "enabled": false,
                "query": "let discoveryRecords = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g \n| where Status_d == 404 and Error_Message_s startswith \"path not defined in OAS\";\nlet discoveryCnt = (toscalar(discoveryRecords | count));\nlet recCount = iff((discoveryCnt > 500), 1, 0);\ndiscoveryRecords | top recCount by Timestamp_t desc\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "Reconnaissance",
                  "Discovery"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId8'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 8",
                "parentId": "[variables('analyticRuleId8')]",
                "contentId": "[variables('_analyticRulecontentId8')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 9 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName9'),'/',variables('analyticRuleVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "APIPasswordCracking_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId9')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against password cracking",
                "displayName": "API - Password Cracking",
                "enabled": false,
                "query": "let loginRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_2\" and URI_Path_s has \"/api/login?user=\" and Status_d == 403;\nlet recCount = iff((toscalar(loginRec | count) > 10), 1, 0);\nloginRec | take recCount\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId9'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 9",
                "parentId": "[variables('analyticRuleId9')]",
                "contentId": "[variables('_analyticRulecontentId9')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 10 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName10'),'/',variables('analyticRuleVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "APIRateLimiting_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId10')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against rate limiting",
                "displayName": "API - Rate limiting",
                "enabled": false,
                "query": "let firstRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_8\" and URI_Path_s has \"/api/login\" and Status_d == 429;\nlet rateLimitCount = (toscalar(firstRec | count));\nlet recCount = iff((rateLimitCount > 20), 1, 0);\nfirstRec | top recCount by Timestamp_t desc;\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId10'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 10",
                "parentId": "[variables('analyticRuleId10')]",
                "contentId": "[variables('_analyticRulecontentId10')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "42Crunch API Protection Analytics Rule 11 with template",
        "displayName": "42Crunch API Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName11'),'/',variables('analyticRuleVersion11'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName11'))]"
      ],
      "properties": {
        "description": "APISuspiciousLogin_AnalyticalRules Analytics Rule with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion11')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId11')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "42Crunch API protection against suspicious login",
                "displayName": "API - Suspicious Login",
                "enabled": false,
                "query": "let firstRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_6\" and URI_Path_s has \"/api/login?user=\" and Status_d in (200, 403);\nlet ipAddressCount = toscalar(firstRec | summarize by Source_IP_s | count);\nlet secondRec = firstRec | summarize arg_max(Source_IP_s, *) by Source_IP_s;\nlet recCount = iff((toscalar(secondRec | count) > 3), ipAddressCount, 0);\nsecondRec | take recCount\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "42CrunchAPIProtection",
                    "dataTypes": [
                      "apifirewall_log_1_CL"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess",
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Source_IP_s",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname_s",
                        "identifier": "HostName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Instance_Name_s",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId11'),'/'))))]",
              "properties": {
                "description": "42Crunch API Protection Analytics Rule 11",
                "parentId": "[variables('analyticRuleId11')]",
                "contentId": "[variables('_analyticRulecontentId11')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion11')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "42Crunch API Protection data connector with template",
        "displayName": "42Crunch API Protection template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "42Crunch API Protection data connector with template version 2.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "API Protection",
                  "publisher": "42Crunch",
                  "descriptionMarkdown": "Connects the 42Crunch API protection to Azure Log Analytics via the REST API interface",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "42Crunch",
                      "baseQuery": "apifirewall_log_1_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "API requests that were rate-limited",
                      "query": "apifirewall_log_1_CL\n| where TimeGenerated >= ago(30d)\n| where Status_d == 429"
                    },
                    {
                      "description": "API requests generating a server error",
                      "query": "apifirewall_log_1_CL\n| where TimeGenerated >= ago(30d)\n| where Status_d >= 500 and Status_d <= 599"
                    },
                    {
                      "description": "API requests failing JWT validation",
                      "query": "apifirewall_log_1_CL\n| where TimeGenerated >= ago(30d)\n| where Error_Message_s contains \"missing [\\\"x-access-token\\\"]\""
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "apifirewall_log_1_CL",
                      "lastDataReceivedQuery": "apifirewall_log_1_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "apifirewall_log_1_CL\n| summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(7d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "The installation process is documented in great detail in the GitHub repository [Microsoft Sentinel integration](https://github.com/42Crunch/azure-sentinel-integration). The user should consult this repository further to understand installation and debug of the integration.",
                      "title": "Step 1 : Read the detailed documentation"
                    },
                    {
                      "description": "The first installation step is to retrieve both your **Workspace ID** and **Primary Key** from the Sentinel platform.\nCopy the values shown below and save them for configuration of the API log forwarder integration.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "Step 2: Retrieve the workspace access credentials"
                    },
                    {
                      "description": "The next step is to install the 42Crunch protection and log forwarder to protect your API. Both components are availabe as containers from the [42Crunch repository](https://hub.docker.com/u/42crunch). The exact installation will depend on your environment, consult the [42Crunch protection documentation](https://docs.42crunch.com/latest/content/concepts/api_firewall_deployment_architecture.htm) for full details. Two common installation scenarios are described below:\n",
                      "innerSteps": [
                        {
                          "title": "Installation via Docker Compose",
                          "description": "The solution can be installed using a [Docker compose file](https://github.com/42Crunch/azure-sentinel-integration/blob/main/sample-deployment/docker-compose.yml)."
                        },
                        {
                          "title": "Installation via Helm charts",
                          "description": "The solution can be installed using a [Helm chart](https://github.com/42Crunch/azure-sentinel-integration/tree/main/helm/sentinel)."
                        }
                      ],
                      "title": "Step 3: Install the 42Crunch protection and log forwarder"
                    },
                    {
                      "description": "In order to test the data ingestion the user should deploy the sample *httpbin* application alongside the 42Crunch protection and log forwarder [described in detail here](https://github.com/42Crunch/azure-sentinel-integration/tree/main/sample-deployment).",
                      "innerSteps": [
                        {
                          "title": "4.1 Install the sample",
                          "description": "The sample application can be installed locally using a [Docker compose file](https://github.com/42Crunch/azure-sentinel-integration/blob/main/sample-deployment/docker-compose.yml) which will install the httpbin API server, the 42Crunch API protection and the Sentinel log forwarder. Set the environment variables as required using the values copied from step 2."
                        },
                        {
                          "title": "4.2 Run the sample",
                          "description": "Verfify the API protection is connected to the 42Crunch platform, and then exercise the API locally on the *localhost* at port 8080 using Postman, curl, or similar. You should see a mixture of passing and failing API calls. "
                        },
                        {
                          "title": "4.3 Verify the data ingestion on Log Analytics",
                          "description": "After approximately 20 minutes access the Log Analytics workspace on your Sentinel installation, and locate the *Custom Logs* section verify that a *apifirewall_log_1_CL* table exists. Use the sample queries to examine the data."
                        }
                      ],
                      "title": "Step 4: Test the data ingestion"
                    }
                  ],
                  "metadata": {
                    "id": "0116a50c-9282-4237-9962-4da1dfcbfb55",
                    "version": "1.0.0",
                    "kind": "dataConnector",
                    "source": {
                      "kind": "community"
                    },
                    "author": {
                      "name": "42Crunch"
                    },
                    "support": {
                      "tier": "community",
                      "name": "42Crunch",
                      "email": "support@42crunch.com",
                      "link": "https://github.com/42Crunch/azure-sentinel-integration"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "42Crunch API Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "42Crunch",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "42Crunch API Protection",
                  "email": "support@42crunch.com",
                  "tier": "Partner",
                  "link": "https://42crunch.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "42Crunch API Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "42Crunch",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "42Crunch API Protection",
          "email": "support@42crunch.com",
          "tier": "Partner",
          "link": "https://42crunch.com/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "API Protection",
          "publisher": "42Crunch",
          "descriptionMarkdown": "Connects the 42Crunch API protection to Azure Log Analytics via the REST API interface",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "42Crunch",
              "baseQuery": "apifirewall_log_1_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "apifirewall_log_1_CL",
              "lastDataReceivedQuery": "apifirewall_log_1_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "apifirewall_log_1_CL\n| summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(7d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "API requests that were rate-limited",
              "query": "apifirewall_log_1_CL\n| where TimeGenerated >= ago(30d)\n| where Status_d == 429"
            },
            {
              "description": "API requests generating a server error",
              "query": "apifirewall_log_1_CL\n| where TimeGenerated >= ago(30d)\n| where Status_d >= 500 and Status_d <= 599"
            },
            {
              "description": "API requests failing JWT validation",
              "query": "apifirewall_log_1_CL\n| where TimeGenerated >= ago(30d)\n| where Error_Message_s contains \"missing [\\\"x-access-token\\\"]\""
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "The installation process is documented in great detail in the GitHub repository [Microsoft Sentinel integration](https://github.com/42Crunch/azure-sentinel-integration). The user should consult this repository further to understand installation and debug of the integration.",
              "title": "Step 1 : Read the detailed documentation"
            },
            {
              "description": "The first installation step is to retrieve both your **Workspace ID** and **Primary Key** from the Sentinel platform.\nCopy the values shown below and save them for configuration of the API log forwarder integration.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "Step 2: Retrieve the workspace access credentials"
            },
            {
              "description": "The next step is to install the 42Crunch protection and log forwarder to protect your API. Both components are availabe as containers from the [42Crunch repository](https://hub.docker.com/u/42crunch). The exact installation will depend on your environment, consult the [42Crunch protection documentation](https://docs.42crunch.com/latest/content/concepts/api_firewall_deployment_architecture.htm) for full details. Two common installation scenarios are described below:\n",
              "innerSteps": [
                {
                  "title": "Installation via Docker Compose",
                  "description": "The solution can be installed using a [Docker compose file](https://github.com/42Crunch/azure-sentinel-integration/blob/main/sample-deployment/docker-compose.yml)."
                },
                {
                  "title": "Installation via Helm charts",
                  "description": "The solution can be installed using a [Helm chart](https://github.com/42Crunch/azure-sentinel-integration/tree/main/helm/sentinel)."
                }
              ],
              "title": "Step 3: Install the 42Crunch protection and log forwarder"
            },
            {
              "description": "In order to test the data ingestion the user should deploy the sample *httpbin* application alongside the 42Crunch protection and log forwarder [described in detail here](https://github.com/42Crunch/azure-sentinel-integration/tree/main/sample-deployment).",
              "innerSteps": [
                {
                  "title": "4.1 Install the sample",
                  "description": "The sample application can be installed locally using a [Docker compose file](https://github.com/42Crunch/azure-sentinel-integration/blob/main/sample-deployment/docker-compose.yml) which will install the httpbin API server, the 42Crunch API protection and the Sentinel log forwarder. Set the environment variables as required using the values copied from step 2."
                },
                {
                  "title": "4.2 Run the sample",
                  "description": "Verfify the API protection is connected to the 42Crunch platform, and then exercise the API locally on the *localhost* at port 8080 using Postman, curl, or similar. You should see a mixture of passing and failing API calls. "
                },
                {
                  "title": "4.3 Verify the data ingestion on Log Analytics",
                  "description": "After approximately 20 minutes access the Log Analytics workspace on your Sentinel installation, and locate the *Custom Logs* section verify that a *apifirewall_log_1_CL* table exists. Use the sample queries to examine the data."
                }
              ],
              "title": "Step 4: Test the data ingestion"
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.2",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "42Crunch API Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "42Crunch",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "42Crunch API Protection",
          "email": "support@42crunch.com",
          "tier": "Partner",
          "link": "https://42crunch.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId3')]",
              "version": "[variables('analyticRuleVersion3')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId4')]",
              "version": "[variables('analyticRuleVersion4')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId5')]",
              "version": "[variables('analyticRuleVersion5')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId6')]",
              "version": "[variables('analyticRuleVersion6')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId7')]",
              "version": "[variables('analyticRuleVersion7')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId8')]",
              "version": "[variables('analyticRuleVersion8')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId9')]",
              "version": "[variables('analyticRuleVersion9')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId10')]",
              "version": "[variables('analyticRuleVersion10')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId11')]",
              "version": "[variables('analyticRuleVersion11')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2022-09-21",
        "providers": [
          "42Crunch"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
