{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Block IP & URL on ThreatX-WAF cloud",
        "description": "This Playbook Provides the automation on blocking the suspicious/malicious IP and URL on ThreatX cloud waf",
        "prerequisites": [
            "1. ThreatX-WAF Custom Connector needs to be deployed prior to the deployment of this playbook under the same subscription.",
            "2. API Key . To get API Key, login into your ThreatX cloud instance dashboard and navigate to Settings --> API Key --> Add Api key",
			"3. [Important step]Store the API secret key in Key vault and provide the key name of the stored secret during deployment"
        ],
        "postDeployment": [
            "1. During deployment you need to provide your tenant name ,Key vault name and key name of stored secret key."
        ],
        "prerequisitesDeployTemplateFile": "../../CustomConnector/ThreatXCustomConnector/azuredeploy.json",
        "lastUpdateTime": "2022-09-05T00:00:00.000Z",
        "entities": [ "ip", "url" ],
        "tags": [ "Enrichment", "ThreatX", "WAF", "Cloud WAF", "Block IP", "Block URL" ],
        "support": {
            "tier": "microsoft",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": "microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "ThreatX-BlockIP-URL",
            "type": "string"
        },
        "Customer name": {
            "type": "string",
            "metadata": {
                "description": "Enter value for Tenant name"
            }
        },
		"Keyvault name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Enter the key vault name where secret key is stored"
            }
        },
        "Threatx Key name": {
            "type": "string",
            "metadata": {
                "description": "Your Key name for the api secret stored in keyvault under secrets"
            }
        },
		"CustomConnectorName": {
            "defaultValue": "ThreatX-WAFCustomConnector",
            "type": "string",
            "metadata": {
                "description": "Name of the custom connector, if you want to change the default name, make sure to use the same in all ThreatXCloud automation playbooks as well"
            }
        }
    },
    "variables": {
        "Threatx-WafcustomconnectorConnectionName": "[concat('Threatx-Wafcustomconnector-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "Customer_name": {
                            "type": "string",
                            "defaultValue": "[parameters('Customer name')]"
                        },
                        "Threatx_Key_name": {
                            "type": "string",
                            "defaultValue": "[parameters('Threatx Key name')]"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Appending_blocklist_IP_to_oldblockip's": {
                            "foreach": "@body('Parse_JSON_of_blocklist_response')?['Ok']",
                            "actions": {
                                "Append_to_array_variable_4": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "Oldblockip",
                                        "value": "@items('Appending_blocklist_IP_to_oldblockip''s')?['ip']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_of_blocklist_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Condition_4": {
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "Get-Post_Blacklist_Blocklist_Whitelist_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>Provided Ip's are succesfully blocked at threatX .<br>\n<br>\n@{outputs('Compose')}<br>\n</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Compose": {
                                    "runAfter": {
                                        "For_each_-_creating_final_payload_of_IP's": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@variables('payload')"
                                },
                                "For_each_-_creating_final_payload_of_IP's": {
                                    "foreach": "@variables('tempip')",
                                    "actions": {
                                        "Append_to_array_variable_6": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "payload",
                                                "value": {
                                                    "created": 1,
                                                    "description": "Blocked by sentinel's â€‹@{triggerBody()?['object']?['properties']?['title']}",
                                                    "ip": "@{items('For_each_-_creating_final_payload_of_IP''s')}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                },
                                "Get-Post_Blacklist_Blocklist_Whitelist_3": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "command": "bulk_new_blacklist",
                                            "customer_name": "@parameters('Customer_name')",
                                            "items": "@variables('payload')",
                                            "token": "@body('Login_Generate_Token')?['Ok']?['token']"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['ThreatX-WAFCustomConnector']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/tx_api/v1/lists"
                                    }
                                }
                            },
                            "runAfter": {
                                "for_loop_-_Checking_final_IP's_to_be_block_or_blacklist": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)_2": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p>There is no IP's to be blocked / or provided one's are already blocked&nbsp;</p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('tempip'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_7": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_4": {
                                    "runAfter": {
                                        "List_or_Create_Customer_Rule_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>URL's has been blocked at threatx :<br>\nDetails provided below :<br>\n<br>\n@{variables('finaluri')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "For_each_-creating_final_payload": {
                                    "foreach": "@variables('finaluri')",
                                    "actions": {
                                        "Append_to_array_variable_10": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "tempuri",
                                                "value": {
                                                    "match": {
                                                        "match": "@{items('For_each_-creating_final_payload')}",
                                                        "type": "contains"
                                                    },
                                                    "type": "uri"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Setting_variable_to_null_,_for_reuse": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "List_or_Create_Customer_Rule_2": {
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "command": "new_customer_rule",
                                            "customer_name": "@parameters('Customer_name')",
                                            "rule": {
                                                "blocking": true,
                                                "classification": "BadTraffic",
                                                "description": "@{variables('randvar')} - Blocked url by sentinel's @{triggerBody()?['object']?['properties']?['title']}",
                                                "id": "@variables('randvar')",
                                                "matches": [
                                                    {
                                                        "match": "@variables('tempuri')",
                                                        "op": "or",
                                                        "type": "boolean"
                                                    }
                                                ],
                                                "risk": 20,
                                                "state": "BruteForce"
                                            },
                                            "token": "@body('Login_Generate_Token')?['Ok']?['token']"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['ThreatX-WAFCustomConnector']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/tx_api/v1/rules"
                                    }
                                },
                                "Set_variable": {
                                    "runAfter": {
                                        "For_each_-creating_final_payload": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "randvar",
                                        "value": "@rand(910000,999999)"
                                    }
                                },
                                "Setting_variable_to_null_,_for_reuse": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "tempuri",
                                        "value": []
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_-_checking_final_uri_to_be_blocked_": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)_3": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p>There is no new url's to be blocked or none are provided</p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('finaluri'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Creating_array_of_blocking_URL's": {
                            "foreach": "@body('Parse_JSON')",
                            "actions": {
                                "Condition_2": {
                                    "actions": {
                                        "Append_to_array_variable_2": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "Blockstrings",
                                                "value": "@items('Creating_array_of_blocking_URL''s')?['properties']?['friendlyName']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('Creating_array_of_blocking_URL''s')['kind']",
                                                    "Url"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Login_Generate_Token": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each": {
                            "foreach": "@body('Parse_JSON_response_of_List_customer_')?['Ok']",
                            "actions": {
                                "For_each_2": {
                                    "foreach": "@items('For_each')?['matches']",
                                    "actions": {
                                        "For_each_3": {
                                            "foreach": "@items('For_each_2')['match']",
                                            "actions": {
                                                "Condition_5": {
                                                    "actions": {
                                                        "Append_to_array_variable_7": {
                                                            "runAfter": {},
                                                            "type": "AppendToArrayVariable",
                                                            "inputs": {
                                                                "name": "oldblockedurl",
                                                                "value": "@items('For_each_3')?['match']"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@items('For_each_3')?['type']",
                                                                    "uri"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_response_of_List_customer_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_-_checking_final_uri_to_be_blocked_": {
                            "foreach": "@variables('Blockstrings')",
                            "actions": {
                                "Condition_6": {
                                    "actions": {
                                        "Append_to_array_variable_9": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "finaluri",
                                                "value": "@items('For_each_-_checking_final_uri_to_be_blocked_')"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('tempuri')",
                                                        "@items('For_each_-_checking_final_uri_to_be_blocked_')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "For_each_-_refining_uri_strings_to_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_-_refining_uri_strings_to_array": {
                            "foreach": "@body('Parse_JSON_2')",
                            "actions": {
                                "Append_to_array_variable_8": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "tempuri",
                                        "value": "@items('For_each_-_refining_uri_strings_to_array')['match']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get-Post_Blacklist_Blocklist_Whitelist": {
                            "runAfter": {
                                "creating_array_of_blocking_IP's": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "command": "list_blacklist",
                                    "customer_name": "@parameters('Customer_name')",
                                    "token": "@body('Login_Generate_Token')?['Ok']?['token']"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ThreatX-WAFCustomConnector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/tx_api/v1/lists"
                            }
                        },
                        "Get-Post_Blacklist_Blocklist_Whitelist_2": {
                            "runAfter": {
                                "appending_blacklist_IP_to_oldblockip's": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "command": "list_blocklist",
                                    "customer_name": "@parameters('Customer_name')",
                                    "token": "@body('Login_Generate_Token')?['Ok']?['token']"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ThreatX-WAFCustomConnector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/tx_api/v1/lists"
                            }
                        },
                        "Get_secret": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent(parameters('Threatx_Key_name'))}/value"
                            }
                        },
                        "Initialize_array_for_block_URL_strings": {
                            "runAfter": {
                                "Initialize_array_for_storing_block_IP's": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Blockstrings",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_array_for_storing_block_IP's": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "blockip",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_array_for_storing_old_blocked_IP's": {
                            "runAfter": {
                                "Initialize_array_for_block_URL_strings": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Oldblockip",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_array_for_storing_old_blocked_URL's": {
                            "runAfter": {
                                "Initialize_array_for_storing_old_blocked_IP's": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "oldblockedurl",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_temp_variable": {
                            "runAfter": {
                                "Initialize_array_for_storing_old_blocked_URL's": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "tempip",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_temp_variable_for_uri": {
                            "runAfter": {
                                "Initialize_temp_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "tempuri",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_temp_variable_for_storing_final_uri_to_be_blocked": {
                            "runAfter": {
                                "Initialize_temp_variable_for_uri": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "finaluri",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_for_final_payload_IP": {
                            "runAfter": {
                                "Initialize_variable_-_temp_variable_for_storing_final_uri_to_be_blocked": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "payload",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_for_storing_random_number": {
                            "runAfter": {
                                "Initialize_variable_for_final_payload_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "randvar",
                                        "type": "integer"
                                    }
                                ]
                            }
                        },
                        "List_or_Create_Customer_Rule": {
                            "runAfter": {
                                "Creating_array_of_blocking_URL's": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "command": "list_customer_rules",
                                    "customer_name": "@parameters('Customer_name')",
                                    "token": "@body('Login_Generate_Token')?['Ok']?['token']"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ThreatX-WAFCustomConnector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/tx_api/v1/rules"
                            }
                        },
                        "Login_Generate_Token": {
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "api_token": "@body('Get_secret')?['value']",
                                    "command": "login"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ThreatX-WAFCustomConnector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/tx_api/v1/login"
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Initialize_variable_for_storing_random_number": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "kind": {
                                                "type": "string"
                                            },
                                            "properties": {
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "friendlyName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "kind",
                                            "properties"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Parse_JSON_2": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('oldblockedurl')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "match": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "match",
                                            "type"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Parse_JSON_of_Blacklist_response": {
                            "runAfter": {
                                "Get-Post_Blacklist_Blocklist_Whitelist": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get-Post_Blacklist_Blocklist_Whitelist')",
                                "schema": {
                                    "properties": {
                                        "Ok": {
                                            "items": {
                                                "properties": {
                                                    "created": {
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "entity_hash": {},
                                                    "entity_id": {},
                                                    "expires_at": {},
                                                    "ip": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "ip",
                                                    "description",
                                                    "created",
                                                    "entity_hash",
                                                    "entity_id",
                                                    "username",
                                                    "expires_at"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_JSON_of_blocklist_response": {
                            "runAfter": {
                                "Get-Post_Blacklist_Blocklist_Whitelist_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get-Post_Blacklist_Blocklist_Whitelist_2')",
                                "schema": {
                                    "properties": {
                                        "Ok": {
                                            "items": {
                                                "properties": {
                                                    "created": {
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "entity_hash": {},
                                                    "entity_id": {},
                                                    "expires_at": {},
                                                    "ip": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "ip",
                                                    "description",
                                                    "created",
                                                    "entity_hash",
                                                    "entity_id",
                                                    "username",
                                                    "expires_at"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_JSON_response_of_List_customer_": {
                            "runAfter": {
                                "List_or_Create_Customer_Rule": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('List_or_Create_Customer_Rule')",
                                "schema": {
                                    "properties": {
                                        "Ok": {
                                            "items": {
                                                "properties": {
                                                    "beta": {},
                                                    "blocking": {
                                                        "type": "boolean"
                                                    },
                                                    "classification": {
                                                        "type": "string"
                                                    },
                                                    "contributing_score": {},
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "interogate": {},
                                                    "matches": {
                                                        "items": {
                                                            "properties": {
                                                                "match": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "match": {
                                                                                "properties": {
                                                                                    "match": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "match",
                                                                            "type"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "op": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "match",
                                                                "op",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {},
                                                    "risk": {
                                                        "type": "integer"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "tags": {},
                                                    "tarpit": {},
                                                    "version_support": {},
                                                    "webtech": {}
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "version_support",
                                                    "classification",
                                                    "webtech",
                                                    "state",
                                                    "contributing_score",
                                                    "risk",
                                                    "blocking",
                                                    "tarpit",
                                                    "interogate",
                                                    "beta",
                                                    "tags",
                                                    "matches"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "appending_blacklist_IP_to_oldblockip's": {
                            "foreach": "@body('Parse_JSON_of_Blacklist_response')?['Ok']",
                            "actions": {
                                "Append_to_array_variable_3": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "Oldblockip",
                                        "value": "@items('appending_blacklist_IP_to_oldblockip''s')?['ip']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_of_Blacklist_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "creating_array_of_blocking_IP's": {
                            "foreach": "@body('Parse_JSON')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_to_array_variable": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "blockip",
                                                "value": "@items('creating_array_of_blocking_IP''s')?['properties']?['address']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('creating_array_of_blocking_IP''s')['kind']",
                                                    "Ip"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Login_Generate_Token": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "for_loop_-_Checking_final_IP's_to_be_block_or_blacklist": {
                            "foreach": "@variables('blockip')",
                            "actions": {
                                "Condition_3": {
                                    "actions": {
                                        "Append_to_array_variable_5": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "tempip",
                                                "value": "@items('for_loop_-_Checking_final_IP''s_to_be_block_or_blacklist')"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('Oldblockip')",
                                                        "@items('for_loop_-_Checking_final_IP''s_to_be_block_or_blacklist')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Appending_blocklist_IP_to_oldblockip's": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "ThreatX-WAFCustomConnector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Threatx-WafcustomconnectorConnectionName'))]",
                                "connectionName": "[variables('Threatx-WafcustomconnectorConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "ThreatX-BlockIP-URL",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('Threatx-WafcustomconnectorConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Threatx-WafcustomconnectorConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('Threatx-WafcustomconnectorConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/Connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "kind": "V1",
            "location": "[resourceGroup().location]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'keyvault')]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                },
                "displayName": "[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                }

            }
        }
    ]
}
