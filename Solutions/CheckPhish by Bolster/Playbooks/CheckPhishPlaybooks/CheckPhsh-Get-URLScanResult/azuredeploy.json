{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "CheckPhish - Get URL reputation",
        "description": "This playbooks will be used to submit URL to CheckPhish and gets the repution of URL (Scan result)" ,
        "prerequisites": ["1. CheckPhishbyBolsterCustomConnector needs to be deployed prior to the deployment of this playbook under the same subscription.",
        "2. API key. To get API Key, login into CheckPhish portal and select APIKey from the left side menu."],
        "postDeployment": ["1. Once deployment is complete, you will need to authorize each connection.",
        "2. Navigate to playbook --> API Connections --> Select connections one by one --> Edit API Connection --> (if required) Enter API key or credentials --> Save"],
        "prerequisitesDeployTemplateFile": "../../CheckPhishbyBolsterCustomConnector/azuredeploy.json",
        "lastUpdateTime": "2022-08-25T00:00:00.000Z",
        "entities": [
            "url"
        ],
        "tags": [
            "Enrichment","Phish", "CheckPhish"
        ],
        "support": {
            "tier": "Microsoft",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
"PlaybookName": {
      "defaultValue": "CheckPhish-Get-URLScanResult",
      "type": "string",
	   "metadata": {
          "description": "Name of the Logic Apps resource to be created"
        }
    },
    "CustomConnectorName":{
      "defaultValue": "CheckPhishbyBolsterCustomConnector",
      "type": "string",
      "metadata": {
        "description": "Name of the custom connector which interacts with Okta"
      }
    }
    },
    "variables": {
        "CheckphishbybolstercustomconnectorConnectionName": "[concat('Checkphishbybolstercustomconnector-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('CheckphishbybolstercustomconnectorConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('CheckphishbybolstercustomconnectorConnectionName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {
                },
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "CheckPhsh-Get-URLScanResult",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('CheckphishbybolstercustomconnectorConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            },
                            "conditions": []
                        }
                    },
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "runAfter": {
                                "For_each_URL_present_in_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>@{variables('IncidentComment')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Entities_-_Get_URLs": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/url"
                            }
                        },
                        "For_each_URL_present_in_incident": {
                            "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                            "actions": {
                                "Append_to_string_variable": {
                                    "runAfter": {
                                        "Compose_comment_message": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "IncidentComment",
                                        "value": "@outputs('Compose_comment_message')"
                                    }
                                },
                                "Compose_comment_message": {
                                    "runAfter": {
                                        "Until": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "<b> Details from CheckPhish </b>\nURL:  @{items('For_each_URL_present_in_incident')?['Url']}\nBrand: @{body('Get_Scan_Result')?['brand']}\nDisposition: @{body('Get_Scan_Result')?['disposition']}\n-------------------------------------------------------------------------\n"
                                },
                                "Submit_URL": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['CheckPhishbyBolsterCustomConnector']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/api/neo/scan",
                                        "queries": {
                                            "urlInfo": "{ \"url\": \"@{items('For_each_URL_present_in_incident')?['Url']}\" }"
                                        }
                                    }
                                },
                                "Until": {
                                    "actions": {
                                        "Delay_3_seconds": {
                                            "runAfter": {
                                                "Get_Scan_Result": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Wait",
                                            "inputs": {
                                                "interval": {
                                                    "count": 3,
                                                    "unit": "Second"
                                                }
                                            }
                                        },
                                        "Get_Scan_Result": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['CheckPhishbyBolsterCustomConnector']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/neo/scan/status",
                                                "queries": {
                                                    "jobID": "@body('Submit_URL')?['jobID']"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Submit_URL": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": "@equals(body('Get_Scan_Result')?['status'], 'DONE')",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "type": "Until"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_Incident_Comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_Incident_Comment": {
                            "runAfter": {
                                "Entities_-_Get_URLs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IncidentComment",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "Checkphishbybolstercustomconnector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('CheckphishbybolstercustomconnectorConnectionName'))]",
                                "connectionName": "[variables('CheckphishbybolstercustomconnectorConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
