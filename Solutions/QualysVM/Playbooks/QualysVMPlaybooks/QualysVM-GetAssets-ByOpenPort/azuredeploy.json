{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "QualysVM-GetAssets-ByOpenPort",
        "description":  "When a new sentinel incident is created, this playbook gets triggered and performs the following actions: \n 1. Gets Port from incident. (Only one port) \n 2. Search the Qualys platform and get the asset count with open port. \n 3. Search the Qualys platform and get the asset details as well. (Asset details limited to 50 assets, since incident comment has limitaion of 30000 characters.) \n 4. Combine both the results. \n 5. Add the info as comment to the incident.",
        "prerequisites":  ["1. Prior to the deployment of this playbook, Qualys Logic App Custom Connector needs to be deployed under the same subscription.",
        "2. Refer to [Qualys Logic App Custom Connector](../QualysCustomConnector/readme.md) documentation for deployment instructions."],
        "postDeployment":  ["None"],
        "prerequisitesDeployTemplateFile":  "../../CustomConnector/QualysCustomConnector/azuredeploy.json",
        "lastUpdateTime":  "2022-09-13T22:25:52Z",
        "entities":  [
        ],
        "tags":  [
            "Qualys", 
            "Enrichment",
            "VM Report"
        ],
        "support":  {
            "tier":  "Microsoft"
        },
        "author":  {
            "name":  "Microsoft"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "QualysVM-GetAssets-ByOpenPort",
            "type":  "string"
        },
        "CustomConnectorName": {
            "defaultValue":  "QualysCustomConnector",
            "type":  "string",
            "metadata": {
                "description": "Name of the logic app connector which performs Qualys actions."
            }
        }
    },
    "variables":  {
        "QualyscustomconnectorConnectionName":  "[concat('Qualyscustomconnector-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Add_comment_to_incident_(V3)":  {
                            "runAfter":  {
                                "Check_for_Successful_Response":  [
                                    "Succeeded",
                                    "TimedOut",
                                    "Skipped",
                                    "Failed"
                                ],
                                "Check_if_Successful_Response":  [
                                    "Succeeded",
                                    "TimedOut",
                                    "Skipped",
                                    "Failed"
                                ],
                                "Terminate":  [
                                    "Skipped"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "incidentArmId":  "@triggerBody()?['object']?['id']",
                                    "message":  "\u003cp\u003e@{variables('IncidentCommet')}\u003c/p\u003e"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/Incidents/Comment"
                            }
                        },
                        "Asset_Count_for_Port":  {
                            "runAfter":  {
                                "For_each_Alert_in_Incident_get_all_Ports":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "\u003cServiceRequest\u003e\n    \u003cfilters\u003e\n        \u003cCriteria field=\"port\" operator=\"EQUALS\"\u003e@{first(variables('Ports'))}\u003c/Criteria\u003e\n    \u003c/filters\u003e\n\u003c/ServiceRequest\u003e",
                                "headers":  {
                                    "Accept":  "application/json",
                                    "Content-Type":  "text/xml",
                                    "X-Requested-With":  "Sentinel"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['QualysCustomConnector']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/qps/rest/2.0/count/am/hostasset"
                            }
                        },
                        "Check_for_Successful_Response":  {
                            "actions":  {
                                "Append_to_IncidentComment":  {
                                    "runAfter":  {
                                        "Compose_Incident_Comment_with_Count_Details":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "AppendToStringVariable",
                                    "inputs":  {
                                        "name":  "IncidentCommet",
                                        "value":  "@{outputs('Compose_Incident_Comment_with_Count_Details')}\n"
                                    }
                                },
                                "Compose_Incident_Comment_with_Count_Details":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Compose",
                                    "inputs":  "\u003cstrong\u003eTotal Hosts Count with Open Port @{join(variables('Ports'), ',')}: @{body('Parse_Asset_Count_JSON')?['ServiceResponse']?['count']}\u003c/strong\u003e\n"
                                }
                            },
                            "runAfter":  {
                                "Parse_Asset_Count_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Append_Asset_Count_Failure_msg_to_Incident_Comment":  {
                                        "runAfter":  {
                                        },
                                        "type":  "AppendToStringVariable",
                                        "inputs":  {
                                            "name":  "IncidentCommet",
                                            "value":  "Asset Count Qualys API call failed.\n @{slice(string(body('Parse_Asset_Count_JSON')), 0, 1000)}\n"
                                        }
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@body('Parse_Asset_Count_JSON')?['ServiceResponse']?['responseCode']",
                                            "SUCCESS"
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Check_if_Successful_Response":  {
                            "actions":  {
                                "Append_to_Incident_Comment":  {
                                    "runAfter":  {
                                        "Create_HTML_table":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "AppendToStringVariable",
                                    "inputs":  {
                                        "name":  "IncidentCommet",
                                        "value":  "\u003cb\u003eResult is limited to @{variables('ResultLimit')} devices (Incident comment has limitation of 30000 characters): \u003c/b\u003e\n@{body('Create_HTML_table')}"
                                    }
                                },
                                "Create_HTML_table":  {
                                    "runAfter":  {
                                        "For_each_Host_in_result":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Table",
                                    "inputs":  {
                                        "format":  "HTML",
                                        "from":  "@variables('OutputArray')"
                                    }
                                },
                                "For_each_Host_in_result":  {
                                    "foreach":  "@body('Parse_Search_Result_JSON')?['ServiceResponse']?['data']",
                                    "actions":  {
                                        "Append_to_Output_Array":  {
                                            "runAfter":  {
                                                "Compose_Result":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "OutputArray",
                                                "value":  "@outputs('Compose_Result')"
                                            }
                                        },
                                        "Compose_Result":  {
                                            "runAfter":  {
                                                "For_each_Open_Port":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "Compose",
                                            "inputs":  {
                                                "FQDN":  "@items('For_each_Host_in_result')?['HostAsset']?['fqdn']",
                                                "Hostname":  "@items('For_each_Host_in_result')?['HostAsset']?['netbiosName']",
                                                "IPAddress":  "@items('For_each_Host_in_result')?['HostAsset']?['address']",
                                                "OS":  "@items('For_each_Host_in_result')?['HostAsset']?['os']",
                                                "OpenPorts":  "@join(variables('OpenPorts'), ',')"
                                            }
                                        },
                                        "For_each_Open_Port":  {
                                            "foreach":  "@items('For_each_Host_in_result')?['HostAsset']?['openPort']?['list']",
                                            "actions":  {
                                                "Append_to_array_variable":  {
                                                    "runAfter":  {
                                                        "Parse_Open_Port_List_JSON":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "AppendToArrayVariable",
                                                    "inputs":  {
                                                        "name":  "OpenPorts",
                                                        "value":  "@body('Parse_Open_Port_List_JSON')?['port']"
                                                    }
                                                },
                                                "Parse_Open_Port_List_JSON":  {
                                                    "runAfter":  {
                                                    },
                                                    "type":  "ParseJson",
                                                    "inputs":  {
                                                        "content":  "@items('For_each_Open_Port')?['HostAssetOpenPort']",
                                                        "schema":  {
                                                            "properties":  {
                                                                "port":  {
                                                                    "type":  "integer"
                                                                },
                                                                "protocol":  {
                                                                    "type":  "string"
                                                                },
                                                                "serviceId":  {
                                                                    "type":  "integer"
                                                                },
                                                                "serviceName":  {
                                                                    "type":  "string"
                                                                }
                                                            },
                                                            "type":  "object"
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach"
                                        },
                                        "Reset_Variable_OpenPorts":  {
                                            "runAfter":  {
                                                "Append_to_Output_Array":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "OpenPorts",
                                                "value":  [
                                                ]
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                    },
                                    "type":  "Foreach",
                                    "runtimeConfiguration":  {
                                        "concurrency":  {
                                            "repetitions":  1
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Parse_Search_Result_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Append_Asset_Search_Failure_msg_to_Incident_Comment":  {
                                        "runAfter":  {
                                        },
                                        "type":  "AppendToStringVariable",
                                        "inputs":  {
                                            "name":  "IncidentCommet",
                                            "value":  "Asset Search Qualys API call failed.\n@{slice(string(body('Parse_Search_Result_JSON')), 0, 1000)}\n"
                                        }
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@body('Parse_Search_Result_JSON')?['ServiceResponse']?['responseCode']",
                                            "SUCCESS"
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "For_each_Alert_in_Incident_get_all_Ports":  {
                            "foreach":  "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions":  {
                                "For_each_Port":  {
                                    "foreach":  "@body('Parse_Cutom_Details_Section')?['NetworkPort']",
                                    "actions":  {
                                        "Append_to_array_Ports":  {
                                            "runAfter":  {
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "Ports",
                                                "value":  "@items('For_each_Port')"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_Cutom_Details_Section":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Parse_Additional_Data_Section":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@items('For_each_Alert_in_Incident_get_all_Ports')?['properties']?['additionalData']",
                                        "schema":  {
                                            "properties":  {
                                                "Alert generation status":  {
                                                    "type":  "string"
                                                },
                                                "AlertMessageEnqueueTime":  {
                                                    "type":  "string"
                                                },
                                                "Analytic Rule Ids":  {
                                                    "type":  "string"
                                                },
                                                "Analytic Rule Name":  {
                                                    "type":  "string"
                                                },
                                                "Correlation Id":  {
                                                    "type":  "string"
                                                },
                                                "Custom Details":  {
                                                    "type":  [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "Data Sources":  {
                                                    "type":  "string"
                                                },
                                                "Event Grouping":  {
                                                    "type":  "string"
                                                },
                                                "ProcessedBySentinel":  {
                                                    "type":  "string"
                                                },
                                                "Query":  {
                                                    "type":  "string"
                                                },
                                                "Query End Time UTC":  {
                                                    "type":  "string"
                                                },
                                                "Query Period":  {
                                                    "type":  "string"
                                                },
                                                "Query Start Time UTC":  {
                                                    "type":  "string"
                                                },
                                                "Search Query Results Overall Count":  {
                                                    "type":  "string"
                                                },
                                                "Trigger Operator":  {
                                                    "type":  "string"
                                                },
                                                "Trigger Threshold":  {
                                                    "type":  "string"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_Cutom_Details_Section":  {
                                    "runAfter":  {
                                        "Parse_Additional_Data_Section":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Parse_Additional_Data_Section')?['Custom Details']",
                                        "schema":  {
                                            "properties":  {
                                                "NetworkPort":  {
                                                    "items":  {
                                                        "type":  "string"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable_-_ResultLimit":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Initialize_variable_-_IncidentComment":  {
                            "runAfter":  {
                                "Initialize_variable_-_Ports":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "IncidentCommet",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_OpenPorts":  {
                            "runAfter":  {
                                "Initialize_variable_-_OutputArray":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "OpenPorts",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_OutputArray":  {
                            "runAfter":  {
                                "Initialize_variable_-_IncidentComment":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "OutputArray",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Ports":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Ports",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_ResultLimit":  {
                            "runAfter":  {
                                "Initialize_variable_-_OpenPorts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ResultLimit",
                                        "type":  "string",
                                        "value":  "50"
                                    }
                                ]
                            }
                        },
                        "Parse_Asset_Count_JSON":  {
                            "runAfter":  {
                                "Asset_Count_for_Port":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Asset_Count_for_Port')",
                                "schema":  {
                                    "properties":  {
                                        "ServiceResponse":  {
                                            "properties":  {
                                                "count":  {
                                                    "type":  "integer"
                                                },
                                                "responseCode":  {
                                                    "type":  "string"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Parse_Search_Result_JSON":  {
                            "runAfter":  {
                                "Search_Asset_By_Port":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Search_Asset_By_Port')",
                                "schema":  {
                                    "properties":  {
                                        "ServiceResponse":  {
                                            "properties":  {
                                                "count":  {
                                                    "type":  "integer"
                                                },
                                                "data":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "HostAsset":  {
                                                                "properties":  {
                                                                    "address":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "biosDescription":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "created":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "dnsHostName":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "fqdn":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "id":  {
                                                                        "type":  "integer"
                                                                    },
                                                                    "isDockerHost":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "lastSystemBoot":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "lastVulnScan":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "manufacturer":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "model":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "modified":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "name":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "netbiosName":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "networkGuid":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "networkInterface":  {
                                                                        "properties":  {
                                                                            "list":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "HostAssetInterface":  {
                                                                                            "properties":  {
                                                                                                "address":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "hostname":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "macAddress":  {
                                                                                                    "type":  "string"
                                                                                                }
                                                                                            },
                                                                                            "type":  "object"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "HostAssetInterface"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "openPort":  {
                                                                        "properties":  {
                                                                            "list":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "HostAssetOpenPort":  {
                                                                                            "properties":  {
                                                                                                "port":  {
                                                                                                    "type":  "integer"
                                                                                                },
                                                                                                "protocol":  {
                                                                                                    "type":  "string"
                                                                                                }
                                                                                            },
                                                                                            "type":  "object"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "HostAssetOpenPort"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "os":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "processor":  {
                                                                        "properties":  {
                                                                            "list":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "HostAssetProcessor":  {
                                                                                            "properties":  {
                                                                                                "name":  {
                                                                                                    "type":  "string"
                                                                                                }
                                                                                            },
                                                                                            "type":  "object"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "HostAssetProcessor"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "qwebHostId":  {
                                                                        "type":  "integer"
                                                                    },
                                                                    "software":  {
                                                                        "properties":  {
                                                                            "list":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "HostAssetSoftware":  {
                                                                                            "properties":  {
                                                                                                "name":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "version":  {
                                                                                                    "type":  "string"
                                                                                                }
                                                                                            },
                                                                                            "type":  "object"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "HostAssetSoftware"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "trackingMethod":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "type":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "vuln":  {
                                                                        "properties":  {
                                                                            "list":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "HostAssetVuln":  {
                                                                                            "properties":  {
                                                                                                "firstFound":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "hostInstanceVulnId":  {
                                                                                                    "type":  "integer"
                                                                                                },
                                                                                                "lastFound":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "qid":  {
                                                                                                    "type":  "integer"
                                                                                                }
                                                                                            },
                                                                                            "type":  "object"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "HostAssetVuln"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            }
                                                        },
                                                        "required":  [
                                                            "HostAsset"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                },
                                                "hasMoreRecords":  {
                                                    "type":  "string"
                                                },
                                                "lastId":  {
                                                    "type":  "integer"
                                                },
                                                "responseCode":  {
                                                    "type":  "string"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Search_Asset_By_Port":  {
                            "runAfter":  {
                                "For_each_Alert_in_Incident_get_all_Ports":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "\u003cServiceRequest\u003e\n\t\u003cpreferences\u003e\n\t\t\u003climitResults\u003e@{variables('ResultLimit')}\u003c/limitResults\u003e\n\t\u003c/preferences\u003e\n    \u003cfilters\u003e\n        \u003cCriteria field=\"port\" operator=\"EQUALS\"\u003e @{first(variables('Ports'))}\u003c/Criteria\u003e\n    \u003c/filters\u003e\n\u003c/ServiceRequest\u003e",
                                "headers":  {
                                    "Accept":  "application/json",
                                    "Content-Type":  "text/xml",
                                    "X-Requested-With":  "Sentinel"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['QualysCustomConnector']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/qps/rest/2.0/search/am/hostasset"
                            }
                        },
                        "Terminate":  {
                            "runAfter":  {
                                "For_each_Alert_in_Incident_get_all_Ports":  [
                                    "Failed"
                                ]
                            },
                            "type":  "Terminate",
                            "inputs":  {
                                "runError":  {
                                    "code":  "FAIL",
                                    "message":  "Custom Details mapping in Analytical Rule is missing or misconfigured."
                                },
                                "runStatus":  "Failed"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "QualysCustomConnector":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('QualyscustomconnectorConnectionName'))]",
                                "connectionName":  "[variables('QualyscustomconnectorConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "QualysVM-GetAssets-ByOpenPort",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('QualyscustomconnectorConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('QualyscustomconnectorConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('QualyscustomconnectorConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
