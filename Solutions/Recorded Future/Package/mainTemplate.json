{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Recorded Future Premier Integrations - support@recordedfuture.com",
    "comments": "Solution template for Recorded Future"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Recorded Future -  C&C DNS Name to DNS Events - Correlation&Threat Hunting",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook2-name": {
      "type": "string",
      "defaultValue": "Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "recordedfuture1605638642586.recorded_future_sentinel_solution",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@recordedfuture.com",
    "_email": "[variables('email')]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "a1c02815-4248-4728-a9ae-dac73c67db23",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "dffd068f-fdab-440e-bbc0-34c14b623c89",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]",
    "analyticRuleVersion3": "1.0.0",
    "analyticRulecontentId3": "388e197d-ec9e-46b6-addb-947d74d2a5c4",
    "_analyticRulecontentId3": "[variables('analyticRulecontentId3')]",
    "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId3'))]",
    "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId3')))]",
    "analyticRuleVersion4": "1.0.0",
    "analyticRulecontentId4": "588dc717-7583-452c-a743-dee96705898e",
    "_analyticRulecontentId4": "[variables('analyticRulecontentId4')]",
    "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId4'))]",
    "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId4')))]",
    "analyticRuleVersion5": "1.0.0",
    "analyticRulecontentId5": "22cc1dff-14ad-481d-97e1-0602895e429e",
    "_analyticRulecontentId5": "[variables('analyticRulecontentId5')]",
    "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId5'))]",
    "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId5')))]",
    "analyticRuleVersion6": "1.0.0",
    "analyticRulecontentId6": "9acb3664-72c4-4676-80fa-9f81912e347e",
    "_analyticRulecontentId6": "[variables('analyticRulecontentId6')]",
    "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId6'))]",
    "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId6')))]",
    "RecordedFuture-ImportToSentinel": "RecordedFuture-ImportToSentinel",
    "_RecordedFuture-ImportToSentinel": "[variables('RecordedFuture-ImportToSentinel')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "RecordedFuture-ImportToSentinel",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor": "RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor",
    "_RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor": "[variables('RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2')))]",
    "RecordedFuture-HASH-Observed_in_Underground_Virus_Test_Sites-IndicatorProcessor": "RecordedFuture-HASH-Observed_in_Underground_Virus_Test_Sites-IndicatorProcessor",
    "_RecordedFuture-HASH-Observed_in_Underground_Virus_Test_Sites-IndicatorProcessor": "[variables('RecordedFuture-HASH-Observed_in_Underground_Virus_Test_Sites-IndicatorProcessor')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "RecordedFuture-HASH-Observed_in_Underground_Virus_Test_Sites-IndicatorProcessor",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3')))]",
    "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
    "_RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash": "[variables('RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4')))]",
    "RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor": "RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor",
    "_RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor": "[variables('RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5')))]",
    "RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor": "RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor",
    "_RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor": "[variables('RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6')))]",
    "RecordedFuture-Ukraine-IndicatorProcessor": "RecordedFuture-Ukraine-IndicatorProcessor",
    "_RecordedFuture-Ukraine-IndicatorProcessor": "[variables('RecordedFuture-Ukraine-IndicatorProcessor')]",
    "playbookVersion7": "1.0",
    "playbookContentId7": "RecordedFuture-Ukraine-IndicatorProcessor",
    "_playbookContentId7": "[variables('playbookContentId7')]",
    "playbookId7": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId7'))]",
    "playbookTemplateSpecName7": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId7')))]",
    "blanks": "[replace('b', 'b', '')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "RecordedFutureCnCDNStoDNSEvents",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workbookVersion2": "1.0.0",
    "workbookContentId2": "RecordedFutureIPActiveC2Workbook",
    "workbookId2": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId2'))]",
    "workbookTemplateSpecName2": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId2')))]",
    "_workbookContentId2": "[variables('workbookContentId2')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Recorded Future Analytics Rule 1 with template",
        "displayName": "Recorded Future Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "RecordedFutureDomainMalwareC2inDNSEvents_AnalyticalRules Analytics Rule with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a match in DNSEvents from Recorded Future C2 DNS Name Domains Risklist.",
                "displayName": "Detection of Malware C2 Domains in DNS Events",
                "enabled": false,
                "query": "// Identifies a match in DnsEvent from the Recorded Future DOMAIN Malware C2 DNS Name \nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\n//Create a list of TLDs in our threat feed for later validation\nlet list_tlds = ThreatIntelligenceIndicator\n| where TimeGenerated > ago(ioc_lookBack)\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n| where isnotempty(DomainName)\n| extend parts = split(DomainName, '.')\n| extend tld = parts[(array_length(parts)-1)]\n| summarize count() by tostring(tld)\n| summarize make_list(tld);\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(DomainName)\n| join (\n  DnsEvents\n  | where TimeGenerated > ago(dt_lookBack)\n  //Extract Domain patterns from syslog message\n  | where isnotempty(Name)\n  | extend parts = split(Name, '.')\n  //Split out the TLD\n  | extend tld = parts[(array_length(parts)-1)]\n  //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\n  | where tld in~ (list_tlds)\n  | extend DNS_TimeGenerated = TimeGenerated\n  ) \non $left.DomainName==$right.Name\n| where DNS_TimeGenerated >= TimeGenerated and DNS_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, DomainName, Description, ConfidenceScore, AdditionalInformation, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, DNS_TimeGenerated, Computer, ClientIP, Name, QueryType\n| extend timestamp = DNS_TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = ClientIP, DomainCustomEntity = DomainName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "columnName": "HostCustomEntity",
                        "identifier": "FullName"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  },
                  {
                    "entityType": "DNS",
                    "fieldMappings": [
                      {
                        "columnName": "DomainCustomEntity",
                        "identifier": "DomainName"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "Recorded Future Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Recorded Future Analytics Rule 2 with template",
        "displayName": "Recorded Future Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "RecordedFutureDomainMalwareC2inSyslogEvents_AnalyticalRules Analytics Rule with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a match in Syslog from Recorded Future C2 DNS Name Domains Risklist.",
                "displayName": "Detection of Malware C2 Domains in Syslog Events",
                "enabled": false,
                "query": "// Identifies a match in Syslog from the Recorded Future DOMAIN Malware C2 DNS Name \nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\n//Create a list of TLDs in our threat feed for later validation\nlet list_tlds = ThreatIntelligenceIndicator\n| where TimeGenerated > ago(ioc_lookBack)\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n| where isnotempty(DomainName)\n| extend parts = split(DomainName, '.')\n| extend tld = parts[(array_length(parts)-1)]\n| summarize count() by tostring(tld)\n| summarize make_list(tld);\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(DomainName)\n| join (\n  Syslog\n  | where TimeGenerated > ago(dt_lookBack)\n  //Extract domain patterns from syslog message\n  | extend domain = extract(\"(([a-z0-9]+(-[a-z0-9]+)*\\\\.)+[a-z]{2,})\",1, tolower(SyslogMessage))\n  | where isnotempty(domain)\n  | extend parts = split(domain, '.')\n  //Split out the TLD\n  | extend tld = parts[(array_length(parts)-1)]\n  //Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n  | where tld in~ (list_tlds)\n  | extend Syslog_TimeGenerated = TimeGenerated\n  ) \non $left.DomainName==$right.domain\n| where Syslog_TimeGenerated >= TimeGenerated and Syslog_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Syslog_TimeGenerated, SyslogMessage, Computer, ProcessName, domain, HostIP, Url\n| extend timestamp = Syslog_TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = HostIP, URLCustomEntity = Url\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "columnName": "HostCustomEntity",
                        "identifier": "FullName"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "URLCustomEntity",
                        "identifier": "Url"
                      }
                    ]
                  },
                  {
                    "entityType": "DNS",
                    "fieldMappings": [
                      {
                        "columnName": "domain",
                        "identifier": "DomainName"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "Recorded Future Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Recorded Future Analytics Rule 3 with template",
        "displayName": "Recorded Future Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName3'),'/',variables('analyticRuleVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "RecordedFutureHashObservedInUndergroundinCommonSecurityLog_AnalyticalRules Analytics Rule with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId3')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a match in CommonSecurityLog from Recorded Future Hash Observed in Underground Virus Testing Sites RiskList.",
                "displayName": "Detection of Specific Hashes in CommonSecurityLog",
                "enabled": false,
                "query": "// Identifies a match in CommonSecurityLog from the Recorded Future Hashes Observed in Underground Virus Testing Sites\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nlet fileHashIndicators = ThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n// Picking up only Recorded Future IOC's that have been observed in undersground testing sites\n| where Description == \"Recorded Future - HASH - Observed in Underground Virus Testing Sites\"\n| where Active == true\n| where isnotempty(FileHashValue);\n// Handle matches against both lower case and uppercase versions of the hash:\n(fileHashIndicators | extend  FileHashValue = tolower(FileHashValue)\n| union (fileHashIndicators | extend FileHashValue = toupper(FileHashValue)))\n| join (\n  CommonSecurityLog | where TimeGenerated >= ago(dt_lookBack)\n  | where isnotempty(FileHash)\n  | extend CommonSecurityLog_TimeGenerated = TimeGenerated\n  )\non $left.FileHashValue == $right.FileHash\n| where CommonSecurityLog_TimeGenerated >= TimeGenerated and CommonSecurityLog_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore,\nCommonSecurityLog_TimeGenerated, SourceIP, SourcePort, DestinationIP, DestinationPort, SourceUserID, SourceUserName, DeviceName, DeviceAction, RequestURL, DestinationUserName, DestinationUserID, ApplicationProtocol, Activity, FileHash, AdditionalInformation\n| extend timestamp = CommonSecurityLog_TimeGenerated, IPCustomEntity = SourceIP, HostCustomEntity = DeviceName, AccountCustomEntity = SourceUserName, URLCustomEntity = Url\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "CEF"
                  }
                ],
                "tactics": [
                  "PreAttack"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "FullName"
                      }
                    ]
                  },
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "columnName": "HostCustomEntity",
                        "identifier": "FullName"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "URLCustomEntity",
                        "identifier": "Url"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId3'),'/'))))]",
              "properties": {
                "description": "Recorded Future Analytics Rule 3",
                "parentId": "[variables('analyticRuleId3')]",
                "contentId": "[variables('_analyticRulecontentId3')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Recorded Future Analytics Rule 4 with template",
        "displayName": "Recorded Future Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName4'),'/',variables('analyticRuleVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "RecordedFutureIPMalwareC2inAzureActivityEvents_AnalyticalRules Analytics Rule with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId4')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a match in Azure Activity Events from Recorded Future Actively Communicating C&C Server Risklist.",
                "displayName": "Detection of Malware C2 IPs in Azure Act. Events",
                "enabled": false,
                "query": "// Identifies a match in AzureActivity from the Recorded Future C2 Malware Detection IPs (Actively Communicating C&C Server RiskList)\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nThreatIntelligenceIndicator\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == \"Recorded Future - IP - Actively Communicating C&C Server\"\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n| extend TI_ipEntity = NetworkIP\n| join (\n  AzureActivity | where TimeGenerated >= ago(dt_lookBack)\n  // renaming time column so it is clear the log this came from\n  | extend AzureActivity_TimeGenerated = TimeGenerated\n  )\non $left.TI_ipEntity == $right.CallerIpAddress\n| where AzureActivity_TimeGenerated >= TimeGenerated and AzureActivity_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, AzureActivity_TimeGenerated, TI_ipEntity, CallerIpAddress, Caller, OperationNameValue, ActivityStatusValue, CategoryValue, ResourceId, NetworkIP, Description, AdditionalInformation\n| extend timestamp = AzureActivity_TimeGenerated, IPCustomEntity = CallerIpAddress, AccountCustomEntity = Caller, URLCustomEntity = Url\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "AzureActivity"
                    ],
                    "connectorId": "AzureActivity"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "FullName"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "URLCustomEntity",
                        "identifier": "Url"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "TI_ipEntity",
                        "identifier": "Address"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId4'),'/'))))]",
              "properties": {
                "description": "Recorded Future Analytics Rule 4",
                "parentId": "[variables('analyticRuleId4')]",
                "contentId": "[variables('_analyticRulecontentId4')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Recorded Future Analytics Rule 5 with template",
        "displayName": "Recorded Future Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName5'),'/',variables('analyticRuleVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "RecordedFutureIPMalwareC2inDNSEvents_AnalyticalRules Analytics Rule with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId5')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a match in DnsEvents from Recorded Future Actively Communicating C&C Server Risklist.",
                "displayName": "Detection of Malware C2 IPs in DNS Events",
                "enabled": false,
                "query": "// Identifies a match in DnsEvent from the Recorded Future C2 Malware Detection IPs (Actively Communicating C&C Server RiskList)\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nThreatIntelligenceIndicator\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == \"Recorded Future - IP - Actively Communicating C&C Server\"\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n| extend TI_ipEntity = NetworkIP\n| join (\n  DnsEvents | where TimeGenerated >= ago(dt_lookBack)\n  | where SubType =~ \"LookupQuery\" and isnotempty(IPAddresses)\n  | extend SingleIP = split(IPAddresses, \",\")\n  | mvexpand SingleIP\n  | extend SingleIP = tostring(SingleIP)\n  // renaming time column so it is clear the log this came from\n  | extend DNS_TimeGenerated = TimeGenerated\n  )\non $left.TI_ipEntity == $right.SingleIP\n| where DNS_TimeGenerated >= TimeGenerated and DNS_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, DNS_TimeGenerated, TI_ipEntity, Computer, EventId, SubType, ClientIP, Name, IPAddresses, NetworkIP, Description, AdditionalInformation\n| extend timestamp = DNS_TimeGenerated, IPCustomEntity = ClientIP, HostCustomEntity = Computer, URLCustomEntity = Url\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "columnName": "HostCustomEntity",
                        "identifier": "FullName"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "URLCustomEntity",
                        "identifier": "Url"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "TI_ipEntity",
                        "identifier": "Address"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId5'),'/'))))]",
              "properties": {
                "description": "Recorded Future Analytics Rule 5",
                "parentId": "[variables('analyticRuleId5')]",
                "contentId": "[variables('_analyticRulecontentId5')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Recorded Future Analytics Rule 6 with template",
        "displayName": "Recorded Future Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName6'),'/',variables('analyticRuleVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "RecordedFutureUrlReportedbyInsiktGroupinSyslogEvents_AnalyticalRules Analytics Rule with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId6')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a match in Syslog from Recorded Future URLs Recently Reported as malicious by Insikt Group.",
                "displayName": "Detection of Malicious URLs in Syslog Events",
                "enabled": false,
                "query": "// Identifies a match in Syslog from the Recorded Future URLs Recently Reported by Insikt Group\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nThreatIntelligenceIndicator\n// Picking up only Recorded Future IOC's that have been recently reported as malicious by Insikt Group\n| where Description == 'Recorded Future - URL - Recently Reported by Insikt Group'\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(Url)\n| join (\n  Syslog\n  | where TimeGenerated >= ago(dt_lookBack)\n  // Extract URL from the Syslog message but only take messages that include URLs\n  | extend Url = extract(\"(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\\\(\\\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+)\", 1,SyslogMessage)\n  | where isnotempty(Url)\n  | extend Syslog_TimeGenerated = TimeGenerated\n  ) \non Url\n| where Syslog_TimeGenerated >= TimeGenerated and Syslog_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Syslog_TimeGenerated, SyslogMessage, Computer, ProcessName, Url, AdditionalInformation, HostIP\n| extend timestamp = Syslog_TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = HostIP, URLCustomEntity = Url\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "columnName": "HostCustomEntity",
                        "identifier": "FullName"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "URLCustomEntity",
                        "identifier": "Url"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId6'),'/'))))]",
              "properties": {
                "description": "Recorded Future Analytics Rule 6",
                "parentId": "[variables('analyticRuleId6')]",
                "contentId": "[variables('_analyticRulecontentId6')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "RecordedFuture-ImportToSentinel playbook",
        "displayName": "RecordedFuture-ImportToSentinel playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "RecordedFuture-ImportToSentinel Playbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "type": "string",
              "defaultValue": "RecordedFuture-ImportToSentinel"
            }
          },
          "variables": {
            "GraphSecurityConnectionName": "[[concat('microsoftgraphsecurity-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/microsoftgraphsecurity')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('GraphSecurityConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Select": {
                      "inputs": {
                        "from": "@triggerBody()['items']",
                        "select": "@item()['content']"
                      },
                      "type": "Select"
                    },
                    "Submit_multiple_tiIndicators": {
                      "inputs": {
                        "body": {
                          "value": "@body('Select')"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/beta/security/tiIndicators/submitTiIndicators"
                      },
                      "runAfter": {
                        "Select": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Batch_messages": {
                      "inputs": {
                        "configurations": {
                          "RFImportToSentinel": {
                            "releaseCriteria": {
                              "messageCount": 100,
                              "recurrence": {
                                "frequency": "Minute",
                                "interval": 10
                              }
                            }
                          }
                        },
                        "mode": "Inline"
                      },
                      "type": "Batch"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftgraphsecurity": {
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/microsoftgraphsecurity')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('GraphSecurityConnectionName'))]",
                        "connectionName": "[[variables('GraphSecurityConnectionName')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "location": "[[variables('workspace-location-inline')]",
              "name": "[[variables('GraphSecurityConnectionName')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "RecordedFuture-ImportToSentinel",
            "description": "This playbook is purposed to listen (via batching mechanism provided by Microsoft Azure) for incoming messages from the IndicatorProcessor Playbooks and create submit the indicators for creation",
            "postDeployment": [
              "After deployment you have to open the playbook to configure all connections and press save."
            ],
            "prerequisites": [
              "None"
            ],
            "lastUpdateTime": "2022-08-01T00:00:00Z",
            "tags": [
              "Threat Intelligence"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "RecordedFuture-ImportToSentinel",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "RecordedFuture-DOMAIN-C2_DNS_Name-TIProcessor playbook",
        "displayName": "RecordedFuture-DOMAIN-C2_DNS_Name-TIProcessor playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName2'),'/',variables('playbookVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "RecordedFuture-DOMAIN-C2_DNS_Name-TIProcessor Playbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "RecordedFuture-DOMAIN-C2_DNS_Name-TIProcessor",
              "type": "String"
            },
            "PlaybookNameBatching": {
              "defaultValue": "RecordedFuture-ImportToSentinel",
              "type": "String"
            }
          },
          "variables": {
            "RecordedFutureConnectionName": "recordedfuture-connectorv2",
            "connection-2": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "For_each": {
                      "actions": {
                        "Parse_JSON": {
                          "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                              "properties": {
                                "EvidenceDetails": {
                                  "properties": {
                                    "EvidenceDetails": {
                                      "items": {
                                        "properties": {
                                          "Criticality": {
                                            "type": "integer"
                                          },
                                          "CriticalityLabel": {
                                            "type": "string"
                                          },
                                          "EvidenceString": {
                                            "type": "string"
                                          },
                                          "Rule": {
                                            "type": "string"
                                          },
                                          "Timestamp": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "Rule",
                                          "EvidenceString",
                                          "CriticalityLabel",
                                          "Timestamp",
                                          "Criticality"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Risk": {
                                  "type": "integer"
                                },
                                "riskString": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "RecordedFuture-ImportToSentinel": {
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON')?['Risk'])",
                              "description": "Recorded Future - DOMAIN - C2 DNS Name",
                              "domainName": "@{body('Parse_JSON')?['Name']}",
                              "expirationDateTime": "@{addHours(utcNow(),2)}",
                              "ingestedDateTime": "@{utcNow()}",
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "C2",
                              "tlpLevel": "amber"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch"
                        }
                      },
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/MicrosoftAzure/domain_c2_dns.json"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "Hour",
                        "interval": 2
                      },
                      "type": "Recurrence"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "recordedfuture": {
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]",
                        "connectionName": "[[variables('RecordedFutureConnectionName')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('RecordedFutureConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "RecordedFuture-DOMAIN-C2_DNS_Name-TIProcessor",
            "description": "This playbook leverages the Recorded Future API and automatically imports the C&C DNS Name Domain RiskList, as Threat Intelligence Indicators, for detection purposes in Microsoft Sentinel.\n\nThis playbook depends on RecordedFuture-ImportToSentinel that need to be installed **manually** before installing current playbook.",
            "prerequisites": [
              "First install the RecordedFuture-ImportToSentinel playbook.",
              "To use the Recorded Future for Azure connector, you will need a valid API token from Recorded Future as described in the documentation https://learn.microsoft.com/en-us/connectors/recordedfuturev2/#how-to-get-credentials"
            ],
            "postDeployment": [
              "After deployment you have to open the playbook to configure all connections and press save."
            ],
            "lastUpdateTime": "2022-08-01T00:00:00Z",
            "tags": [
              "Threat Intelligence"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "RecordedFuture-HASH-Obs_in_Underground-TIProcessor playbook",
        "displayName": "RecordedFuture-HASH-Obs_in_Underground-TIProcessor playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName3'),'/',variables('playbookVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "RecordedFuture-HASH-Obs_in_Underground-TIProcessor Playbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "RecordedFuture-HASH-Obs_in_Underground-TIProcessor",
              "type": "String"
            },
            "PlaybookNameBatching": {
              "defaultValue": "RecordedFuture-ImportToSentinel",
              "type": "String"
            }
          },
          "variables": {
            "RecordedFutureConnectionName": "recordedfuture-connectorv2",
            "connection-2": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "For_each": {
                      "actions": {
                        "Parse_JSON": {
                          "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                              "properties": {
                                "EvidenceDetails": {
                                  "properties": {
                                    "EvidenceDetails": {
                                      "items": {
                                        "properties": {
                                          "Criticality": {
                                            "type": "integer"
                                          },
                                          "CriticalityLabel": {
                                            "type": "string"
                                          },
                                          "EvidenceString": {
                                            "type": "string"
                                          },
                                          "Rule": {
                                            "type": "string"
                                          },
                                          "Timestamp": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "Rule",
                                          "EvidenceString",
                                          "CriticalityLabel",
                                          "Timestamp",
                                          "Criticality"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Risk": {
                                  "type": "integer"
                                },
                                "riskString": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "RecordedFuture-ImportToSentinel": {
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON')?['Risk'])",
                              "description": "Recorded Future - HASH - Observed in Underground Virus Testing Sites",
                              "expirationDateTime": "@{addDays(utcNow(),1)}",
                              "fileHashType": "unknown",
                              "fileHashValue": "@{body('Parse_JSON')?['Name']}",
                              "ingestedDateTime": "@{utcNow()}",
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "Malware",
                              "tlpLevel": "amber"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch"
                        }
                      },
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/MicrosoftAzure/hash_observed_testing.json"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "Day",
                        "interval": 1
                      },
                      "type": "Recurrence"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "recordedfuture": {
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]",
                        "connectionName": "[[variables('RecordedFutureConnectionName')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('RecordedFutureConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "RecordedFuture-HASH-Obs_in_Underground-TIProcessor",
            "description": "This playbook leverages the Recorded Future API and automatically imports the Observed in Underground Virus Testing Sites Hash RiskList, as Threat Intelligence Indicators, for detection purposes in Microsoft Sentinel.\n\nThis playbook depends on RecordedFuture-ImportToSentinel that need to be installed **manually** before installing current playbook.",
            "prerequisites": [
              "First install the RecordedFuture-ImportToSentinel playbook.",
              "To use the Recorded Future for Azure connector, you will need a valid API token from Recorded Future as described in the documentation https://learn.microsoft.com/en-us/connectors/recordedfuturev2/#how-to-get-credentials"
            ],
            "postDeployment": [
              "After deployment you have to open the playbook to configure all connections and press save."
            ],
            "lastUpdateTime": "2022-08-01T00:00:00Z",
            "tags": [
              "Threat Intelligence"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "RecordedFuture-HASH-Obs_in_Underground-TIProcessor",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash playbook",
        "displayName": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName4'),'/',variables('playbookVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash Playbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
              "type": "string"
            },
            "IntelligenceCloudSharingConsent": {
              "defaultValue": "true",
              "type": "string",
              "allowedValues": [
                "true",
                "false"
              ],
              "metadata": {
                "description": "true/false - Consent to share correlations and enrichments data with the Recorded Future Intelligence Cloud. More information can be found here [Recorded Future Support](https://support.recordedfuture.com/hc/en-us/articles/11633413141779)"
              }
            }
          },
          "variables": {
            "RecordedFutureConnectionName": "recordedfuture-connectorv2",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "For_each": {
                      "actions": {
                        "Parse_JSON_2": {
                          "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "properties": {
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "Switch": {
                          "cases": {
                            "Case": {
                              "actions": {
                                "Add_comment_to_incident_(V3)_-_Domain": {
                                  "inputs": {
                                    "body": {
                                      "incidentArmId": "@triggerBody()?['object']?['id']",
                                      "message": "<p><img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/RecordedFuture.svg\" width=\"80\" height=\"80\"/><br>\nEnrichmed Domain: <strong>@{body('Parse_JSON_-_DNS_Resolution')?['domainName']}</strong><br>\nRisk Score: <strong>@{body('Domain_Enrichment')?['data']?['risk']?['score']}</strong><br>\n@{concat('<a href=\"', body('Domain_Enrichment')?['data']?['intelCard'], '\">Open IOC Intelligence Card (Portal)</a>')}<br>\nTriggered Risk Rules: @{body('Domain_Evidence_Details_HTML_table')}<br>\nTechnical Links: @{body('Domain_Technical_Links_HTML_table')}<br>\nResearch Links: @{body('Domain_Research_Links_HTML_table')}</p>"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/Incidents/Comment"
                                  },
                                  "runAfter": {
                                    "Domain_Research_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "Domain_Enrichment": {
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                                      }
                                    },
                                    "method": "get",
                                    "path": "/lookup/domain/@{encodeURIComponent(body('Parse_JSON_-_DNS_Resolution')?['domainName'])}",
                                    "queries": {
                                      "IntelligenceCloudSharingConsent": "@parameters('IntelligenceCloudSharingConsent')",
                                      "fields": "intelCard,risk,links"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_-_DNS_Resolution": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "Domain_Evidence_Details_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Risk_Rules",
                                        "value": "@item()?['rule']"
                                      },
                                      {
                                        "header": "Severity",
                                        "value": "@item()?['criticalityLabel']"
                                      },
                                      {
                                        "header": "Evidence_Details",
                                        "value": "@item()?['evidenceString']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@body('Domain_Enrichment')?['data']?['risk']?['evidenceDetails']"
                                  },
                                  "runAfter": {
                                    "Domain_Enrichment": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "Domain_Research_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('Domain_Enrichment')?['data']?['links']?['research']),variables('EmptyArray'),body('Domain_Enrichment')?['data']?['links']?['research']?['entities'])"
                                  },
                                  "runAfter": {
                                    "Domain_Technical_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "Domain_Technical_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('Domain_Enrichment')?['data']?['links']?['technical']),variables('EmptyArray'),body('Domain_Enrichment')?['data']?['links']?['technical']?['entities'])"
                                  },
                                  "runAfter": {
                                    "Domain_Evidence_Details_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "Parse_JSON_-_DNS_Resolution": {
                                  "inputs": {
                                    "content": "@body('Parse_JSON_2')?['properties']",
                                    "schema": {
                                      "properties": {
                                        "domainName": {
                                          "type": "string"
                                        },
                                        "friendlyName": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "ParseJson"
                                }
                              },
                              "case": "DnsResolution"
                            },
                            "Case_2": {
                              "actions": {
                                "Add_comment_to_incident_(V3)_-_Hash": {
                                  "inputs": {
                                    "body": {
                                      "incidentArmId": "@triggerBody()?['object']?['id']",
                                      "message": "<p><img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/RecordedFuture.svg\" width=\"80\" height=\"80\"/><br>\nEnrichmed Hash: <strong>@{body('Parse_JSON_-_File_Hash')?['hashValue']}</strong><br>\nRisk Score: <strong></strong><strong>@{body('Hash_Enrichment')?['data']?['risk']?['score']}</strong><br>\n@{concat('<a href=\"', body('Hash_Enrichment')?['data']?['intelCard'], '\">Open IOC Intelligence Card (Portal)</a>')}<br>\nTriggered Risk Rules: @{body('Hash_Evidence_Details_HTML_table')}<br>\nTechnical Links: @{body('Hash_Technical_Links_HTML_table')}<br>\nResearch Links: @{body('Hash_Research_Links_HTML_table')}</p>"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/Incidents/Comment"
                                  },
                                  "runAfter": {
                                    "Hash_Technical_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "Hash_Enrichment": {
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                                      }
                                    },
                                    "method": "get",
                                    "path": "/lookup/hash/@{encodeURIComponent(body('Parse_JSON_-_File_Hash')?['hashValue'])}",
                                    "queries": {
                                      "IntelligenceCloudSharingConsent": "@parameters('IntelligenceCloudSharingConsent')",
                                      "fields": "intelCard,risk,links"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_-_File_Hash": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "Hash_Evidence_Details_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Risk_Rules",
                                        "value": "@item()?['rule']"
                                      },
                                      {
                                        "header": "Severity",
                                        "value": "@item()?['criticalityLabel']"
                                      },
                                      {
                                        "header": "Evidence_Details",
                                        "value": "@item()?['evidenceString']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@body('Hash_Enrichment')?['data']?['risk']?['evidenceDetails']"
                                  },
                                  "runAfter": {
                                    "Hash_Enrichment": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "Hash_Research_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('Hash_Enrichment')?['data']?['links']?['research']),variables('EmptyArray'),body('Hash_Enrichment')?['data']?['links']?['research']?['entities'])"
                                  },
                                  "runAfter": {
                                    "Hash_Evidence_Details_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "Hash_Technical_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('Hash_Enrichment')?['data']?['links']?['technical']),variables('EmptyArray'),body('Hash_Enrichment')?['data']?['links']?['technical']?['entities'])"
                                  },
                                  "runAfter": {
                                    "Hash_Research_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "Parse_JSON_-_File_Hash": {
                                  "inputs": {
                                    "content": "@body('Parse_JSON_2')?['properties']",
                                    "schema": {
                                      "properties": {
                                        "algorithm": {
                                          "type": "string"
                                        },
                                        "friendlyName": {
                                          "type": "string"
                                        },
                                        "hashValue": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "ParseJson"
                                }
                              },
                              "case": "FileHash"
                            },
                            "Case_3": {
                              "actions": {
                                "Add_comment_to_incident_(V3)_-_URL": {
                                  "inputs": {
                                    "body": {
                                      "incidentArmId": "@triggerBody()?['object']?['id']",
                                      "message": "<p><img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/RecordedFuture.svg\" width=\"80\" height=\"80\"/><br>\nEnriched URL: <strong></strong><strong>@{replace(body('Parse_JSON_-_Url')?['url'], '.', '[.]')}</strong><strong></strong><br>\nRisk Score: <strong></strong><strong>@{body('URL_Enrichment')?['data']?['risk']?['score']}</strong><strong></strong><br>\nTriggered&nbsp;Risk&nbsp;Rules: @{body('URL_Evidence_Details_HTML_table')}<br>\nTechnical Links: @{body('URL_Technical_Links_HTML_table')}<br>\nResearch Links: @{body('URL_Research_Links_HTML_table')}</p>"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/Incidents/Comment"
                                  },
                                  "runAfter": {
                                    "URL_Research_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "Parse_JSON_-_Url": {
                                  "inputs": {
                                    "content": "@body('Parse_JSON_2')?['properties']",
                                    "schema": {
                                      "properties": {
                                        "friendlyName": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "ParseJson"
                                },
                                "URL_Enrichment": {
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                                      }
                                    },
                                    "method": "get",
                                    "path": "/lookup/url/@{encodeURIComponent(body('Parse_JSON_-_Url')?['url'])}",
                                    "queries": {
                                      "IntelligenceCloudSharingConsent": "@parameters('IntelligenceCloudSharingConsent')",
                                      "fields": "intelCard,risk,links"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_-_Url": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "URL_Evidence_Details_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Risk_Rules",
                                        "value": "@item()?['rule']"
                                      },
                                      {
                                        "header": "Severity",
                                        "value": "@item()?['criticalityLabel']"
                                      },
                                      {
                                        "header": "Evidence_Details",
                                        "value": "@item()?['evidenceString']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@body('URL_Enrichment')?['data']?['risk']?['evidenceDetails']"
                                  },
                                  "runAfter": {
                                    "URL_Enrichment": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "URL_Research_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('URL_Enrichment')?['data']?['links']?['research']),variables('EmptyArray'),body('URL_Enrichment')?['data']?['links']?['research']?['entities'])"
                                  },
                                  "runAfter": {
                                    "URL_Technical_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "URL_Technical_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('URL_Enrichment')?['data']?['links']?['technical']),variables('EmptyArray'),body('URL_Enrichment')?['data']?['links']?['technical']?['entities'])"
                                  },
                                  "runAfter": {
                                    "URL_Evidence_Details_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                }
                              },
                              "case": "Url"
                            },
                            "Case_4": {
                              "actions": {
                                "Add_comment_to_incident_(V3)_-_IP": {
                                  "inputs": {
                                    "body": {
                                      "incidentArmId": "@triggerBody()?['object']?['id']",
                                      "message": "<p><img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/RecordedFuture.svg\"  width=\"80\" height=\"80\"/><br>\nEnriched IP: <strong></strong><strong>@{body('Parse_JSON_-_Ip')?['address']}</strong><strong></strong><br>\nRisk Score: <strong></strong><strong>@{body('IP_Enrichment')?['data']?['risk']?['score']}</strong><strong></strong><br>\n@{concat('<a href=\"', body('IP_Enrichment')?['data']?['intelCard'], '\">Open IOC Intelligence Card (Portal)</a>')}<br>\nTriggered&nbsp;Risk&nbsp;Rules: @{body('IP_Evidence_Details_HTML_table')}<br>\nTechnical Links: @{body('IP_Technical_Links_HTML_table')}<br>\nResearch Links: @{body('IP_Research_Links_HTML_table')}</p>"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/Incidents/Comment"
                                  },
                                  "runAfter": {
                                    "IP_Research_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "IP_Enrichment": {
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                                      }
                                    },
                                    "method": "get",
                                    "path": "/lookup/ip/@{encodeURIComponent(body('Parse_JSON_-_Ip')?['address'])}",
                                    "queries": {
                                      "IntelligenceCloudSharingConsent": "@parameters('IntelligenceCloudSharingConsent')",
                                      "fields": "intelCard,risk,links"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_-_Ip": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection"
                                },
                                "IP_Evidence_Details_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Risk_Rules",
                                        "value": "@item()?['rule']"
                                      },
                                      {
                                        "header": "Severity",
                                        "value": "@item()?['criticalityLabel']"
                                      },
                                      {
                                        "header": "Evidence_Details",
                                        "value": "@item()?['evidenceString']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@body('IP_Enrichment')?['data']?['risk']?['evidenceDetails']"
                                  },
                                  "runAfter": {
                                    "IP_Enrichment": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "IP_Research_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('IP_Enrichment')?['data']?['links']?['research']),variables('EmptyArray'),body('IP_Enrichment')?['data']?['links']?['research']?['entities'])"
                                  },
                                  "runAfter": {
                                    "IP_Technical_Links_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "IP_Technical_Links_HTML_table": {
                                  "inputs": {
                                    "columns": [
                                      {
                                        "header": "Name",
                                        "value": "@replace(item()?['name'],'.','[.]')"
                                      },
                                      {
                                        "header": "Type",
                                        "value": "@item()?['type']"
                                      },
                                      {
                                        "header": "Category",
                                        "value": "@item()?['category']"
                                      },
                                      {
                                        "header": "Score",
                                        "value": "@item()?['score']"
                                      }
                                    ],
                                    "format": "HTML",
                                    "from": "@if(empty(body('IP_Enrichment')?['data']?['links']?['technical']),variables('EmptyArray'),body('IP_Enrichment')?['data']?['links']?['technical']?['entities'])"
                                  },
                                  "runAfter": {
                                    "IP_Evidence_Details_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table"
                                },
                                "Parse_JSON_-_Ip": {
                                  "inputs": {
                                    "content": "@body('Parse_JSON_2')?['properties']",
                                    "schema": {
                                      "properties": {
                                        "address": {
                                          "type": "string"
                                        },
                                        "friendlyName": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "ParseJson"
                                }
                              },
                              "case": "Ip"
                            }
                          },
                          "expression": "@body('Parse_JSON_2')?['kind']",
                          "runAfter": {
                            "Parse_JSON_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "Switch"
                        }
                      },
                      "foreach": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_variable": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "EmptyArray",
                            "type": "array"
                          }
                        ]
                      },
                      "type": "InitializeVariable"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "IntelligenceCloudSharingConsent": {
                      "defaultValue": "true",
                      "type": "string"
                    },
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "IntelligenceCloudSharingConsent": {
                    "value": "[[parameters('IntelligenceCloudSharingConsent')]",
                    "type": "string"
                  },
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]"
                      },
                      "recordedfuture": {
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]",
                        "connectionName": "[[variables('RecordedFutureConnectionName')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('RecordedFutureConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
            "description": "This playbook leverages the Recorded Future API to enrich IP, Domain, Url & Hash indicators, found in Sentinel incidents, with the following context: Risk Score, Risk Rules and Link to Intelligence Card. The enrichment content will be posted as a comment in the Sentinel incident <img alt=\"Sentinel incident comment\" src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Recorded%20Future/Playbooks/RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash/images/EnrichmentExampleDark.png\"/>.",
            "prerequisites": [
              "To use the Recorded Future for Azure connector, you will need a valid API token from Recorded Future as described in the documentation https://learn.microsoft.com/en-us/connectors/recordedfuturev2/#how-to-get-credentials"
            ],
            "postDeployment": [
              "After deployment open the playbook in edit mode and configure/authorize all connections and press save.<img alt=\"Logic app schema\" src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Recorded%20Future/Playbooks/RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash/images/LogicAppDark.png\" />"
            ],
            "lastUpdateTime": "2022-12-30T00:00:00Z",
            "entities": [
              "ip",
              "url",
              "dnsresolution",
              "filehash"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": [
              {
                "version": "1.1.1",
                "title": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
                "notes": [
                  "Fixed riskrule severity and correct image url."
                ]
              },
              {
                "version": "1.1.0",
                "title": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
                "notes": [
                  "Improved layout and added consent for intelligence Recorded Future cloud sharing."
                ]
              },
              {
                "version": "1.0.0",
                "title": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "RecordedFuture-IP-Actively_Comm_C2_Server-TIProcessor playbook",
        "displayName": "RecordedFuture-IP-Actively_Comm_C2_Server-TIProcessor playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName5'),'/',variables('playbookVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "RecordedFuture-IP-Actively_Comm_C2_Server-TIProcessor Playbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "RecordedFuture-IP-Actively_Comm_C2_Server-TIProcessor",
              "type": "String"
            },
            "PlaybookNameBatching": {
              "defaultValue": "RecordedFuture-ImportToSentinel",
              "type": "String"
            }
          },
          "variables": {
            "RecordedFutureConnectionName": "recordedfuture-connectorv2",
            "connection-2": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "For_each": {
                      "actions": {
                        "Parse_JSON": {
                          "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                              "properties": {
                                "EvidenceDetails": {
                                  "properties": {
                                    "EvidenceDetails": {
                                      "items": {
                                        "properties": {
                                          "Criticality": {
                                            "type": "integer"
                                          },
                                          "CriticalityLabel": {
                                            "type": "string"
                                          },
                                          "EvidenceString": {
                                            "type": "string"
                                          },
                                          "Rule": {
                                            "type": "string"
                                          },
                                          "Timestamp": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "Rule",
                                          "EvidenceString",
                                          "CriticalityLabel",
                                          "Timestamp",
                                          "Criticality"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Risk": {
                                  "type": "integer"
                                },
                                "riskString": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "RecordedFuture-ImportToSentinel": {
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON')?['Risk'])",
                              "description": "Recorded Future - IP - Actively Communicating C&C Server",
                              "expirationDateTime": "@{addHours(utcNow(),1)}",
                              "ingestedDateTime": "@{utcNow()}",
                              "networkIPv4": "@{body('Parse_JSON')?['Name']}",
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "C2",
                              "tlpLevel": "amber"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch"
                        }
                      },
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/MicrosoftAzure/ip_active_c2.json"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "Hour",
                        "interval": 1
                      },
                      "type": "Recurrence"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "recordedfuture": {
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]",
                        "connectionName": "[[variables('RecordedFutureConnectionName')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('RecordedFutureConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "RecordedFuture-IP-Actively_Comm_C2_Server-TIProcessor",
            "description": "This playbook leverages the Recorded Future API and automatically imports the Actively Communicating C&C Server IP RiskList, as Threat Intelligence Indicators, for detection purposes in Microsoft Sentinel.\n\nThis playbook depends on RecordedFuture-ImportToSentinel that need to be installed **manually** before installing current playbook.",
            "prerequisites": [
              "First install the RecordedFuture-ImportToSentinel playbook.",
              "To use the Recorded Future for Azure connector, you will need a valid API token from Recorded Future as described in the documentation https://learn.microsoft.com/en-us/connectors/recordedfuturev2/#how-to-get-credentials"
            ],
            "postDeployment": [
              "After deployment you have to open the playbook to configure all connections and press save."
            ],
            "lastUpdateTime": "2022-08-01T00:00:00Z",
            "tags": [
              "Threat Intelligence"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "RecordedFuture-URL-Recent_Rep_by_Insikt-TIProcessor playbook",
        "displayName": "RecordedFuture-URL-Recent_Rep_by_Insikt-TIProcessor playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName6'),'/',variables('playbookVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "RecordedFuture-URL-Recent_Rep_by_Insikt-TIProcessor Playbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "RecordedFuture-URL-Recent_Rep_by_Insikt-TIProcessor",
              "type": "String"
            },
            "PlaybookNameBatching": {
              "defaultValue": "RecordedFuture-ImportToSentinel",
              "type": "String"
            }
          },
          "variables": {
            "RecordedFutureConnectionName": "recordedfuture-connectorv2",
            "connection-2": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]"
              ],
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "For_each": {
                      "actions": {
                        "Parse_JSON": {
                          "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                              "properties": {
                                "EvidenceDetails": {
                                  "properties": {
                                    "EvidenceDetails": {
                                      "items": {
                                        "properties": {
                                          "Criticality": {
                                            "type": "integer"
                                          },
                                          "CriticalityLabel": {
                                            "type": "string"
                                          },
                                          "EvidenceString": {
                                            "type": "string"
                                          },
                                          "Rule": {
                                            "type": "string"
                                          },
                                          "Timestamp": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "Rule",
                                          "EvidenceString",
                                          "CriticalityLabel",
                                          "Timestamp",
                                          "Criticality"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Risk": {
                                  "type": "integer"
                                },
                                "riskString": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "RecordedFuture-ImportToSentinel": {
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON')?['Risk'])",
                              "description": "Recorded Future - URL - Recently Reported by Insikt Group",
                              "expirationDateTime": "@{addHours(utcNow(),2)}",
                              "ingestedDateTime": "@{utcNow()}",
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "MaliciousUrl",
                              "tlpLevel": "amber",
                              "url": "@{body('Parse_JSON')?['Name']}"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch"
                        }
                      },
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/MicrosoftAzure/url_insikt.json"
                        }
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "Hour",
                        "interval": 2
                      },
                      "type": "Recurrence"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "recordedfuture": {
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/recordedfuturev2')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('RecordedFutureConnectionName'))]",
                        "connectionName": "[[variables('RecordedFutureConnectionName')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('RecordedFutureConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "RecordedFuture-URL-Recent_Rep_by_Insikt-TIProcessor",
            "description": "This playbook leverages the Recorded Future API and automatically imports the Recently Reported by Insikt Group URL RiskList, as Threat Intelligence Indicators, for detection purposes in Microsoft Sentinel.\n\nThis playbook depends on RecordedFuture-ImportToSentinel that need to be installed **manually** before installing current playbook.",
            "prerequisites": [
              "First install the RecordedFuture-ImportToSentinel playbook.",
              "To use the Recorded Future for Azure connector, you will need a valid API token from Recorded Future as described in the documentation https://learn.microsoft.com/en-us/connectors/recordedfuturev2/#how-to-get-credentials"
            ],
            "postDeployment": [
              "After deployment you have to open the playbook to configure all connections and press save."
            ],
            "lastUpdateTime": "2022-08-01T00:00:00Z",
            "tags": [
              "Threat Intelligence"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "RecordedFuture-Ukraine-IndicatorProcessor playbook",
        "displayName": "RecordedFuture-Ukraine-IndicatorProcessor playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName7'),'/',variables('playbookVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "RecordedFuture-Ukraine-IndicatorProcessor Playbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion7')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "RecordedFuture-Ukraine-IndicatorProcessor",
              "type": "string"
            },
            "PlaybookNameBatching": {
              "defaultValue": "RecordedFuture-ImportToSentinel",
              "type": "string"
            }
          },
          "variables": {
            "RecordedfutureConnectionName": "recordedfuture-connectorv2",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Recordedfuturev2')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "Day",
                        "interval": 1
                      },
                      "evaluatedRecurrence": {
                        "frequency": "Day",
                        "interval": 1
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "For_each": {
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
                      "actions": {
                        "Parse_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                              "properties": {
                                "EvidenceDetails": {
                                  "properties": {
                                    "EvidenceDetails": {
                                      "items": {
                                        "properties": {
                                          "Criticality": {
                                            "type": "integer"
                                          },
                                          "CriticalityLabel": {
                                            "type": "string"
                                          },
                                          "EvidenceString": {
                                            "type": "string"
                                          },
                                          "Rule": {
                                            "type": "string"
                                          },
                                          "Timestamp": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "Rule",
                                          "EvidenceString",
                                          "CriticalityLabel",
                                          "Timestamp",
                                          "Criticality"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Risk": {
                                  "type": "integer"
                                },
                                "riskString": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "RecordedFuture_Ukraine_Detection_ImportToSentinel": {
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch",
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON')?['Risk'])",
                              "description": "Recorded Future - Ukraine IP Detection",
                              "expirationDateTime": "@{addDays(utcNow(),1)}",
                              "ingestedDateTime": "@{utcNow()}",
                              "isActive": true,
                              "networkIPv4": "@{body('Parse_JSON')?['Name']}",
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "WatchList",
                              "tlpLevel": "Amber"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_2": {
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download_2')",
                      "actions": {
                        "Parse_JSON_2": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_2')",
                            "schema": {
                              "properties": {
                                "EvidenceDetails": {
                                  "properties": {
                                    "EvidenceDetails": {
                                      "items": {
                                        "properties": {
                                          "Criticality": {
                                            "type": "integer"
                                          },
                                          "CriticalityLabel": {
                                            "type": "string"
                                          },
                                          "EvidenceString": {
                                            "type": "string"
                                          },
                                          "Rule": {
                                            "type": "string"
                                          },
                                          "Timestamp": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "Rule",
                                          "EvidenceString",
                                          "CriticalityLabel",
                                          "Timestamp",
                                          "Criticality"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Risk": {
                                  "type": "integer"
                                },
                                "riskString": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "RecordedFuture_Ukraine_Detection_ImportToSentinel_2": {
                          "runAfter": {
                            "Parse_JSON_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch",
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON_2')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON_2')?['Risk'])",
                              "description": "Recorded Future - Ukraine Domain Detection",
                              "domainName": "@{body('Parse_JSON_2')?['Name']}",
                              "expirationDateTime": "@{addHours(utcNow(),2)}",
                              "ingestedDateTime": "@{utcNow()}",
                              "isActive": true,
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "WatchList",
                              "tlpLevel": "Amber"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_3": {
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download_3')",
                      "actions": {
                        "Parse_JSON_3": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_3')",
                            "schema": {
                              "properties": {
                                "EvidenceDetails": {
                                  "properties": {
                                    "EvidenceDetails": {
                                      "items": {
                                        "properties": {
                                          "Criticality": {
                                            "type": "integer"
                                          },
                                          "CriticalityLabel": {
                                            "type": "string"
                                          },
                                          "EvidenceString": {
                                            "type": "string"
                                          },
                                          "Rule": {
                                            "type": "string"
                                          },
                                          "Timestamp": {
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "Rule",
                                          "EvidenceString",
                                          "CriticalityLabel",
                                          "Timestamp",
                                          "Criticality"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Risk": {
                                  "type": "integer"
                                },
                                "riskString": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "RecordedFuture_Ukraine_Detection_ImportToSentinel_3": {
                          "runAfter": {
                            "Parse_JSON_3": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch",
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON_3')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON_3')?['Risk'])",
                              "description": "Recorded Future - Ukraine Url Detection",
                              "expirationDateTime": "@{addHours(utcNow(),2)}",
                              "ingestedDateTime": "@{utcNow()}",
                              "isActive": true,
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "MaliciousUrl",
                              "tlpLevel": "Amber",
                              "url": "@{body('Parse_JSON_3')?['Name']}"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download_3": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_4": {
                      "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download_4')",
                      "actions": {
                        "Parse_JSON_4": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_4')",
                            "schema": {
                              "properties": {
                                "body": {
                                  "items": {
                                    "properties": {
                                      "Algorithm": {
                                        "type": "string"
                                      },
                                      "EvidenceDetails": {
                                        "properties": {
                                          "EvidenceDetails": {
                                            "items": {
                                              "properties": {
                                                "Criticality": {
                                                  "type": "integer"
                                                },
                                                "CriticalityLabel": {
                                                  "type": "string"
                                                },
                                                "EvidenceString": {
                                                  "type": "string"
                                                },
                                                "MitigationString": {
                                                  "type": "string"
                                                },
                                                "Rule": {
                                                  "type": "string"
                                                },
                                                "Timestamp": {
                                                  "type": "integer"
                                                }
                                              },
                                              "required": [
                                                "Rule",
                                                "EvidenceString",
                                                "CriticalityLabel",
                                                "Timestamp",
                                                "MitigationString",
                                                "Criticality"
                                              ],
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "Name": {
                                        "type": "string"
                                      },
                                      "Risk": {
                                        "type": "integer"
                                      },
                                      "RiskString": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "Name",
                                      "Algorithm",
                                      "Risk",
                                      "RiskString",
                                      "EvidenceDetails"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "headers": {
                                  "properties": {
                                    "CF-Cache-Status": {
                                      "type": "string"
                                    },
                                    "CF-RAY": {
                                      "type": "string"
                                    },
                                    "Cache-Control": {
                                      "type": "string"
                                    },
                                    "Content-Length": {
                                      "type": "string"
                                    },
                                    "Content-Type": {
                                      "type": "string"
                                    },
                                    "Date": {
                                      "type": "string"
                                    },
                                    "Expect-CT": {
                                      "type": "string"
                                    },
                                    "Timing-Allow-Origin": {
                                      "type": "string"
                                    },
                                    "Transfer-Encoding": {
                                      "type": "string"
                                    },
                                    "pragma": {
                                      "type": "string"
                                    },
                                    "referrer-policy": {
                                      "type": "string"
                                    },
                                    "strict-transport-security": {
                                      "type": "string"
                                    },
                                    "x-content-type-options": {
                                      "type": "string"
                                    },
                                    "x-frame-options": {
                                      "type": "string"
                                    },
                                    "x-ms-apihub-cached-response": {
                                      "type": "string"
                                    },
                                    "x-ms-apihub-obo": {
                                      "type": "string"
                                    },
                                    "x-rf-proxy-basepath": {
                                      "type": "string"
                                    },
                                    "x-rf-proxy-serviceid": {
                                      "type": "string"
                                    },
                                    "x-xss-protection": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "statusCode": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "RecordedFuture_Ukraine_Detection_ImportToSentinel_4": {
                          "runAfter": {
                            "Parse_JSON_4": [
                              "Succeeded"
                            ]
                          },
                          "type": "SendToBatch",
                          "inputs": {
                            "batchName": "RFImportToSentinel",
                            "content": {
                              "action": "alert",
                              "additionalInformation": "@{body('Parse_JSON_4')?['EvidenceDetails']}",
                              "azureTenantId": "[[subscription().tenantId]",
                              "confidence": "@int(body('Parse_JSON_4')?['Risk'])",
                              "description": "Recorded Future - Ukraine File Hash Detection",
                              "expirationDateTime": "@{addHours(utcNow(),2)}",
                              "filehashtype": "@{replace(replace(body('Parse_JSON_4')?['Algorithm'],'SHA-256', 'sha256'),'SHA-1', 'sha1')}",
                              "filehashvalue": "@{body('Parse_JSON_4')?['Name']}",
                              "ingestedDateTime": "@{utcNow()}",
                              "isActive": true,
                              "targetProduct": "Microsoft Sentinel",
                              "threatType": "Malware",
                              "tlpLevel": "Amber"
                            },
                            "host": {
                              "triggerName": "Batch_messages",
                              "workflow": {
                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('PlaybookNameBatching'))]"
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Recorded_Future_RiskLists_and_SCF_Download_4": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/ukraine/ukraine_russia_ip.csv"
                        }
                      }
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download_2": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/ukraine/ukraine_russia_domain.csv"
                        }
                      }
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download_3": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/ukraine/ukraine_russia_url.csv"
                        }
                      }
                    },
                    "Recorded_Future_RiskLists_and_SCF_Download_4": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/fusion/files",
                        "queries": {
                          "path": "/public/ukraine/ukraine_russia_hash.csv"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "recordedfuture": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('RecordedfutureConnectionName'))]",
                        "connectionName": "[[variables('RecordedfutureConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Recordedfuturev2')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "RecordedFuture_Ukraine_Detection_IndicatorProcessor",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('RecordedfutureConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('RecordedfutureConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('RecordedfutureConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId7'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId7')]",
                "contentId": "[variables('_playbookContentId7')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "RecordedFuture-Ukraine-IndicatorProcessor",
            "description": "This playbook leverages the Recorded Future API and automatically imports the Ukraine RiskLists, as Threat Intelligence Indicators, for detection purposes in Microsoft Sentinel.\n\nThis playbook depends on RecordedFuture-ImportToSentinel that need to be installed **manually** before installing current playbook.",
            "prerequisites": [
              "First install the RecordedFuture-ImportToSentinel playbook.",
              "To use the Recorded Future for Azure connector, you will need a valid API token from Recorded Future as described in the documentation https://learn.microsoft.com/en-us/connectors/recordedfuturev2/#how-to-get-credentials"
            ],
            "postDeployment": [
              "After deployment you have to open the playbook to configure all connections and press save."
            ],
            "lastUpdateTime": "2022-09-20T00:00:00Z",
            "tags": [
              "Threat Intelligence"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "Recorded Future Workbook with template",
        "displayName": "Recorded Future workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Recorded Future -  C&C DNS Name to DNS Events - Correlation&Threat HuntingWorkbook Workbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": ""
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Recorded Future -  C&C DNS Name to DNS Events - Correlation/Threat Hunting\\n\\n\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"5aaf92cc-3c1e-43f0-8a2f-18a79d7c1d5d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DNS_Events_Time_Range\",\"label\":\"DNS Events Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}},{\"id\":\"eea9b6a5-76f4-4d3b-b62d-4f5e1c4173b6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Threat_Intelligence_Time_Range\",\"label\":\"Threat Intelligence Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let list_tlds = ThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n| where isnotempty(DomainName)\\r\\n| extend parts = split(DomainName, '.')\\r\\n| extend tld = parts[(array_length(parts)-1)]\\r\\n| summarize count() by tostring(tld)\\r\\n| summarize make_list(tld);\\r\\nThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Active == true\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n// Picking up only IOC's that contain the entities we want\\r\\n| where isnotempty(DomainName)\\r\\n| join (\\r\\n     DnsEvents\\r\\n    | where TimeGenerated  {DNS_Events_Time_Range:query}\\r\\n    //Extract Domain patterns from syslog message\\r\\n    | where isnotempty(Name)\\r\\n    | extend parts = split(Name, '.')\\r\\n    //Split out the TLD\\r\\n    | extend tld = parts[(array_length(parts)-1)]\\r\\n    //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\\r\\n    | where tld in~ (list_tlds)\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n) on $left.DomainName==$right.Name\\r\\n| summarize Correlation_Matches=count() by bin(DNS_TimeGenerated, 1d)\\r\\n| render barchart\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let list_tlds = ThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n| where isnotempty(DomainName)\\r\\n| extend parts = split(DomainName, '.')\\r\\n| extend tld = parts[(array_length(parts)-1)]\\r\\n| summarize count() by tostring(tld)\\r\\n| summarize make_list(tld);\\r\\nThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Active == true\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n// Picking up only IOC's that contain the entities we want\\r\\n| where isnotempty(DomainName)\\r\\n| join (\\r\\n     DnsEvents\\r\\n    | where TimeGenerated  {DNS_Events_Time_Range:query}\\r\\n    //Extract Domain patterns from syslog message\\r\\n    | where isnotempty(Name)\\r\\n    | extend parts = split(Name, '.')\\r\\n    //Split out the TLD\\r\\n    | extend tld = parts[(array_length(parts)-1)]\\r\\n    //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\\r\\n    | where tld in~ (list_tlds)\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n) on $left.DomainName==$right.Name\\r\\n| project Risk=ConfidenceScore, DomainName, ThreatType, AdditionalInformation\\r\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\r\\n| mv-expand Evidence\\r\\n| extend Rule=Evidence['Rule']\\r\\n| summarize count() by tostring(Rule)\\r\\n| sort by count_ desc\\r\\n\\r\\n\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"orange\"}}],\"labelSettings\":[{\"columnId\":\"Rule\"},{\"columnId\":\"count_\",\"label\":\"Count\"}]}},\"customWidth\":\"30\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let list_tlds = ThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n| where isnotempty(DomainName)\\r\\n| extend parts = split(DomainName, '.')\\r\\n| extend tld = parts[(array_length(parts)-1)]\\r\\n| summarize count() by tostring(tld)\\r\\n| summarize make_list(tld);\\r\\nThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Active == true\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n// Picking up only IOC's that contain the entities we want\\r\\n| where isnotempty(DomainName)\\r\\n| join (\\r\\n     DnsEvents\\r\\n    | where TimeGenerated  {DNS_Events_Time_Range:query}\\r\\n    //Extract Domain patterns from syslog message\\r\\n    | where isnotempty(Name)\\r\\n    | extend parts = split(Name, '.')\\r\\n    //Split out the TLD\\r\\n    | extend tld = parts[(array_length(parts)-1)]\\r\\n    //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\\r\\n    | where tld in~ (list_tlds)\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n) on $left.DomainName==$right.Name\\r\\n| project Risk=ConfidenceScore, DomainName, Threat_Intelligence_IOC_Date = TimeGenerated, SourceIP=ClientIP, DNS_Event_Time = DNS_TimeGenerated, ThreatType, Device=Computer, AdditionalInformation\\r\\n| sort by Risk desc\\r\\n\",\"size\":0,\"exportFieldName\":\"DomainName\",\"exportParameterName\":\"IOC\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Risk\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">=\",\"thresholdValue\":\"90\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"65\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"25\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"blue\",\"text\":\"{0}{1}\"}]}}]}},\"customWidth\":\"70\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\n| where Description contains 'Recorded Future - DOMAIN - C2 DNS Name'\\n| where DomainName == \\\"{IOC}\\\"\\n| where ExpirationDateTime > now()\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\n| take 1\\n| mv-expand Evidence\\n| project Rules = Evidence['Rule'], Evidence_String = Evidence['EvidenceString'], Criticality = Evidence['Criticality']\\n| sort by toint(Criticality) desc\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 5\"}],\"fromTemplateId\":\"sentinel-RecordedFuture-Domain-C2DNS-Workbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": ".description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                },
                "dependencies": {
                  "operator": "AND"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "Recorded Future Workbook with template",
        "displayName": "Recorded Future workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName2'),'/',variables('workbookVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat HuntingWorkbook Workbook with template version 2.2.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId2')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Sets the time name for DNS Events and Threat Intelligence Time Range"
              },
              "properties": {
                "displayName": "[parameters('workbook2-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation/Threat Hunting\\n\\n\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"5aaf92cc-3c1e-43f0-8a2f-18a79d7c1d5d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DNS_Events_Time_Range\",\"label\":\"DNS Events Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}},{\"id\":\"eea9b6a5-76f4-4d3b-b62d-4f5e1c4173b6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Threat_Intelligence_Time_Range\",\"label\":\"Threat Intelligence Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\r\\n| join (\\r\\n    DnsEvents | where TimeGenerated {DNS_Events_Time_Range:query}\\r\\n    | where SubType =~ \\\"LookupQuery\\\" and isnotempty(IPAddresses)\\r\\n    | extend SingleIP = split(IPAddresses, \\\",\\\")\\r\\n    | mvexpand SingleIP\\r\\n    | extend SingleIP = tostring(SingleIP)\\r\\n    // renaming time column so it is clear the log this came from\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n)\\r\\non $left.NetworkIP == $right.SingleIP\\r\\n| summarize Correlation_Matches=count() by bin(DNS_TimeGenerated, 1d)\\r\\n| render barchart\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\r\\n| join (\\r\\n    DnsEvents | where TimeGenerated {DNS_Events_Time_Range:query}\\r\\n    | where SubType =~ \\\"LookupQuery\\\" and isnotempty(IPAddresses)\\r\\n    | extend SingleIP = split(IPAddresses, \\\",\\\")\\r\\n    | mvexpand SingleIP\\r\\n    | extend SingleIP = tostring(SingleIP)\\r\\n    // renaming time column so it is clear the log this came from\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n)\\r\\non $left.NetworkIP == $right.SingleIP\\r\\n| project Risk=ConfidenceScore, NetworkIP, ThreatType, AdditionalInformation\\r\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\r\\n| mv-expand Evidence\\r\\n| extend Rule=Evidence['Rule']\\r\\n| summarize count() by tostring(Rule)\\r\\n| sort by count_ desc\\r\\n\\r\\n\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"orange\"}}],\"labelSettings\":[{\"columnId\":\"Rule\"},{\"columnId\":\"count_\",\"label\":\"Count\"}]}},\"customWidth\":\"30\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\r\\n| join (\\r\\n    DnsEvents | where TimeGenerated {DNS_Events_Time_Range:query}\\r\\n    | where SubType =~ \\\"LookupQuery\\\" and isnotempty(IPAddresses)\\r\\n    | extend SingleIP = split(IPAddresses, \\\",\\\")\\r\\n    | mvexpand SingleIP\\r\\n    | extend SingleIP = tostring(SingleIP)\\r\\n    // renaming time column so it is clear the log this came from\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n)\\r\\non $left.NetworkIP == $right.SingleIP\\r\\n| project Risk=ConfidenceScore, DestinationIP=NetworkIP, Threat_Intelligence_IOC_Date = TimeGenerated, SourceIP=ClientIP, DNS_Event_Time = DNS_TimeGenerated, ThreatType, Device=Computer, AdditionalInformation\\r\\n| sort by Risk desc\\r\\n\",\"size\":0,\"exportFieldName\":\"DestinationIP\",\"exportParameterName\":\"IOC\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Risk\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">=\",\"thresholdValue\":\"90\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"65\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"25\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"blue\",\"text\":\"{0}{1}\"}]}}]}},\"customWidth\":\"70\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\n| where NetworkIP == \\\"{IOC}\\\"\\n| where ExpirationDateTime > now()\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\n| take 1\\n| mv-expand Evidence\\n| project Rules = Evidence['Rule'], Evidence_String = Evidence['EvidenceString'], Criticality = Evidence['Criticality']\\n| sort by toint(Criticality) desc\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 5\"}],\"fromTemplateId\":\"sentinel-RecordedFuture-IP-ActiveC2-Workbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId2'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=RecordedFutureIPActiveC2Workbook; logoFileName=RecordedFuture.svg; description=Sets the time name for DNS Events and Threat Intelligence Time Range; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting; templateRelativePath=Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting.json; subtitle=; provider=Recorded Future}.description",
                "parentId": "[variables('workbookId2')]",
                "contentId": "[variables('_workbookContentId2')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Recorded Future",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Recorded Future Premier Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Recorded Future Support Team",
                  "email": "support@recordedfuture.com",
                  "tier": "Partner",
                  "link": "http://support.recordedfuture.com/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "ThreatIntelligenceIndicator",
                      "kind": "DataType"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.2.1",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Recorded Future",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Recorded Future Premier Integrations",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Recorded Future Support Team",
          "email": "support@recordedfuture.com",
          "tier": "Partner",
          "link": "http://support.recordedfuture.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId3')]",
              "version": "[variables('analyticRuleVersion3')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId4')]",
              "version": "[variables('analyticRuleVersion4')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId5')]",
              "version": "[variables('analyticRuleVersion5')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId6')]",
              "version": "[variables('analyticRuleVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RecordedFuture-ImportToSentinel')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RecordedFuture-HASH-Observed_in_Underground_Virus_Test_Sites-IndicatorProcessor')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RecordedFuture-Ukraine-IndicatorProcessor')]",
              "version": "[variables('playbookVersion7')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId2')]",
              "version": "[variables('workbookVersion2')]"
            }
          ]
        },
        "firstPublishDate": "2021-11-01",
        "providers": [
          "Recorded Future"
        ],
        "categories": {
          "domains": [
            "Security - Threat Intelligence"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
