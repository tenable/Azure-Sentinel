{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
       "metadata": {
        "title": "AD4IoT-SendEmailtoIoTOwner", 
        "description": "The playbooks automate the SOC workflow by automatically emailing the incident details to the right IoT/OT device owner (based on Defender for IoT dafinition) and allowing him to respond by email. The incident is automatically updated based on the email response from the device owner",
        "prerequisites": ["None"],
        "lastUpdateTime": "2022-08-14T00:00:00.000Z",
        "entities": [], 
        "tags": [], 
        "support": {
            "tier": "microsoft" 
        },
        "author": {
            "name": "Amit Cohen"
        },
        "releaseNotes": [
        {
            "version": "1.0.0",
            "title": "AD4IoT-SendEmailtoIoTOwner",
            "notes": [
                "Initial version"
            ]
        }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AD4IoT-SendEmailtoIoTOwner",
            "type": "String"
        }
    },
    "variables": {
		"AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
		"AzureMonitorLogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
		"Office365V1": "[concat('Office365Version1-', parameters('PlaybookName'))]",
		"Office365V2": "[concat('Office365Version2-', parameters('PlaybookName'))]"
	},
    "resources": [
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('AzureSentinelConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "[variables('AzureSentinelConnectionName')]",
				"customParameterValues": {},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
				}
			}
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('AzureMonitorLogsConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "[variables('AzureMonitorLogsConnectionName')]",
				"customParameterValues": {},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
				}
			}
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('Office365V1')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "[variables('Office365V1')]",
				"customParameterValues": {},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
				}
			}
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('Office365V2')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "[variables('Office365V2')]",
				"customParameterValues": {},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
				}
			}
		},
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
			"dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
				"[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
				"[resourceId('Microsoft.Web/connections', variables('Office365V1'))]",
				"[resourceId('Microsoft.Web/connections', variables('Office365V2'))]"
			],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_IPs": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "For_each_IOT_Device": {
                            "foreach": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                            "actions": {
                                "Condition_if_IoT_device": {
                                    "actions": {
                                        "For_each_Alert": {
                                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Check_user_response_-_resolve_incident_if_this_is_expected": {
                                                            "actions": {
                                                                "Add_comment_to_incident_(V3)": {
                                                                    "runAfter": {},
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                            "message": "<p><strong>Incident is going to be auto resolved based by device owner response:</strong><br>\n@{body('Send_incident_validation_email')?['SelectedOption']}<br>\n<br>\n<strong>Submitted by:</strong> @{body('Send_incident_validation_email')?['UserEmailAddress']}<br>\n<br>\nAuto resolve tag is being added</p>"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/Incidents/Comment"
                                                                    }
                                                                },
                                                                "Send_false_positive_email": {
                                                                    "runAfter": {
                                                                        "Update_incident_as_false_positive": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "Body": "<p>Based on your reply, we have auto resolved your incident: @{body('Update_incident_as_false_positive')?['properties']?['incidentNumber']}<br>\n<br>\nTitle: @{body('Update_incident_as_false_positive')?['properties']?['title']}<br>\n<br>\nLink to the incident: @{triggerBody()?['object']?['properties']?['incidentUrl']}</p>",
                                                                            "Importance": "Normal",
                                                                            "Subject": "Your incident - @{triggerBody()?['object']?['properties']?['title']} - has been auto resolved",
                                                                            "To": "@body('Send_incident_validation_email')?['UserEmailAddress']"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['Office365Version1']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/v2/Mail"
                                                                    }
                                                                },
                                                                "Update_incident_as_false_positive": {
                                                                    "runAfter": {
                                                                        "Add_comment_to_incident_(V3)": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "classification": {
                                                                                "ClassificationAndReason": "FalsePositive - InaccurateData",
                                                                                "ClassificationReasonText": "Auto resolved by user response that this is a false positive"
                                                                            },
                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                            "status": "Closed",
                                                                            "tagsToAdd": {
                                                                                "TagsToAdd": [
                                                                                    {
                                                                                        "Tag": "AutoResolved"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "put",
                                                                        "path": "/Incidents"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Send_incident_validation_email": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Add_comment_to_incident_(V3)_2": {
                                                                        "runAfter": {},
                                                                        "type": "ApiConnection",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                "message": "<p><strong>User has auto confirmed that this is a true positive and is not expected.</strong><br>\n<br>\nUser email address: @{body('Send_incident_validation_email')?['UserEmailAddress']}<br>\nResponse if this is a true positive: @{body('Send_incident_validation_email')?['SelectedOption']}<br>\n<br>\nRaising severity of the incident to high and auto assign the incident</p>"
                                                                            },
                                                                            "host": {
                                                                                "connection": {
                                                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method": "post",
                                                                            "path": "/Incidents/Comment"
                                                                        }
                                                                    },
                                                                    "Send_true_positive_email": {
                                                                        "runAfter": {
                                                                            "Update_incident": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "ApiConnection",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "Body": "<p>We have flagged incident @{triggerBody()?['object']?['properties']?['title']},<br>\nWith incident number: @{body('Update_incident')?['properties']?['incidentNumber']}<br>\n<br>\nLink to the incident: @{body('Update_incident')?['properties']?['incidentUrl']}<br>\n<br>\nAs a <strong>True Positive</strong> and we will investigation further.</p>",
                                                                                "Importance": "Normal",
                                                                                "Subject": "Thank you for confirming a true positive incident",
                                                                                "To": "@body('Send_incident_validation_email')?['UserEmailAddress']"
                                                                            },
                                                                            "host": {
                                                                                "connection": {
                                                                                    "name": "@parameters('$connections')['Office365Version2']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method": "post",
                                                                            "path": "/v2/Mail"
                                                                        }
                                                                    },
                                                                    "Update_incident": {
                                                                        "runAfter": {
                                                                            "Add_comment_to_incident_(V3)_2": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "ApiConnection",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                "owner": "@body('Send_incident_validation_email')?['UserEmailAddress']",
                                                                                "ownerAction": "Assign",
                                                                                "severity": "High",
                                                                                "status": "Active",
                                                                                "tagsToAdd": {
                                                                                    "TagsToAdd": [
                                                                                        {
                                                                                            "Tag": "True Positive  - confirmed by user"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "host": {
                                                                                "connection": {
                                                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method": "put",
                                                                            "path": "/Incidents"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@body('Send_incident_validation_email')?['SelectedOption']",
                                                                            "Yes this is expected"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "Send_incident_validation_email": {
                                                            "runAfter": {
                                                                "Set_continueLoop_to_false": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnectionWebhook",
                                                            "inputs": {
                                                                "body": {
                                                                    "Message": {
                                                                        "Body": "We have the following incident where you have been identified as the device owner with the following specifics:\n\nIncident title:  @{triggerBody()?['object']?['properties']?['title']}\n\nIncident description:  @{triggerBody()?['object']?['properties']?['description']}\n\nDeviceName: @{body('Run_query_and_list_results')?['value']?[0]?['deviceName']}\n\nSensorName: @{body('Run_query_and_list_results')?['value']?[0]?['sensorName']}\n\nPlease \"Yes\" if this is expected and therefore a false positive\n\nPlease select \"No\" if this is not expected and therefore a true positive\n\nThanks,\nThe Microsoft Defender for IoT team.\n@{variables('Email')}",
                                                                        "HideHTMLMessage": true,
                                                                        "Importance": "Normal",
                                                                        "Options": "Yes this is expected, No this is NOT expected",
                                                                        "ShowHTMLConfirmationDialog": false,
                                                                        "Subject": "Action required: Validate an incident where you are the device owner",
                                                                        "To": "@{body('Run_query_and_list_results')?['value']?[0]?['IoTowner']}"
                                                                    },
                                                                    "NotificationUrl": "@{listCallbackUrl()}"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['Office365Version1']['connectionId']"
                                                                    }
                                                                },
                                                                "path": "/approvalmail/$subscriptions"
                                                            }
                                                        },
                                                        "Set_continueLoop_to_false": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "continueLoop",
                                                                "value": false
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Set_Email_variable": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@{body('Run_query_and_list_results')?['value']?[0]?['IoTowner']}",
                                                                        ""
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Run_query_and_list_results": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "SecurityAlert | summarize arg_max(TimeGenerated, *) by SystemAlertId | where SystemAlertId == \"@{items('For_each_Alert')?['properties']?['systemAlertId']}\" |  mv-expand Entity=parse_json(Entities) | where isnotempty(\"@{body('Parse_JSON')?['deviceName']}\") and Entity.DeviceName ==\"@{body('Parse_JSON')?['deviceName']}\" | extend IoTowner = trim(@'^\\[\"|\"]$', tostring(Entity.Owners[0])) | extend deviceName = \"@{body('Parse_JSON')?['deviceName']}\" | extend sensorName = tostring(Entity.Sensor) | extend siteName = tostring(Entity.Site) | extend zoneName = tostring(Entity.Zone)",
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/queryData",
                                                        "queries": {
                                                            "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                                            "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                                                            "resourcetype": "Log Analytics Workspace",
                                                            "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                                            "timerange": "Last 30 days"
                                                        }
                                                    }
                                                },
                                                "Set_Email_variable": {
                                                    "runAfter": {
                                                        "Run_query_and_list_results": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "email",
                                                        "value": "@{body('Run_query_and_list_results')?['value']?[0]?['IoTowner']}"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each_IOT_Device')?['kind']",
                                                    "IoTDevice"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@variables('continueLoop')",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@{items('For_each_IOT_Device')['properties']}",
                                        "schema": {
                                            "properties": {
                                                "additionalData": {
                                                    "properties": {
                                                        "DevicePageLink": {
                                                            "type": "string"
                                                        },
                                                        "DeviceSubType": {
                                                            "type": "string"
                                                        },
                                                        "Vendor": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceId": {
                                                    "type": "string"
                                                },
                                                "deviceName": {
                                                    "type": "string"
                                                },
                                                "deviceType": {
                                                    "type": "string"
                                                },
                                                "firmwareVersion": {
                                                    "type": "string"
                                                },
                                                "friendlyName": {
                                                    "type": "string"
                                                },
                                                "iotSecurityAgentId": {
                                                    "type": "string"
                                                },
                                                "model": {
                                                    "type": "string"
                                                },
                                                "operatingSystem": {
                                                    "type": "string"
                                                },
                                                "protocols": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "serialNumber": {
                                                    "type": "string"
                                                },
                                                "source": {
                                                    "type": "string"
                                                },
                                                "vendor": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_continueLoop_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_Email_variable": {
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Email",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_continueLoop_variable": {
                            "runAfter": {
                                "Initialize_Email_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "continueLoop",
                                        "type": "boolean",
                                        "value": true
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
              "parameters": {
                    "$connections": {
                        "value": {
				"azuremonitorlogs": {
					"connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
					"connectionName": "[variables('AzureMonitorLogsConnectionName')]",
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
				},
				"azuresentinel": {
					"connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
					"connectionName": "[variables('AzureSentinelConnectionName')]",
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
			   	 },
			   	 "Office365Version1": {
                             		"connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365V1'))]",
                              	  	"connectionName": "[variables('Office365V1')]",
                              	 	"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                          	  },
                           	 "Office365Version2": {
                            	 	"connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365V2'))]",
                            	 	"connectionName": "[variables('Office365V2')]",
                            	 	"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            	}
                        }
                    }
                }
            }
        }
    ]
}
