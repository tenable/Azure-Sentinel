{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Zscaler Private Access (ZPA)"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Zscaler Private Access (ZPA)",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-zscalerprivateaccess",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "ZscalerZPAWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "uiConfigId1": "ZscalerPrivateAccess",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "ZscalerPrivateAccess",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "huntingQueryVersion1": "1.0.0",
    "huntingQuerycontentId1": "181dc982-4631-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId1": "[variables('huntingQuerycontentId1')]",
    "huntingQueryId1": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId1'))]",
    "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId1')))]",
    "huntingQueryVersion2": "1.0.0",
    "huntingQuerycontentId2": "6ae7b9e0-462a-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId2": "[variables('huntingQuerycontentId2')]",
    "huntingQueryId2": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId2'))]",
    "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId2')))]",
    "huntingQueryVersion3": "1.0.0",
    "huntingQuerycontentId3": "5467efc0-422c-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId3": "[variables('huntingQuerycontentId3')]",
    "huntingQueryId3": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId3'))]",
    "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId3')))]",
    "huntingQueryVersion4": "1.0.0",
    "huntingQuerycontentId4": "20733e72-4231-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId4": "[variables('huntingQuerycontentId4')]",
    "huntingQueryId4": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId4'))]",
    "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId4')))]",
    "huntingQueryVersion5": "1.0.0",
    "huntingQuerycontentId5": "bf8ce3e8-422a-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId5": "[variables('huntingQuerycontentId5')]",
    "huntingQueryId5": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId5'))]",
    "huntingQueryTemplateSpecName5": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId5')))]",
    "huntingQueryVersion6": "1.0.0",
    "huntingQuerycontentId6": "26d5244a-462f-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId6": "[variables('huntingQuerycontentId6')]",
    "huntingQueryId6": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId6'))]",
    "huntingQueryTemplateSpecName6": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId6')))]",
    "huntingQueryVersion7": "1.0.0",
    "huntingQuerycontentId7": "baf67720-4623-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId7": "[variables('huntingQuerycontentId7')]",
    "huntingQueryId7": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId7'))]",
    "huntingQueryTemplateSpecName7": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId7')))]",
    "huntingQueryVersion8": "1.0.0",
    "huntingQuerycontentId8": "d311eb1e-4231-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId8": "[variables('huntingQuerycontentId8')]",
    "huntingQueryId8": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId8'))]",
    "huntingQueryTemplateSpecName8": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId8')))]",
    "huntingQueryVersion9": "1.0.0",
    "huntingQuerycontentId9": "018e11f4-4627-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId9": "[variables('huntingQuerycontentId9')]",
    "huntingQueryId9": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId9'))]",
    "huntingQueryTemplateSpecName9": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId9')))]",
    "huntingQueryVersion10": "1.0.0",
    "huntingQuerycontentId10": "22545900-422d-11ec-81d3-0242ac130003",
    "_huntingQuerycontentId10": "[variables('huntingQuerycontentId10')]",
    "huntingQueryId10": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId10'))]",
    "huntingQueryTemplateSpecName10": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId10')))]",
    "parserVersion1": "1.0.0",
    "parserContentId1": "ZPAEvent-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "Zscaler Private Access Data Parser",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "40a98355-0e52-479f-8c91-4ab659cba878",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "593e3e2a-43ce-11ec-81d3-0242ac130003",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]",
    "analyticRuleVersion3": "1.0.0",
    "analyticRulecontentId3": "b3d112b4-3e1e-11ec-9bbc-0242ac130002",
    "_analyticRulecontentId3": "[variables('analyticRulecontentId3')]",
    "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId3'))]",
    "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId3')))]",
    "analyticRuleVersion4": "1.0.0",
    "analyticRulecontentId4": "672e2846-4226-11ec-81d3-0242ac130003",
    "_analyticRulecontentId4": "[variables('analyticRulecontentId4')]",
    "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId4'))]",
    "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId4')))]",
    "analyticRuleVersion5": "1.0.0",
    "analyticRulecontentId5": "66bc77ee-3e45-11ec-9bbc-0242ac130002",
    "_analyticRulecontentId5": "[variables('analyticRulecontentId5')]",
    "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId5'))]",
    "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId5')))]",
    "analyticRuleVersion6": "1.0.0",
    "analyticRulecontentId6": "236a7ec1-0120-40f2-a157-c1a72dde8bcb",
    "_analyticRulecontentId6": "[variables('analyticRulecontentId6')]",
    "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId6'))]",
    "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId6')))]",
    "analyticRuleVersion7": "1.0.0",
    "analyticRulecontentId7": "c4902121-7a7e-44d1-810b-88d26db622ff",
    "_analyticRulecontentId7": "[variables('analyticRulecontentId7')]",
    "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId7'))]",
    "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId7')))]",
    "analyticRuleVersion8": "1.0.0",
    "analyticRulecontentId8": "24f0779d-3927-403a-aac1-cc8791653606",
    "_analyticRulecontentId8": "[variables('analyticRulecontentId8')]",
    "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId8'))]",
    "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId8')))]",
    "analyticRuleVersion9": "1.0.0",
    "analyticRulecontentId9": "2859ad22-46c8-4cc7-ad7b-80ce0cba0af3",
    "_analyticRulecontentId9": "[variables('analyticRulecontentId9')]",
    "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId9'))]",
    "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId9')))]",
    "analyticRuleVersion10": "1.0.0",
    "analyticRulecontentId10": "e07846e0-43ad-11ec-81d3-0242ac130003",
    "_analyticRulecontentId10": "[variables('analyticRulecontentId10')]",
    "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId10'))]",
    "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId10')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Workbook with template",
        "displayName": "Zscaler Private Access (ZPA) workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "ZscalerZPAWorkbook Workbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Select the time range for this Overview."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **ZPAEvent** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-zpa-parser)\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"b5159ec9-d0a5-42ca-8ba1-f6d883ab823b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"value\":{\"durationMs\":2592000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":3600000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ZPAEvent \\r\\n| where DvcAction == 'open'\\r\\n| summarize count() by  SrcGeoCountry\",\"size\":3,\"title\":\"Top Countries\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"SourceUserName\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},\"subtitleContent\":{\"columnMatch\":\"SourceUserName\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"leftContent\":{\"columnMatch\":\"SourceUserName\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},\"rightContent\":{\"columnMatch\":\"SourceIP\",\"formatter\":1},\"showBorder\":false,\"size\":\"auto\"},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"25\",\"name\":\"query - 4\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ZPAEvent\\r\\n| where isnotempty(DvcAction)\\r\\n| summarize count() by DvcAction\",\"size\":3,\"title\":\"Connection status\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"25\",\"name\":\"Connection status\",\"styleSettings\":{\"margin\":\"40\",\"padding\":\"40\",\"maxWidth\":\"50\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ZPAEvent\\n| make-series TotalEvents = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain};\",\"size\":0,\"title\":\"Events over time\",\"color\":\"magenta\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"customWidth\":\"50\",\"name\":\"query - 4\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ZPAEvent\\r\\n| where DvcAction == 'open'\\r\\n| summarize EventCount = count() by SrcIpAddr\\r\\n| top 10 by EventCount\",\"size\":0,\"title\":\"Top Source IP\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"100\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ZPAEvent\\r\\n  | where DvcAction has \\\"close\\\"\\r\\n  | summarize Reason = count() by EventResult\",\"size\":3,\"title\":\"Connection close reasons\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"query - 3\",\"styleSettings\":{\"maxWidth\":\"50\"}}]},\"name\":\"group - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ZPAEvent\\r\\n  | summarize url = count()by UrlHostname\",\"size\":2,\"title\":\"Top urlhostname requests\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ZPAEvent\\r\\n| summarize TrafficVolume = sum(tolong(SrcBytes)) by DstUserName\\r\\n| join kind = inner (ZPAEvent\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by DstUserName)\\r\\n on DstUserName\\r\\n| project-away DstUserName1, TimeGenerated\\r\\n| project User = DstUserName, ['Traffic(MB)'] = TrafficVolume/1000000, Trend\\r\\n| order by ['Traffic(MB)']\\r\\n| take 8\\r\\n\",\"size\":1,\"title\":\"Top VPN Traffic (per user)\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}}]},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"User\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Traffic(MB)\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false},\"chartSettings\":{\"group\":\"User\",\"createOtherGroup\":0}},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let listIPs =\\nZPAEvent \\n| where TimeGenerated > ago(30d)\\n| where DvcAction == 'open'\\n| summarize ListofIPs = make_set(SrcIpAddr) by DstUserName\\n| project ListofIPs;\\nlet dt_lookBack = 24h;\\nZPAEvent\\n| where TimeGenerated > ago(dt_lookBack)\\n| where isnotempty(SrcIpAddr)\\n| where SrcIpAddr !in (listIPs)\\n| summarize EventCount = count() by DstUserName, SrcIpAddr\\n| extend Message = \\\"VPN connection from new IP\\\"\\n| project-away EventCount\\n\",\"size\":1,\"title\":\"New VPN Users\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityAlert\\r\\n| where AlertName has 'VPN'\\r\\n| extend Severity = AlertSeverity\\r\\n| extend RuleName = AlertName\\r\\n| project RuleName, Severity\\r\\n\\r\\n\",\"size\":0,\"title\":\"Latest Alerts\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"customWidth\":\"50\",\"name\":\"query - 4\"}],\"fromTemplateId\":\"sentinel-ZscalerZPAWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=ZscalerZPAWorkbook; logoFileName=ZscalerLogo.svg; description=Select the time range for this Overview.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Zscaler Private Access (ZPA); templateRelativePath=ZscalerZPA.json; subtitle=; provider=Zscaler}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "ZPA_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "ZscalerPrivateAccess",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) data connector with template",
        "displayName": "Zscaler Private Access (ZPA) template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Zscaler Private Access (ZPA) data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Zscaler Private Access",
                  "publisher": "Zscaler",
                  "descriptionMarkdown": "The [Zscaler Private Access (ZPA)](https://help.zscaler.com/zpa/what-zscaler-private-access) data connector provides the capability to ingest [Zscaler Private Access events](https://help.zscaler.com/zpa/log-streaming-service) into Microsoft Sentinel. Refer to [Zscaler Private Access documentation](https://help.zscaler.com/zpa) for more information.",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected. Follow the steps to use this Kusto Function alias **ZPAEvent** in queries and workbooks. [Follow steps to get this Kusto Function>](https://aka.ms/sentinel-ZscalerPrivateAccess-parser)",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "ZPA_CL",
                      "baseQuery": "ZPA_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All logs",
                      "query": "\nZPAEvent\n| sort by TimeGenerated"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "ZPA_CL",
                      "lastDataReceivedQuery": "ZPA_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "ZPA_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-ZscalerPrivateAccess-parser) to create the Kusto Functions alias, **ZPAEvent**"
                    },
                    {
                      "description": ">**NOTE:** This data connector has been developed using Zscaler Private Access version: 21.67.1"
                    },
                    {
                      "description": "Install the agent on the Server where the Zscaler Private Access logs are forwarded.\n\n> Logs from Zscaler Private Access Server deployed on Linux or Windows servers are collected by **Linux** or **Windows** agents.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the Linux agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Linux Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Linux Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "1. Install and onboard the agent for Linux or Windows"
                    },
                    {
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the Windows agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Windows Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Windows Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ]
                    },
                    {
                      "description": "Follow the configuration steps below to get Zscaler Private Access logs into Microsoft Sentinel. Refer to the [Azure Monitor Documentation](https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-json) for more details on these steps.\nZscaler Private Access logs are delivered via Log Streaming Service (LSS). Refer to [LSS documentation](https://help.zscaler.com/zpa/about-log-streaming-service) for detailed information\n1. Configure [Log Receivers](https://help.zscaler.com/zpa/configuring-log-receiver). While configuring a Log Receiver, choose **JSON** as **Log Template**.\n2. Download config file [zpa.conf](https://aka.ms/sentinel-ZscalerPrivateAccess-conf) \n\t\twget -v https://aka.ms/sentinel-zscalerprivateaccess-conf -O zpa.conf\n3. Login to the server where you have installed Azure Log Analytics agent.\n4. Copy zpa.conf to the /etc/opt/microsoft/omsagent/**workspace_id**/conf/omsagent.d/ folder.\n5. Edit zpa.conf as follows:\n\n\t a. specify port which you have set your Zscaler Log Receivers to forward logs to (line 4)\n\n\t b. zpa.conf uses the port **22033** by default. Ensure this port is not being used by any other source on your server\n\n\t c. If you would like to change the default port for **zpa.conf** make sure that it should not get conflict with default AMA agent ports I.e.(For example CEF uses TCP port **25226** or **25224**) \n\n\t d. replace **workspace_id** with real value of your Workspace ID (lines 14,15,16,19)\n5. Save changes and restart the Azure Log Analytics agent for Linux service with the following command:\n\t\tsudo /opt/microsoft/omsagent/bin/service_control restart",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "2. Configure the logs to be collected"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Zscaler Private Access (ZPA)",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Zscaler Private Access",
          "publisher": "Zscaler",
          "descriptionMarkdown": "The [Zscaler Private Access (ZPA)](https://help.zscaler.com/zpa/what-zscaler-private-access) data connector provides the capability to ingest [Zscaler Private Access events](https://help.zscaler.com/zpa/log-streaming-service) into Microsoft Sentinel. Refer to [Zscaler Private Access documentation](https://help.zscaler.com/zpa) for more information.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "ZPA_CL",
              "baseQuery": "ZPA_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "ZPA_CL",
              "lastDataReceivedQuery": "ZPA_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "ZPA_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "All logs",
              "query": "\nZPAEvent\n| sort by TimeGenerated"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-ZscalerPrivateAccess-parser) to create the Kusto Functions alias, **ZPAEvent**"
            },
            {
              "description": ">**NOTE:** This data connector has been developed using Zscaler Private Access version: 21.67.1"
            },
            {
              "description": "Install the agent on the Server where the Zscaler Private Access logs are forwarded.\n\n> Logs from Zscaler Private Access Server deployed on Linux or Windows servers are collected by **Linux** or **Windows** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Linux agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux or Windows"
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Windows agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Windows Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Windows Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ]
            },
            {
              "description": "Follow the configuration steps below to get Zscaler Private Access logs into Microsoft Sentinel. Refer to the [Azure Monitor Documentation](https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-json) for more details on these steps.\nZscaler Private Access logs are delivered via Log Streaming Service (LSS). Refer to [LSS documentation](https://help.zscaler.com/zpa/about-log-streaming-service) for detailed information\n1. Configure [Log Receivers](https://help.zscaler.com/zpa/configuring-log-receiver). While configuring a Log Receiver, choose **JSON** as **Log Template**.\n2. Download config file [zpa.conf](https://aka.ms/sentinel-ZscalerPrivateAccess-conf) \n\t\twget -v https://aka.ms/sentinel-zscalerprivateaccess-conf -O zpa.conf\n3. Login to the server where you have installed Azure Log Analytics agent.\n4. Copy zpa.conf to the /etc/opt/microsoft/omsagent/**workspace_id**/conf/omsagent.d/ folder.\n5. Edit zpa.conf as follows:\n\n\t a. specify port which you have set your Zscaler Log Receivers to forward logs to (line 4)\n\n\t b. zpa.conf uses the port **22033** by default. Ensure this port is not being used by any other source on your server\n\n\t c. If you would like to change the default port for **zpa.conf** make sure that it should not get conflict with default AMA agent ports I.e.(For example CEF uses TCP port **25226** or **25224**) \n\n\t d. replace **workspace_id** with real value of your Workspace ID (lines 14,15,16,19)\n5. Save changes and restart the Azure Log Analytics agent for Linux service with the following command:\n\t\tsudo /opt/microsoft/omsagent/bin/service_control restart",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "2. Configure the logs to be collected"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected. Follow the steps to use this Kusto Function alias **ZPAEvent** in queries and workbooks. [Follow steps to get this Kusto Function>](https://aka.ms/sentinel-ZscalerPrivateAccess-parser)"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 1 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName1'),'/',variables('huntingQueryVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "ZscalerAbnormalTotalBytesSize_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Abnormal total bytes size",
                "category": "Hunting Queries",
                "query": "let Average_Body_Bytes = toscalar(ZPAEvent\n| summarize Avg_Size = avg(tolong(ZENTotalBytesRxConnector)));\nZPAEvent\n| where tolong(ZENTotalBytesRxConnector) > 1000*Average_Body_Bytes\n| extend AccountCustomEntity = DstUserName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows abnormal total bytes size."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration,Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1530,T1537"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId1'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 1",
                "parentId": "[variables('huntingQueryId1')]",
                "contentId": "[variables('_huntingQuerycontentId1')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 2 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName2'),'/',variables('huntingQueryVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "ZscalerApplicationByUsers_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Applications using by accounts",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| where isnotempty(Application)\n| summarize Users = make_set(DstUserName) by Application\n| extend AccountCustomEntity = Users\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows applications using by accounts."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId2'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 2",
                "parentId": "[variables('huntingQueryId2')]",
                "contentId": "[variables('_huntingQuerycontentId2')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 3 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName3'),'/',variables('huntingQueryVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "ZscalerConnectionCloseReason_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Connection close reasons",
                "category": "Hunting Queries",
                "query": "let User_set = \nZPAEvent\n| where DvcAction has \"close\"\n| summarize Users = make_set(DstUserName)by EventResult;\nZPAEvent\n| where DvcAction has \"close\"\n| summarize EventCount = count()by EventResult\n| join (User_set) on EventResult\n| project-away EventResult1\n| top 20 by EventCount desc \n| extend AccountCustomEntity = Users\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows connection close reasons."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId3'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 3",
                "parentId": "[variables('huntingQueryId3')]",
                "contentId": "[variables('_huntingQuerycontentId3')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 4 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName4'),'/',variables('huntingQueryVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "ZscalerIPsByPorts_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_4",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Destination ports by IP",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| where isnotempty(DstPortNumber)\n| summarize IP_Dst = make_set(DstIpAddr) by DstPortNumber\n| extend IPCustomEntity = DstIpAddr\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows destination ports by IP address."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId4'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 4",
                "parentId": "[variables('huntingQueryId4')]",
                "contentId": "[variables('_huntingQuerycontentId4')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 5 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName5'),'/',variables('huntingQueryVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "ZscalerSourceLocation_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_5",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Users by source location countries",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| where isnotempty(SrcGeoCountry)\n| summarize Users = make_set(DstUserName) by SrcGeoCountry\n| extend AccountCustomEntity = Users\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows Users by source location countries."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId5'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 5",
                "parentId": "[variables('huntingQueryId5')]",
                "contentId": "[variables('_huntingQuerycontentId5')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 6 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName6'),'/',variables('huntingQueryVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "ZscalerTopConnectors_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_6",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Top connectors",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| where isnotempty(Connector) \n| where Connector != 0\n| summarize summ = sum(tolong(BytesRxInterface))by Connector\n| top 20 by summ desc \n| extend ProcessCustomEntity = Connector\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows top connectors."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId6'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 6",
                "parentId": "[variables('huntingQueryId6')]",
                "contentId": "[variables('_huntingQuerycontentId6')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 7 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName7'),'/',variables('huntingQueryVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "ZscalerTopSourceIP_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_7",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Top source IP",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| where DvcAction == 'open'\n| summarize EventCount = count()by SrcIpAddr\n| top 20 by EventCount desc \n| extend IPCustomEntity = SrcIpAddr\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows top source IP."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId7'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 7",
                "parentId": "[variables('huntingQueryId7')]",
                "contentId": "[variables('_huntingQuerycontentId7')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 8 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName8'),'/',variables('huntingQueryVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "ZscalerUrlhostname_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_8",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Rare urlhostname requests",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| where isnotempty(UrlHostname)\n| summarize url = count()by UrlHostname\n| top 20 by url asc \n| extend UrlCustomEntity = UrlHostname\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows rare urlhostname requests."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId8'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 8",
                "parentId": "[variables('huntingQueryId8')]",
                "contentId": "[variables('_huntingQuerycontentId8')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 9 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName9'),'/',variables('huntingQueryVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "ZscalerUserAccessGroups_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_9",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Users access groups",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| summarize ApplicationGroup = make_set(AppGroup)by DstUserName\n| extend AccountCustomEntity = DstUserName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows users access groups."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId9'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 9",
                "parentId": "[variables('huntingQueryId9')]",
                "contentId": "[variables('_huntingQuerycontentId9')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Hunting Query 10 with template",
        "displayName": "Zscaler Private Access (ZPA) Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName10'),'/',variables('huntingQueryVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "ZscalerUserServerErrors_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "Zscaler_Private_Access_(ZPA)_Hunting_Query_10",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler - Server error by user",
                "category": "Hunting Queries",
                "query": "ZPAEvent\n| where EventResult has \"AST_MT_SETUP_ERR_OPEN_SERVER_ERROR\"\n| summarize ips = count()by DstUserName\n| top 20 by ips desc \n| extend AccountCustomEntity = DstUserName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query shows server error by user."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId10'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Hunting Query 10",
                "parentId": "[variables('huntingQueryId10')]",
                "contentId": "[variables('_huntingQuerycontentId10')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "ZPAEvent Data Parser with template",
        "displayName": "ZPAEvent Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "ZPAEvent Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Zscaler Private Access Data Parser",
                "category": "Samples",
                "functionAlias": "ZPAEvent",
                "query": "\nlet ZPAEvent_view = view () {\r\n    ZPA_CL | where isnotempty(Message)\r\n| extend tmp = parse_json(Message)\r\n| evaluate bag_unpack(tmp)\r\n| extend\r\n        EventVendor=\"Zscaler\",\r\n        EventProduct=\"Private Access\"\r\n};\r\nlet ZPAEvent_main_view = view () {\r\n    ZPAEvent_view \r\n    | extend\r\n            LogTimestamp=column_ifexists('LogTimestamp', ''),\r\n            Customer=column_ifexists('Customer', ''),\r\n            NetworkSessionId=column_ifexists('SessionID', ''),\r\n            ConnectionID=column_ifexists('ConnectionID', ''),\r\n            EventResult=column_ifexists('InternalReason', column_ifexists('ConnectionStatus', '')),\r\n            DvcAction=column_ifexists('ConnectionStatus', column_ifexists('SessionStatus', '')),\r\n            NetworkProtocol=column_ifexists('IPProtocol', ''),\r\n            DoubleEncryption=column_ifexists('DoubleEncryption', ''),\r\n            DstUserName=column_ifexists('Username', column_ifexists('User', '')),\r\n            DstPortNumber=column_ifexists('ServicePort', column_ifexists('ServerPort', column_ifexists('ApplicationPort', ''))),\r\n            SrcIpAddr=column_ifexists('ClientPublicIP', ''),\r\n            SrcNatIpAddr=column_ifexists('ClientPrivateIP', ''),\r\n            SrcGeoLatitude=column_ifexists('ClientLatitude', ''),\r\n            SrcGeoLongitude=column_ifexists('ClientLongitude', ''),\r\n            SrcGeoCountry=column_ifexists('ClientCountryCode', ''),\r\n            ClientZEN=column_ifexists('ClientZEN', ''),\r\n            NetworkRuleName=column_ifexists('Policy', ''),\r\n            ConnectorZEN=column_ifexists('ConnectorZEN', ''),\r\n            ConnectorIP=column_ifexists('ConnectorIP', ''),\r\n            ConnectorPort=column_ifexists('ConnectorPort', ''),\r\n            SrcDvcHostname=column_ifexists('Host', ''),\r\n            Application=column_ifexists('Application', ''),\r\n            AppGroup=column_ifexists('AppGroup', ''),\r\n            DstDomainHostname=column_ifexists('Server', ''),\r\n            DstIpAddr=column_ifexists('ServerIP', ''),\r\n            PolicyProcessingTime=column_ifexists('PolicyProcessingTime', ''),\r\n            CAProcessingTime=column_ifexists('CAProcessingTime', ''),\r\n            ConnectorZENSetupTime=column_ifexists('ConnectorZENSetupTime', ''),\r\n            ConnectionSetupTime=column_ifexists('ConnectionSetupTime', ''),\r\n            ServerSetupTime=column_ifexists('ServerSetupTime', ''),\r\n            AppLearnTime=column_ifexists('AppLearnTime', ''),\r\n            TimestampConnectionStart=column_ifexists('TimestampConnectionStart', ''),\r\n            TimestampConnectionEnd=column_ifexists('TimestampConnectionEnd', ''),\r\n            TimestampCATx=column_ifexists('TimestampCATx', ''),\r\n            TimestampCARx=column_ifexists('TimestampCARx', ''),\r\n            TimestampAppLearnStart=column_ifexists('TimestampAppLearnStart', ''),\r\n            TimestampZENFirstRxClient=column_ifexists('TimestampZENFirstRxClient', ''),\r\n            TimestampZENFirstTxClient=column_ifexists('TimestampZENFirstTxClient', ''),\r\n            TimestampZENLastRxClient=column_ifexists('TimestampZENLastRxClient', ''),\r\n            TimestampZENLastTxClient=column_ifexists('TimestampZENLastTxClient', ''),\r\n            TimestampConnectorZENSetupComplete=column_ifexists('TimestampConnectorZENSetupComplete', ''),\r\n            TimestampZENFirstRxConnector=column_ifexists('TimestampZENFirstRxConnector', ''),\r\n            TimestampZENFirstTxConnector=column_ifexists('TimestampZENFirstTxConnector', ''),\r\n            TimestampZENLastRxConnector=column_ifexists('TimestampZENLastRxConnector', ''),\r\n            TimestampZENLastTxConnector=column_ifexists('TimestampZENLastTxConnector', ''),\r\n            SrcBytes=column_ifexists('ZENTotalBytesRxClient', column_ifexists('TotalBytesRx', column_ifexists('TotalBytesRx', ''))),\r\n            ZENBytesRxClient=column_ifexists('ZENBytesRxClient', ''),\r\n            DstBytes=column_ifexists('ZENTotalBytesTxClient', column_ifexists('TotalBytesTx', column_ifexists('TotalBytesTx', ''))),\r\n            ZENBytesTxClient=column_ifexists('ZENBytesTxClient', ''),\r\n            ZENTotalBytesRxConnector=column_ifexists('ZENTotalBytesRxConnector', ''),\r\n            ZENBytesRxConnector=column_ifexists('ZENBytesRxConnector', ''),\r\n            ZENTotalBytesTxConnector=column_ifexists('ZENTotalBytesTxConnector', ''),\r\n            ZENBytesTxConnector=column_ifexists('ZENBytesTxConnector', ''),\r\n            Idp=column_ifexists('Idp', ''),\r\n            Version=column_ifexists('Version', ''),\r\n            ZEN=column_ifexists('ZEN', ''),\r\n            CertificateCN=column_ifexists('CertificateCN', ''),\r\n            PrivateIP=column_ifexists('PrivateIP', ''),\r\n            DvcIpAddr=column_ifexists('PublicIP', ''),\r\n            Latitude=column_ifexists('Latitude', ''),\r\n            Longitude=column_ifexists('Longitude', ''),\r\n            CountryCode=column_ifexists('CountryCode', ''),\r\n            TimestampAuthentication=column_ifexists('TimestampAuthentication', ''),\r\n            TimestampUnAuthentication=column_ifexists('TimestampUnAuthentication', ''),\r\n            DvcHostname=column_ifexists('Hostname', ''),\r\n            SrcDvcOs=column_ifexists('Platform', ''),\r\n            DvcType=column_ifexists('ClientType', ''),\r\n            TrustedNetworks=column_ifexists('TrustedNetworks', ''),\r\n            TrustedNetworksNames=column_ifexists('TrustedNetworksNames', ''),\r\n            SAMLAttributes=column_ifexists('SAMLAttributes', ''),\r\n            PosturesHit=column_ifexists('PosturesHit', ''),\r\n            PosturesMiss=column_ifexists('PosturesMiss', ''),\r\n            ZENLatitude=column_ifexists('ZENLatitude', ''),\r\n            ZENLongitude=column_ifexists('ZENLongitude', ''),\r\n            ZENCountryCode=column_ifexists('ZENCountryCode', ''),\r\n            SessionType=column_ifexists('SessionType', ''),\r\n            Connector=column_ifexists('Connector', ''),\r\n            ConnectorGroup=column_ifexists('ConnectorGroup', ''),\r\n            CPUUtilization=column_ifexists('CPUUtilization', ''),\r\n            MemUtilization=column_ifexists('MemUtilization', ''),\r\n            ServiceCount=column_ifexists('ServiceCount', ''),\r\n            InterfaceDefRoute=column_ifexists('InterfaceDefRoute', ''),\r\n            DefRouteGW=column_ifexists('DefRouteGW', ''),\r\n            PrimaryDNSResolver=column_ifexists('PrimaryDNSResolver', ''),\r\n            HostUpTime=column_ifexists('HostUpTime', ''),\r\n            ConnectorUpTime=column_ifexists('ConnectorUpTime', ''),\r\n            NumOfInterfaces=column_ifexists('NumOfInterfaces', ''),\r\n            BytesRxInterface=column_ifexists('BytesRxInterface', ''),\r\n            PacketsRxInterface=column_ifexists('PacketsRxInterface', ''),\r\n            ErrorsRxInterface=column_ifexists('ErrorsRxInterface', ''),\r\n            DiscardsRxInterface=column_ifexists('DiscardsRxInterface', ''),\r\n            BytesTxInterface=column_ifexists('BytesTxInterface', ''),\r\n            PacketsTxInterface=column_ifexists('PacketsTxInterface', ''),\r\n            ErrorsTxInterface=column_ifexists('ErrorsTxInterface', ''),\r\n            DiscardsTxInterface=column_ifexists('DiscardsTxInterface', ''),\r\n            ModifiedTime=column_ifexists('ModifiedTime', ''),\r\n            CreationTime=column_ifexists('CreationTime', ''),\r\n            ModifiedBy=column_ifexists('ModifiedBy', ''),\r\n            RequestID=column_ifexists('RequestID', ''),\r\n            AuditOldValue=column_ifexists('AuditOldValue', ''),\r\n            AuditNewValue=column_ifexists('AuditNewValue', ''),\r\n            AuditOperationType=column_ifexists('AuditOperationType', ''),\r\n            ObjectType=column_ifexists('ObjectType', ''),\r\n            ObjectName=column_ifexists('ObjectName', ''),\r\n            ObjectID=column_ifexists('ObjectID', ''),\r\n            CustomerID=column_ifexists('CustomerID', ''),\r\n            Exporter=column_ifexists('Exporter', ''),\r\n            TimestampRequestReceiveStart=column_ifexists('TimestampRequestReceiveStart', ''),\r\n            TimestampRequestReceiveHeaderFinish=column_ifexists('TimestampRequestReceiveHeaderFinish', ''),\r\n            TimestampRequestReceiveFinish=column_ifexists('TimestampRequestReceiveFinish', ''),\r\n            TimestampRequestTransmitStart=column_ifexists('TimestampRequestTransmitStart', ''),\r\n            TimestampRequestTransmitFinish=column_ifexists('TimestampRequestTransmitFinish', ''),\r\n            TimestampResponseReceiveStart=column_ifexists('TimestampResponseReceiveStart', ''),\r\n            TimestampResponseReceiveFinish=column_ifexists('TimestampResponseReceiveFinish', ''),\r\n            TimestampResponseTransmitStart=column_ifexists('TimestampResponseTransmitStart', ''),\r\n            TimestampResponseTransmitFinish=column_ifexists('TimestampResponseTransmitFinish', ''),\r\n            TotalTimeRequestReceive=column_ifexists('TotalTimeRequestReceive', ''),\r\n            TotalTimeRequestTransmit=column_ifexists('TotalTimeRequestTransmit', ''),\r\n            TotalTimeResponseReceive=column_ifexists('TotalTimeResponseReceive', ''),\r\n            TotalTimeResponseTransmit=column_ifexists('TotalTimeResponseTransmit', ''),\r\n            TotalTimeConnectionSetup=column_ifexists('TotalTimeConnectionSetup', ''),\r\n            TotalTimeServerResponse=column_ifexists('TotalTimeServerResponse', ''),\r\n            HttpRequestMethod=column_ifexists('Method', ''),\r\n            NetworkApplicationProtocol=column_ifexists('Protocol', ''),\r\n            UrlHostname=column_ifexists('Host', ''),\r\n            UrlOriginal=column_ifexists('URL', ''),\r\n            HttpUserAgentOriginal=column_ifexists('UserAgent', ''),\r\n            HttpRequestXff=column_ifexists('XFF', ''),\r\n            NameID=column_ifexists('NameID', ''),\r\n            HttpStatusCode=column_ifexists('StatusCode', ''),\r\n            HttpRequestBodyBytes=column_ifexists('RequestSize', ''),\r\n            HttpResponseBodyBytes=column_ifexists('ResponseSize', ''),\r\n            SrcPortNumber=column_ifexists('ClientPublicPort', ''),\r\n            EventResultDetails=column_ifexists('ConnectionReason', ''),\r\n            CorsToken=column_ifexists('CorsToken', ''),\r\n            Origin=column_ifexists('Origin', '')\r\n};\r\nZPAEvent_main_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Zscaler Private Access Data Parser"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "Zscaler Private Access (ZPA)",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Zscaler Private Access Data Parser",
        "category": "Samples",
        "functionAlias": "ZPAEvent",
        "query": "\nlet ZPAEvent_view = view () {\r\n    ZPA_CL | where isnotempty(Message)\r\n| extend tmp = parse_json(Message)\r\n| evaluate bag_unpack(tmp)\r\n| extend\r\n        EventVendor=\"Zscaler\",\r\n        EventProduct=\"Private Access\"\r\n};\r\nlet ZPAEvent_main_view = view () {\r\n    ZPAEvent_view \r\n    | extend\r\n            LogTimestamp=column_ifexists('LogTimestamp', ''),\r\n            Customer=column_ifexists('Customer', ''),\r\n            NetworkSessionId=column_ifexists('SessionID', ''),\r\n            ConnectionID=column_ifexists('ConnectionID', ''),\r\n            EventResult=column_ifexists('InternalReason', column_ifexists('ConnectionStatus', '')),\r\n            DvcAction=column_ifexists('ConnectionStatus', column_ifexists('SessionStatus', '')),\r\n            NetworkProtocol=column_ifexists('IPProtocol', ''),\r\n            DoubleEncryption=column_ifexists('DoubleEncryption', ''),\r\n            DstUserName=column_ifexists('Username', column_ifexists('User', '')),\r\n            DstPortNumber=column_ifexists('ServicePort', column_ifexists('ServerPort', column_ifexists('ApplicationPort', ''))),\r\n            SrcIpAddr=column_ifexists('ClientPublicIP', ''),\r\n            SrcNatIpAddr=column_ifexists('ClientPrivateIP', ''),\r\n            SrcGeoLatitude=column_ifexists('ClientLatitude', ''),\r\n            SrcGeoLongitude=column_ifexists('ClientLongitude', ''),\r\n            SrcGeoCountry=column_ifexists('ClientCountryCode', ''),\r\n            ClientZEN=column_ifexists('ClientZEN', ''),\r\n            NetworkRuleName=column_ifexists('Policy', ''),\r\n            ConnectorZEN=column_ifexists('ConnectorZEN', ''),\r\n            ConnectorIP=column_ifexists('ConnectorIP', ''),\r\n            ConnectorPort=column_ifexists('ConnectorPort', ''),\r\n            SrcDvcHostname=column_ifexists('Host', ''),\r\n            Application=column_ifexists('Application', ''),\r\n            AppGroup=column_ifexists('AppGroup', ''),\r\n            DstDomainHostname=column_ifexists('Server', ''),\r\n            DstIpAddr=column_ifexists('ServerIP', ''),\r\n            PolicyProcessingTime=column_ifexists('PolicyProcessingTime', ''),\r\n            CAProcessingTime=column_ifexists('CAProcessingTime', ''),\r\n            ConnectorZENSetupTime=column_ifexists('ConnectorZENSetupTime', ''),\r\n            ConnectionSetupTime=column_ifexists('ConnectionSetupTime', ''),\r\n            ServerSetupTime=column_ifexists('ServerSetupTime', ''),\r\n            AppLearnTime=column_ifexists('AppLearnTime', ''),\r\n            TimestampConnectionStart=column_ifexists('TimestampConnectionStart', ''),\r\n            TimestampConnectionEnd=column_ifexists('TimestampConnectionEnd', ''),\r\n            TimestampCATx=column_ifexists('TimestampCATx', ''),\r\n            TimestampCARx=column_ifexists('TimestampCARx', ''),\r\n            TimestampAppLearnStart=column_ifexists('TimestampAppLearnStart', ''),\r\n            TimestampZENFirstRxClient=column_ifexists('TimestampZENFirstRxClient', ''),\r\n            TimestampZENFirstTxClient=column_ifexists('TimestampZENFirstTxClient', ''),\r\n            TimestampZENLastRxClient=column_ifexists('TimestampZENLastRxClient', ''),\r\n            TimestampZENLastTxClient=column_ifexists('TimestampZENLastTxClient', ''),\r\n            TimestampConnectorZENSetupComplete=column_ifexists('TimestampConnectorZENSetupComplete', ''),\r\n            TimestampZENFirstRxConnector=column_ifexists('TimestampZENFirstRxConnector', ''),\r\n            TimestampZENFirstTxConnector=column_ifexists('TimestampZENFirstTxConnector', ''),\r\n            TimestampZENLastRxConnector=column_ifexists('TimestampZENLastRxConnector', ''),\r\n            TimestampZENLastTxConnector=column_ifexists('TimestampZENLastTxConnector', ''),\r\n            SrcBytes=column_ifexists('ZENTotalBytesRxClient', column_ifexists('TotalBytesRx', column_ifexists('TotalBytesRx', ''))),\r\n            ZENBytesRxClient=column_ifexists('ZENBytesRxClient', ''),\r\n            DstBytes=column_ifexists('ZENTotalBytesTxClient', column_ifexists('TotalBytesTx', column_ifexists('TotalBytesTx', ''))),\r\n            ZENBytesTxClient=column_ifexists('ZENBytesTxClient', ''),\r\n            ZENTotalBytesRxConnector=column_ifexists('ZENTotalBytesRxConnector', ''),\r\n            ZENBytesRxConnector=column_ifexists('ZENBytesRxConnector', ''),\r\n            ZENTotalBytesTxConnector=column_ifexists('ZENTotalBytesTxConnector', ''),\r\n            ZENBytesTxConnector=column_ifexists('ZENBytesTxConnector', ''),\r\n            Idp=column_ifexists('Idp', ''),\r\n            Version=column_ifexists('Version', ''),\r\n            ZEN=column_ifexists('ZEN', ''),\r\n            CertificateCN=column_ifexists('CertificateCN', ''),\r\n            PrivateIP=column_ifexists('PrivateIP', ''),\r\n            DvcIpAddr=column_ifexists('PublicIP', ''),\r\n            Latitude=column_ifexists('Latitude', ''),\r\n            Longitude=column_ifexists('Longitude', ''),\r\n            CountryCode=column_ifexists('CountryCode', ''),\r\n            TimestampAuthentication=column_ifexists('TimestampAuthentication', ''),\r\n            TimestampUnAuthentication=column_ifexists('TimestampUnAuthentication', ''),\r\n            DvcHostname=column_ifexists('Hostname', ''),\r\n            SrcDvcOs=column_ifexists('Platform', ''),\r\n            DvcType=column_ifexists('ClientType', ''),\r\n            TrustedNetworks=column_ifexists('TrustedNetworks', ''),\r\n            TrustedNetworksNames=column_ifexists('TrustedNetworksNames', ''),\r\n            SAMLAttributes=column_ifexists('SAMLAttributes', ''),\r\n            PosturesHit=column_ifexists('PosturesHit', ''),\r\n            PosturesMiss=column_ifexists('PosturesMiss', ''),\r\n            ZENLatitude=column_ifexists('ZENLatitude', ''),\r\n            ZENLongitude=column_ifexists('ZENLongitude', ''),\r\n            ZENCountryCode=column_ifexists('ZENCountryCode', ''),\r\n            SessionType=column_ifexists('SessionType', ''),\r\n            Connector=column_ifexists('Connector', ''),\r\n            ConnectorGroup=column_ifexists('ConnectorGroup', ''),\r\n            CPUUtilization=column_ifexists('CPUUtilization', ''),\r\n            MemUtilization=column_ifexists('MemUtilization', ''),\r\n            ServiceCount=column_ifexists('ServiceCount', ''),\r\n            InterfaceDefRoute=column_ifexists('InterfaceDefRoute', ''),\r\n            DefRouteGW=column_ifexists('DefRouteGW', ''),\r\n            PrimaryDNSResolver=column_ifexists('PrimaryDNSResolver', ''),\r\n            HostUpTime=column_ifexists('HostUpTime', ''),\r\n            ConnectorUpTime=column_ifexists('ConnectorUpTime', ''),\r\n            NumOfInterfaces=column_ifexists('NumOfInterfaces', ''),\r\n            BytesRxInterface=column_ifexists('BytesRxInterface', ''),\r\n            PacketsRxInterface=column_ifexists('PacketsRxInterface', ''),\r\n            ErrorsRxInterface=column_ifexists('ErrorsRxInterface', ''),\r\n            DiscardsRxInterface=column_ifexists('DiscardsRxInterface', ''),\r\n            BytesTxInterface=column_ifexists('BytesTxInterface', ''),\r\n            PacketsTxInterface=column_ifexists('PacketsTxInterface', ''),\r\n            ErrorsTxInterface=column_ifexists('ErrorsTxInterface', ''),\r\n            DiscardsTxInterface=column_ifexists('DiscardsTxInterface', ''),\r\n            ModifiedTime=column_ifexists('ModifiedTime', ''),\r\n            CreationTime=column_ifexists('CreationTime', ''),\r\n            ModifiedBy=column_ifexists('ModifiedBy', ''),\r\n            RequestID=column_ifexists('RequestID', ''),\r\n            AuditOldValue=column_ifexists('AuditOldValue', ''),\r\n            AuditNewValue=column_ifexists('AuditNewValue', ''),\r\n            AuditOperationType=column_ifexists('AuditOperationType', ''),\r\n            ObjectType=column_ifexists('ObjectType', ''),\r\n            ObjectName=column_ifexists('ObjectName', ''),\r\n            ObjectID=column_ifexists('ObjectID', ''),\r\n            CustomerID=column_ifexists('CustomerID', ''),\r\n            Exporter=column_ifexists('Exporter', ''),\r\n            TimestampRequestReceiveStart=column_ifexists('TimestampRequestReceiveStart', ''),\r\n            TimestampRequestReceiveHeaderFinish=column_ifexists('TimestampRequestReceiveHeaderFinish', ''),\r\n            TimestampRequestReceiveFinish=column_ifexists('TimestampRequestReceiveFinish', ''),\r\n            TimestampRequestTransmitStart=column_ifexists('TimestampRequestTransmitStart', ''),\r\n            TimestampRequestTransmitFinish=column_ifexists('TimestampRequestTransmitFinish', ''),\r\n            TimestampResponseReceiveStart=column_ifexists('TimestampResponseReceiveStart', ''),\r\n            TimestampResponseReceiveFinish=column_ifexists('TimestampResponseReceiveFinish', ''),\r\n            TimestampResponseTransmitStart=column_ifexists('TimestampResponseTransmitStart', ''),\r\n            TimestampResponseTransmitFinish=column_ifexists('TimestampResponseTransmitFinish', ''),\r\n            TotalTimeRequestReceive=column_ifexists('TotalTimeRequestReceive', ''),\r\n            TotalTimeRequestTransmit=column_ifexists('TotalTimeRequestTransmit', ''),\r\n            TotalTimeResponseReceive=column_ifexists('TotalTimeResponseReceive', ''),\r\n            TotalTimeResponseTransmit=column_ifexists('TotalTimeResponseTransmit', ''),\r\n            TotalTimeConnectionSetup=column_ifexists('TotalTimeConnectionSetup', ''),\r\n            TotalTimeServerResponse=column_ifexists('TotalTimeServerResponse', ''),\r\n            HttpRequestMethod=column_ifexists('Method', ''),\r\n            NetworkApplicationProtocol=column_ifexists('Protocol', ''),\r\n            UrlHostname=column_ifexists('Host', ''),\r\n            UrlOriginal=column_ifexists('URL', ''),\r\n            HttpUserAgentOriginal=column_ifexists('UserAgent', ''),\r\n            HttpRequestXff=column_ifexists('XFF', ''),\r\n            NameID=column_ifexists('NameID', ''),\r\n            HttpStatusCode=column_ifexists('StatusCode', ''),\r\n            HttpRequestBodyBytes=column_ifexists('RequestSize', ''),\r\n            HttpResponseBodyBytes=column_ifexists('ResponseSize', ''),\r\n            SrcPortNumber=column_ifexists('ClientPublicPort', ''),\r\n            EventResultDetails=column_ifexists('ConnectionReason', ''),\r\n            CorsToken=column_ifexists('CorsToken', ''),\r\n            Origin=column_ifexists('Origin', '')\r\n};\r\nZPAEvent_main_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Zscaler Private Access (ZPA)",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 1 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "ZscalerSharedZPASession_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects shared ZPA session.",
                "displayName": "Zscaler - Shared ZPA session",
                "enabled": false,
                "query": "let open_sessions =\nZPAEvent\n| where DvcAction == 'open'\n| summarize timestampstart = min(TimeGenerated) by DstUserName, SrcIpAddr, NetworkSessionId\n| sort by timestampstart asc;\nlet closed_sessions =\nZPAEvent\n| where TimeGenerated > ago(1h)\n| where DvcAction == 'close'\n| summarize timestampend = max(TimeGenerated) by DstUserName, SrcIpAddr, NetworkSessionId\n| sort by timestampend asc;\nopen_sessions\n| join (closed_sessions) on DstUserName\n| sort by DstUserName, timestampstart\n| extend prev_session_closetime = prev(timestampend,1)\n| extend prev_session_starttime = prev(timestampstart,1)\n| extend PreviousSrcIpAddr = prev(SrcIpAddr, 1)\n| extend prev_sessionuser = prev(DstUserName, 1) \n| where DstUserName == prev_sessionuser\n| where SrcIpAddr != PreviousSrcIpAddr\n| where prev_session_closetime > timestampstart\n| project DstUserName, SrcIpAddr, PreviousSrcIpAddr\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT24H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPCustomEntity"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 2 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "ZscalerUnexpectedCountEventResult_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects unexpected event count of rejects by policy.",
                "displayName": "Zscaler - Unexpected event count of rejects by policy",
                "enabled": false,
                "query": "let threshold = 1000;\nZPAEvent\n| where EventResult has \"REJECTED_BY_POLICY\"\n| summarize rejected = count() by EventResult, DstUserName\n| where rejected > threshold\n| extend AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 3 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName3'),'/',variables('analyticRuleVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "ZscalerUnexpectedCountries_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId3')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects suspicious ZPA connections from forbidden countries.",
                "displayName": "Zscaler - Forbidden countries",
                "enabled": false,
                "query": "let bl_countries = dynamic(['CH', 'RU']);       //List of countries from which you do not expect connections\nZPAEvent \n| where DvcAction == 'open'\n| where SrcGeoCountry in~ (bl_countries)\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPCustomEntity"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId3'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 3",
                "parentId": "[variables('analyticRuleId3')]",
                "contentId": "[variables('_analyticRulecontentId3')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 4 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName4'),'/',variables('analyticRuleVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "ZscalerUnexpectedUpdateOperation_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId4')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects unexpected version of update operation.",
                "displayName": "Zscaler - Unexpected update operation",
                "enabled": false,
                "query": "ZPAEvent\n| where isnotempty(AuditOperationType)\n| extend ExpectedVersion1 = extract(@'(expectedVersion\":\")([0-9]+)\\.([0-9]+\\.[0-9]+)', 2, AuditOldValue)\n| extend ExpectedVersion2 = extract(@'(expectedVersion\":\")([0-9]+)\\.([0-9]+\\.[0-9]+)', 3, AuditOldValue)\n| extend NewVersion1 = extract(@'(\"currentVersion\":\")([0-9]+)\\.([0-9]+\\.[0-9]+)', 2, AuditNewValue)\n| extend NewVersion2 = extract(@'(\"currentVersion\":\")([0-9]+)\\.([0-9]+\\.[0-9]+)', 3, AuditNewValue)\n| extend Comparision1 = iff(tolong(ExpectedVersion2) > tolong(NewVersion2), 'Unexpected version', 'Expected version')\n| extend VersionCheck = iff(tolong(ExpectedVersion1) > tolong(NewVersion1), 'Unexpected version', Comparision1)\n| project-away ExpectedVersion1, ExpectedVersion2, NewVersion1, NewVersion2, Comparision1\n| extend ProcessCustomEntity = AuditOperationType\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessCustomEntity"
                      }
                    ],
                    "entityType": "Process"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId4'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 4",
                "parentId": "[variables('analyticRuleId4')]",
                "contentId": "[variables('_analyticRulecontentId4')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 5 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName5'),'/',variables('analyticRuleVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "ZscalerZPAConnectionsByDormantUser_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId5')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects ZPA connections by dormant user.",
                "displayName": "Zscaler - Connections by dormant user",
                "enabled": false,
                "query": "let dt_lastlogintime = 14d;\nlet activeUsers =\nZPAEvent \n| where TimeGenerated > ago(dt_lastlogintime)\n| where DvcAction == 'open'\n| summarize lastLoginTime = max(TimeGenerated) by DstUserName\n| summarize makelist(DstUserName);\nZPAEvent\n| where DstUserName !in~ (activeUsers)\n| summarize EventCount = count() by DstUserName\n| project-away EventCount\n| extend AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId5'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 5",
                "parentId": "[variables('analyticRuleId5')]",
                "contentId": "[variables('_analyticRulecontentId5')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 6 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName6'),'/',variables('analyticRuleVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "ZscalerZPAConnectionsByNewUser_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId6')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects ZPA connections by new user.",
                "displayName": "Zscaler - ZPA connections by new user",
                "enabled": false,
                "query": "let listUsers =\nZPAEvent \n| where TimeGenerated > ago(14d)\n| where DvcAction == 'open'\n| summarize ListofUsers = make_set(DstUserName) by DstUserName\n| project ListofUsers;\nZPAEvent\n| where DstUserName !in (listUsers)\n| summarize EventCount = count() by DstUserName\n| project-away EventCount\n| extend AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId6'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 6",
                "parentId": "[variables('analyticRuleId6')]",
                "contentId": "[variables('_analyticRulecontentId6')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 7 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName7'),'/',variables('analyticRuleVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "ZscalerZPAConnectionsFromNewCountry_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId7')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects ZPA connections from new country.",
                "displayName": "Zscaler - ZPA connections from new country",
                "enabled": false,
                "query": "let listCountries =\nZPAEvent \n| where TimeGenerated > ago(14d)\n| where DvcAction == 'open'\n| summarize ListofCountries = make_set(SrcGeoCountry) by DstUserName\n| project ListofCountries;\nZPAEvent\n| where isnotempty(SrcGeoCountry)\n| where SrcGeoCountry !in (listCountries)\n| summarize EventCount = count() by DstUserName, SrcGeoCountry\n| project-away EventCount\n| extend AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId7'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 7",
                "parentId": "[variables('analyticRuleId7')]",
                "contentId": "[variables('_analyticRulecontentId7')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 8 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName8'),'/',variables('analyticRuleVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "ZscalerZPAConnectionsFromNewIP_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId8')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects ZPA connections from new IP.",
                "displayName": "Zscaler - ZPA connections from new IP",
                "enabled": false,
                "query": "let listIPs =\nZPAEvent \n| where TimeGenerated > ago(14d)\n| where DvcAction == 'open'\n| summarize ListofIPs = make_set(SrcIpAddr) by DstUserName\n| project ListofIPs;\nZPAEvent\n| where isnotempty(SrcIpAddr)\n| where SrcIpAddr !in (listIPs)\n| summarize EventCount = count() by DstUserName, SrcIpAddr\n| project-away EventCount\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPCustomEntity"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId8'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 8",
                "parentId": "[variables('analyticRuleId8')]",
                "contentId": "[variables('_analyticRulecontentId8')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 9 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName9'),'/',variables('analyticRuleVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "ZscalerZPAConnectionsOutsideOperationalHours_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId9')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects ZAP connections outside operational hours.",
                "displayName": "Zscaler - ZPA connections outside operational hours",
                "enabled": false,
                "query": "ZPAEvent \n| where DvcAction == 'open'\n| where datetime_part(\"Hour\", todatetime(LogTimestamp)) between (datetime_part(\"Hour\", todatetime('19:01:00.7654321')) .. datetime_part(\"Hour\", todatetime('08:01:00.7654321')))\n| summarize count() by DstUserName \n| project DstUserName\n| extend AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId9'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 9",
                "parentId": "[variables('analyticRuleId9')]",
                "contentId": "[variables('_analyticRulecontentId9')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Zscaler Private Access (ZPA) Analytics Rule 10 with template",
        "displayName": "Zscaler Private Access (ZPA) Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName10'),'/',variables('analyticRuleVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "ZscalerZPAUnexpectedSessionDuration_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId10')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Unexpected ZPA session duration.",
                "displayName": "Zscaler - Unexpected ZPA session duration",
                "enabled": false,
                "query": "let dt_lookBack = 24h;\nlet time_treshhold = timespan(08:00:00);\nlet open_sessions =\nZPAEvent\n| where TimeGenerated > ago(dt_lookBack)\n| where DvcAction == 'open'\n| summarize timestampstart = min(TimeGenerated) by DstUserName, SrcIpAddr, NetworkSessionId\n| sort by timestampstart asc;\nlet closed_sessions =\nZPAEvent\n| where TimeGenerated > ago(dt_lookBack)\n| where DvcAction == 'close'\n| summarize timestampend = max(TimeGenerated) by DstUserName, SrcIpAddr, NetworkSessionId\n| sort by timestampend asc;\nopen_sessions\n| join (closed_sessions) on DstUserName, SrcIpAddr, NetworkSessionId\n| extend duration = timestampend - timestampstart\n| where duration > time_treshhold\n| where DstUserName !has \"ZPA LSS\"\n| sort by timestampstart asc\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = DstUserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT24H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "ZscalerPrivateAccess",
                    "dataTypes": [
                      "ZPAEvent"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPCustomEntity"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId10'),'/'))))]",
              "properties": {
                "description": "Zscaler Private Access (ZPA) Analytics Rule 10",
                "parentId": "[variables('analyticRuleId10')]",
                "contentId": "[variables('_analyticRulecontentId10')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscaler Private Access (ZPA)",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Zscaler Private Access (ZPA)",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId1')]",
              "version": "[variables('huntingQueryVersion1')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId2')]",
              "version": "[variables('huntingQueryVersion2')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId3')]",
              "version": "[variables('huntingQueryVersion3')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId4')]",
              "version": "[variables('huntingQueryVersion4')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId5')]",
              "version": "[variables('huntingQueryVersion5')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId6')]",
              "version": "[variables('huntingQueryVersion6')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId7')]",
              "version": "[variables('huntingQueryVersion7')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId8')]",
              "version": "[variables('huntingQueryVersion8')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId9')]",
              "version": "[variables('huntingQueryVersion9')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId10')]",
              "version": "[variables('huntingQueryVersion10')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId3')]",
              "version": "[variables('analyticRuleVersion3')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId4')]",
              "version": "[variables('analyticRuleVersion4')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId5')]",
              "version": "[variables('analyticRuleVersion5')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId6')]",
              "version": "[variables('analyticRuleVersion6')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId7')]",
              "version": "[variables('analyticRuleVersion7')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId8')]",
              "version": "[variables('analyticRuleVersion8')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId9')]",
              "version": "[variables('analyticRuleVersion9')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId10')]",
              "version": "[variables('analyticRuleVersion10')]"
            }
          ]
        },
        "firstPublishDate": "2022-01-31",
        "providers": [
          "Zscaler"
        ],
        "categories": {
          "domains": [
            "Security – Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
