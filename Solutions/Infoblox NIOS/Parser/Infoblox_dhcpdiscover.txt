// Title:           Infoblox parser for type - DHCPDISCOVER
// Author:          Microsoft
// Version:         1.2
// Last Updated:    15 oct 2022
// Comment:         Updated to only parse the MSG (RFC3164) part of the Syslog message. Excluded the Header.  Except for real this time.  Added optional router field.  Fixed parser to account for message formats in this type not previously considered.
//
// DESCRIPTION:
// This parser comprised of function - Infoblox_dhcpdiscover 
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
// Infoblox NIOS logging formats: https://docs.infoblox.com/display/NAG8/Using+a+Syslog+Server
//
// LOG SAMPLES:
// This parser assumes the raw log are formatted as follows:
// 
//      DHCPDISCOVER from b8:99:99:99:b3:6e via 172.16.4.3: unknown network segment
//      DHCPDISCOVER from 80:99:99:99:6d:22 (host.example) via 10.2.3.1 TransID 30af3458 uid 01:80:99:99:99:6d:22
//      DHCPDISCOVER from b8:99:99:99:ec:88 via 10.1.4.2 TransID 4e62bd99 uid 01:b8:99:99:99:ec:88
//      DHCPDISCOVER from 0a:99:99:99:0f:2d via eth2 TransID 4daf9394: network 10.0.0.0/24: no free leases
//
let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);
Syslog
    | where Computer in (datasource) 
    | where ProcessName == "dhcpd" and SyslogMessage startswith_cs "DHCPDISCOVER"
    | extend responseTime = EventTime
    | extend Parser = extract_all(@"^(\w+)\sfrom\s([a-z0-9\:]+)(?:\s\(([^\)]+)\)|)(?:\svia\s([^\s\:]+[^\:\s]))(?:\sTransID\s([^\s\:]+)?)?(?:\suid\s([\S]+))?(?:\:?\snetwork\s([^\s\:]+)?)?(:?\:\s(.*))?", dynamic([1,2,3,4,5,6,7,8,9,10]), SyslogMessage)[0]
    | extend Log_Type = tostring(Parser[0]),
        SrcMacAddr = tostring(Parser[1]), 
        SrcHostName = tostring(Parser[2]), 
        SrcRouterAddress = tostring(Parser[3]), 
        DhcpSessionId = tostring(Parser[4]),
        SrcUserIdType = tostring(Parser[5]), 
        Network = tostring(Parser[6]),
        EventMessage = tostring(Parser[8])
    | project-away SrcHostName,SrcRouterAddress,Parser;
