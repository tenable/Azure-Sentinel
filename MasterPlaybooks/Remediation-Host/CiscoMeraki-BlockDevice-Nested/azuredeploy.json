{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "title": "Cisco Meraki Block Device Client Playbook",
        "description": " When this playbook gets triggered and performs the below actions: 1. Fetches a list of device clients with suspicious activity. 2. For each client in the list, checks if the client is blocked by any network of the organization.  - If client does not exist in network, then  comment is created saying client not found.  - If client exists in network, check policy rule associated with client. If client policy does not exist in the network, then comment is created saying client policy not found. If client policy exists in the network as Blocked, then comment is created saying client blocked using client policy. If client policy exists in the network as Whitelisted, then comment is created saying client allowed using client policy. If client policy exists in the network as group policy, then check the group policy details and comment is created saying client blocked using client policy. If client policy exists in the network as Normal, then client is blocked by playbook.Comment is created saying Client blocked by playbook. - Add incident Comment from all the cases. 3. Responses with status 'Closed' and reason as  - For allowed Client - 'BenignPositive - SuspiciousButExpected'  - For blocked Client - 'TruePositive - SuspiciousActivity'",
        "prerequisites": [
            "1. Deploy the Cisco Meraki Custom Connector before the deployment of this playbook under the same subscription and same resource group. Capture the name of the connector during deployment.",
            "2. Cisco Meraki API Key should be known to establish a connection with Cisco Meraki Custom Connector. [Refer here](https://developer.cisco.com/meraki/api-v1/#!getting-started/authorization)",
            "3. Organization name should be known. [Refer here](https://developer.cisco.com/meraki/api-v1/#!getting-started/find-your-organization-id) 4. Network name should be known.[Refer here](https://developer.cisco.com/meraki/api-v1/#!getting-started/find-your-network-id)\n5. Network Group Policy name should be known. [Refer here](./Images/Scheduling-FromOneDay.png)"
        ],
        "lastUpdateTime": "2022-08-29T10:43:00Z",
        "entities": ["host"],
        "tags": ["Remediation", "Incident management"],
        "support": {
            "tier": "microsoft"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Block-Device-Client-Meraki-Nested",
            "minLength": 3,
            "type": "String",
            "metadata": {
                "description": "Enter name for Block Device Client playbook without spaces"
            }
        },
        "CiscoMerakiConnectorName": {
            "defaultValue": "MerakiConnector",
            "minLength": 3,
            "type": "String",
            "metadata": {
                "description": "Enter name of Cisco Meraki custom connector without spaces"
            }
        },
        "OrganizationName": {
            "minLength": 3,
            "type": "String",
            "metadata": {
                "description": "Enter organization name"
            }
        },
        "NetworkName": {
            "minLength": 3,
            "type": "String",
            "metadata": {
                "description": "Enter network name"
            }
        },
        "GroupPolicy": {
            "minLength": 3,
            "type": "String",
            "metadata": {
                "description": "Enter group policy name"
            }
        }
    },
    "variables": {
        "Meraki_Connection": "[concat('Meraki-', parameters('PlaybookName'))]",
        "AzureSentinel_Connection": "[concat('Azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('Meraki_Connection'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinel_Connection'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "$connections": {
                    "defaultValue": {},
                    "type": "Object"
                },
                "GroupPolicy": {
                    "defaultValue": "Group Policy",
                    "type": "String"
                },
                "NetworkName": {
                    "defaultValue": "Network Name",
                    "type": "String"
                },
                "OrganizationName": {
                    "defaultValue": "Organization Name",
                    "type": "String"
                }
            },
            "triggers": {
                "manual": {
                    "type": "Request",
                    "kind": "Http",
                    "inputs": {
                        "schema": {
                            "properties": {
                                "Hosts": {
                                    "items": {
                                        "properties": {
                                            "Hostname": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Hostname"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "actions": {
                "Check_if_body_present_in_Azure_Sentinel_incident": {
                    "actions": {
                        "Check_if_Organization_exists": {
                            "actions": {
                                "Check_if_Network_exists": {
                                    "actions": {
                                        "Check_if_Group_Policy_exists": {
                                            "actions": {
                                                "Compose_Group_Policy": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@body('Filter_Group_Policy')?[0]"
                                                },
                                                "Create_incident_HTML_table": {
                                                    "runAfter": {
                                                        "For_each_Host": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table",
                                                    "inputs": {
                                                        "columns": [
                                                            {
                                                                "header": "Incident Device Client",
                                                                "value": "@item()?['Host']"
                                                            },
                                                            {
                                                                "header": "Client Id",
                                                                "value": "@item()?['ClientId']"
                                                            },
                                                            {
                                                                "header": "MAC",
                                                                "value": "@item()?['MAC']"
                                                            },
                                                            {
                                                                "header": "Manufacturer",
                                                                "value": "@item()?['Manufacturer']"
                                                            },
                                                            {
                                                                "header": "Client Status",
                                                                "value": "@item()?['ClientStatus']"
                                                            },
                                                            {
                                                                "header": "Previous Policy",
                                                                "value": "@item()?['PreviousPolicy']"
                                                            },
                                                            {
                                                                "header": "Current Policy",
                                                                "value": "@item()?['CurrentPolicy']"
                                                            },
                                                            {
                                                                "header": "Group Policy",
                                                                "value": "@item()?['GroupPolicy']"
                                                            },
                                                            {
                                                                "header": "Action",
                                                                "value": "@item()?['Action']"
                                                            }
                                                        ],
                                                        "format": "HTML",
                                                        "from": "@variables('ConsolidatedAction')"
                                                    }
                                                },
                                                "For_each_Host": {
                                                    "foreach": "@triggerBody()?['Hosts']",
                                                    "actions": {
                                                        "Check_if_host_exists_in_network_clients": {
                                                            "actions": {
                                                                "Check_if_client_policy_exists": {
                                                                    "actions": {
                                                                        "Condition_for_client_policy": {
                                                                            "runAfter": {},
                                                                            "cases": {
                                                                                "Case_Blocked": {
                                                                                    "case": "Blocked",
                                                                                    "actions": {
                                                                                        "Append_to_consolidated_action_variable_for_blocked_client_policy": {
                                                                                            "runAfter": {
                                                                                                "Set_action_variable_for_blocked_client_policy": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "AppendToArrayVariable",
                                                                                            "inputs": {
                                                                                                "name": "ConsolidatedAction",
                                                                                                "value": "@variables('Action')"
                                                                                            },
                                                                                            "description": " To append action json object"
                                                                                        },
                                                                                        "Set_action_variable_for_blocked_client_policy": {
                                                                                            "runAfter": {},
                                                                                            "type": "SetVariable",
                                                                                            "inputs": {
                                                                                                "name": "Action",
                                                                                                "value": {
                                                                                                    "Action": "Blocked using client policy",
                                                                                                    "ClientId": "@{outputs('Compose_network_client')?['id']}",
                                                                                                    "ClientStatus": "@{outputs('Compose_network_client')?['status']}",
                                                                                                    "CurrentPolicy": "@{body('Get_Network_Client_Policy')?['devicePolicy']}",
                                                                                                    "GroupPolicy": "NA",
                                                                                                    "Host": "@{items('For_each_Host')?['Hostname']}",
                                                                                                    "MAC": "@{outputs('Compose_network_client')?['mac']}",
                                                                                                    "Manufacturer": "@{outputs('Compose_network_client')?['manufacturer']}",
                                                                                                    "PreviousPolicy": "@{body('Get_Network_Client_Policy')?['devicePolicy']}"
                                                                                                }
                                                                                            },
                                                                                            "description": " To create action JSON object"
                                                                                        },
                                                                                        "Set_classification_reason_variable_for_blocked_client_policy": {
                                                                                            "runAfter": {
                                                                                                "Append_to_consolidated_action_variable_for_blocked_client_policy": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "SetVariable",
                                                                                            "inputs": {
                                                                                                "name": "ClassificationReason",
                                                                                                "value": "TruePositive - SuspiciousActivity"
                                                                                            },
                                                                                            "description": "To store incident closing reason"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "Case_Group_Policy": {
                                                                                    "case": "Group policy",
                                                                                    "actions": {
                                                                                        "Append_to_consolidated_action_variable_for_group_policy": {
                                                                                            "runAfter": {
                                                                                                "Set_action_variable_for_group_policy": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "AppendToArrayVariable",
                                                                                            "inputs": {
                                                                                                "name": "ConsolidatedAction",
                                                                                                "value": "@variables('Action')"
                                                                                            },
                                                                                            "description": "To append action json object"
                                                                                        },
                                                                                        "Get_Network_Group_Policy": {
                                                                                            "runAfter": {},
                                                                                            "type": "ApiConnection",
                                                                                            "inputs": {
                                                                                                "host": {
                                                                                                    "connection": {
                                                                                                        "name": "@parameters('$connections')['MerakiConnector']['connectionId']"
                                                                                                    }
                                                                                                },
                                                                                                "method": "get",
                                                                                                "path": "/networks/@{encodeURIComponent(outputs('Compose_Network_Id'))}/groupPolicies/@{encodeURIComponent(body('Get_Network_Client_Policy')?['groupPolicyId'])}"
                                                                                            }
                                                                                        },
                                                                                        "Set_action_variable_for_group_policy": {
                                                                                            "runAfter": {
                                                                                                "Get_Network_Group_Policy": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "SetVariable",
                                                                                            "inputs": {
                                                                                                "name": "Action",
                                                                                                "value": {
                                                                                                    "Action": "Blocked using group policy ",
                                                                                                    "ClientId": "@{outputs('Compose_network_client')?['id']}",
                                                                                                    "ClientStatus": "@{outputs('Compose_network_client')?['status']}",
                                                                                                    "CurrentPolicy": "@{body('Get_Network_Client_Policy')?['devicePolicy']}",
                                                                                                    "GroupPolicy": "@{body('Get_Network_Group_Policy')?['name']}",
                                                                                                    "Host": "@{items('For_each_Host')?['Hostname']}",
                                                                                                    "MAC": "@{outputs('Compose_network_client')?['mac']}",
                                                                                                    "Manufacturer": "@{outputs('Compose_network_client')?['manufacturer']}",
                                                                                                    "PreviousPolicy": "@{body('Get_Network_Client_Policy')?['devicePolicy']}"
                                                                                                }
                                                                                            },
                                                                                            "description": "To store action json object"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "Case_Whitelisted": {
                                                                                    "case": "Whitelisted",
                                                                                    "actions": {
                                                                                        "Append_to_consolidated_action_variable_for_allowed_client_policy": {
                                                                                            "runAfter": {
                                                                                                "Set_action_variable_for_allowed_client_policy": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "AppendToArrayVariable",
                                                                                            "inputs": {
                                                                                                "name": "ConsolidatedAction",
                                                                                                "value": "@variables('Action')"
                                                                                            },
                                                                                            "description": " To append action json object"
                                                                                        },
                                                                                        "Set_action_variable_for_allowed_client_policy": {
                                                                                            "runAfter": {},
                                                                                            "type": "SetVariable",
                                                                                            "inputs": {
                                                                                                "name": "Action",
                                                                                                "value": {
                                                                                                    "Action": "Allowed using client policy",
                                                                                                    "ClientId": "@{outputs('Compose_network_client')?['id']}",
                                                                                                    "ClientStatus": "@{outputs('Compose_network_client')?['status']}",
                                                                                                    "CurrentPolicy": "@{body('Get_Network_Client_Policy')?['devicePolicy']}",
                                                                                                    "GroupPolicy": "NA",
                                                                                                    "Host": "@{items('For_each_Host')?['Hostname']}",
                                                                                                    "MAC": "@{outputs('Compose_network_client')?['mac']}",
                                                                                                    "Manufacturer": "@{outputs('Compose_network_client')?['manufacturer']}",
                                                                                                    "PreviousPolicy": "@{body('Get_Network_Client_Policy')?['devicePolicy']}"
                                                                                                }
                                                                                            },
                                                                                            "description": "To create action JSON object"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "default": {
                                                                                "actions": {
                                                                                    "Append_to_consolidated_action_variable_for_normal_client_policy": {
                                                                                        "runAfter": {
                                                                                            "Set_action_variable_for_normal_client_policy": [
                                                                                                "Succeeded"
                                                                                            ]
                                                                                        },
                                                                                        "type": "AppendToArrayVariable",
                                                                                        "inputs": {
                                                                                            "name": "ConsolidatedAction",
                                                                                            "value": "@variables('Action')"
                                                                                        },
                                                                                        "description": " To append action json object"
                                                                                    },
                                                                                    "Set_action_variable_for_normal_client_policy": {
                                                                                        "runAfter": {
                                                                                            "Update_Network_Client_Policy": [
                                                                                                "Succeeded"
                                                                                            ]
                                                                                        },
                                                                                        "type": "SetVariable",
                                                                                        "inputs": {
                                                                                            "name": "Action",
                                                                                            "value": {
                                                                                                "Action": "Blocked using group policy by playbook",
                                                                                                "ClientId": "@{outputs('Compose_network_client')?['id']}",
                                                                                                "ClientStatus": "@{outputs('Compose_network_client')?['status']}",
                                                                                                "CurrentPolicy": "@{body('Update_Network_Client_Policy')?['devicePolicy']}",
                                                                                                "GroupPolicy": "@{parameters('GroupPolicy')}",
                                                                                                "Host": "@{items('For_each_Host')?['HostName']}",
                                                                                                "MAC": "@{outputs('Compose_network_client')?['mac']}",
                                                                                                "Manufacturer": "@{outputs('Compose_network_client')?['manufacturer']}",
                                                                                                "PreviousPolicy": "@{body('Get_Network_Client_Policy')?['devicePolicy']}"
                                                                                            }
                                                                                        },
                                                                                        "description": " To create action JSON object"
                                                                                    },
                                                                                    "Set_classification_reason_variable_for_normal_policy": {
                                                                                        "runAfter": {
                                                                                            "Append_to_consolidated_action_variable_for_normal_client_policy": [
                                                                                                "Succeeded"
                                                                                            ]
                                                                                        },
                                                                                        "type": "SetVariable",
                                                                                        "inputs": {
                                                                                            "name": "ClassificationReason",
                                                                                            "value": "TruePositive - SuspiciousActivity"
                                                                                        },
                                                                                        "description": "To store incident closing reason"
                                                                                    },
                                                                                    "Update_Network_Client_Policy": {
                                                                                        "runAfter": {},
                                                                                        "type": "ApiConnection",
                                                                                        "inputs": {
                                                                                            "body": {
                                                                                                "devicePolicy": "Group policy",
                                                                                                "groupPolicyId": "@{outputs('Compose_Group_Policy')?['groupPolicyId']}"
                                                                                            },
                                                                                            "headers": {
                                                                                                "Content-Type": "application/json"
                                                                                            },
                                                                                            "host": {
                                                                                                "connection": {
                                                                                                    "name": "@parameters('$connections')['MerakiConnector']['connectionId']"
                                                                                                }
                                                                                            },
                                                                                            "method": "put",
                                                                                            "path": "/networks/@{encodeURIComponent(outputs('Compose_Network_Id'))}/clients/@{encodeURIComponent(outputs('Compose_network_client')?['id'])}/policy"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression": "@body('Get_Network_Client_Policy')?['devicePolicy']",
                                                                            "type": "Switch"
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Get_Network_Client_Policy": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "else": {
                                                                        "actions": {
                                                                            "Append_to_consolidated_action_variable_for_unknown_client_policy": {
                                                                                "runAfter": {
                                                                                    "Set_action_variable_for_unknown_client_policy": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "AppendToArrayVariable",
                                                                                "inputs": {
                                                                                    "name": "ConsolidatedAction",
                                                                                    "value": "@variables('Action')"
                                                                                },
                                                                                "description": "To append action json object"
                                                                            },
                                                                            "Set_action_variable_for_unknown_client_policy": {
                                                                                "runAfter": {},
                                                                                "type": "SetVariable",
                                                                                "inputs": {
                                                                                    "name": "Action",
                                                                                    "value": {
                                                                                        "Action": "@{outputs('Get_Network_Client_Policy')?['errors']}",
                                                                                        "ClientId": "@{outputs('Compose_network_client')?['id']}",
                                                                                        "ClientStatus": "@{outputs('Compose_network_client')?['status']}",
                                                                                        "CurrentPolicy": "NA",
                                                                                        "GroupPolicy": "NA",
                                                                                        "Host": "@{items('For_each_Host')?['Hostname']}",
                                                                                        "MAC": "@{outputs('Compose_network_client')?['mac']}",
                                                                                        "Manufacturer": "@{outputs('Compose_network_client')?['manufacturer']}",
                                                                                        "PreviousPolicy": "NA"
                                                                                    }
                                                                                },
                                                                                "description": "To create action JSON object for host"
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@outputs('Get_Network_Client_Policy')?['statusCode']",
                                                                                    200
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If",
                                                                    "description": "Condition to check if network client returns policy details"
                                                                },
                                                                "Compose_network_client": {
                                                                    "runAfter": {},
                                                                    "type": "Compose",
                                                                    "inputs": "@body('Filter_network_client')?[0]",
                                                                    "description": "To create network client item"
                                                                },
                                                                "Get_Network_Client_Policy": {
                                                                    "runAfter": {
                                                                        "Compose_network_client": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['MerakiConnector']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "get",
                                                                        "path": "/networks/@{encodeURIComponent(outputs('Compose_Network_Id'))}/clients/@{encodeURIComponent(outputs('Compose_network_client')?['id'])}/policy"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Filter_network_client": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Append_to_consolidated_action_variable_for_unknow_client": {
                                                                        "runAfter": {
                                                                            "Set_action_variable_for_unknow_client": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "AppendToArrayVariable",
                                                                        "inputs": {
                                                                            "name": "ConsolidatedAction",
                                                                            "value": "@variables('Action')"
                                                                        },
                                                                        "description": "To append action object"
                                                                    },
                                                                    "Set_action_variable_for_unknow_client": {
                                                                        "runAfter": {},
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "Action",
                                                                            "value": {
                                                                                "Action": "Client Not Found",
                                                                                "ClientId": "NA",
                                                                                "ClientStatus": "NA",
                                                                                "CurrentPolicy": "NA",
                                                                                "GroupPolicy": "NA",
                                                                                "Host": "@{items('For_each_Host')?['Hostname']}",
                                                                                "MAC": "NA",
                                                                                "Manufacturer": "NA",
                                                                                "PreviousPolicy": "NA"
                                                                            }
                                                                        },
                                                                        "description": "To create action JSON object"
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "greater": [
                                                                            "@length(body('Filter_network_client'))",
                                                                            0
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If",
                                                            "description": "Condition to check if filter network client returns client object"
                                                        },
                                                        "Filter_network_client": {
                                                            "runAfter": {},
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Get_Network_Clients')",
                                                                "where": "@contains(item()?['mac'], items('For_each_Host')?['Hostname'])"
                                                            },
                                                            "description": "To filter client detail from get network clients action based on host"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_Network_Clients": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach",
                                                    "description": "For each loop for host from Azure Sentinel",
                                                    "runtimeConfiguration": {
                                                        "concurrency": {
                                                            "repetitions": 1
                                                        }
                                                    }
                                                },
                                                "Get_Network_Clients": {
                                                    "runAfter": {
                                                        "Compose_Group_Policy": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['MerakiConnector']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/networks/@{encodeURIComponent(outputs('Compose_Network_Id'))}/clients",
                                                        "queries": {
                                                            "perPage": 100
                                                        }
                                                    }
                                                },
                                                "Response": {
                                                    "runAfter": {
                                                        "Create_incident_HTML_table": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Response",
                                                    "kind": "Http",
                                                    "inputs": {
                                                        "body": "@{outputs('Cisco_Meraki_Logo')} Cisco Meraki Block Device Client Playbook\n\nBelow Incident Device Client(s) are found in Azure Sentinel have the following status in Network - @{parameters('NetworkName')} for Organization - @{parameters('OrganizationName')}\n@{body('Create_incident_HTML_table')}",
                                                        "statusCode": 200
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_Group_Policy": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Group_Policy_not_found": {
                                                        "runAfter": {},
                                                        "type": "Response",
                                                        "kind": "Http",
                                                        "inputs": {
                                                            "body": "Group Policy Not Found in Network",
                                                            "statusCode": 500
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greater": [
                                                            "@length(body('Filter_Group_Policy'))",
                                                            0
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If",
                                            "description": "Condition to check if filter group policy returns policy object"
                                        },
                                        "Compose_Network_Id": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@body('Filter_Network')?[0]?['id']",
                                            "description": "To store network id from filter network result"
                                        },
                                        "Filter_Group_Policy": {
                                            "runAfter": {
                                                "Get_Network_Group_Policies": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Get_Network_Group_Policies')",
                                                "where": "@equals(item()?['name'], parameters('GroupPolicy'))"
                                            }
                                        },
                                        "Get_Network_Group_Policies": {
                                            "runAfter": {
                                                "Compose_Network_Id": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['MerakiConnector']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/networks/@{encodeURIComponent(outputs('Compose_Network_Id'))}/groupPolicies"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Filter_Network": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Network_Not_Found": {
                                                "runAfter": {},
                                                "type": "Response",
                                                "kind": "Http",
                                                "inputs": {
                                                    "body": "Network Not Found",
                                                    "statusCode": 500
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Filter_Network'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "description": "Condition to check if filter network returns network object"
                                },
                                "Filter_Network": {
                                    "runAfter": {
                                        "Get_Networks": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Get_Networks')",
                                        "where": "@equals(item()?['name'], parameters('NetworkName'))"
                                    },
                                    "description": "To filter network detail from get networks action based on network name"
                                },
                                "Get_Networks": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['MerakiConnector']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/organizations/@{encodeURIComponent(body('Filter_Organization')?[0]?['id'])}/networks",
                                        "queries": {
                                            "perPage": 1000
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_Organization": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Organization_Not_Found": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": "Organization Not Found",
                                            "statusCode": 500
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Filter_Organization'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "Condition to check if filter organization returns organization object"
                        },
                        "Filter_Organization": {
                            "runAfter": {
                                "Get_Organizations": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Get_Organizations')",
                                "where": "@equals(item()?['name'], parameters('OrganizationName'))"
                            },
                            "description": "To filter organization detail from get organizations action based on organization name"
                        },
                        "Get_Organizations": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['MerakiConnector']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/organizations"
                            }
                        }
                    },
                    "runAfter": {
                        "Cisco_Meraki_Logo": [
                            "Succeeded"
                        ]
                    },
                    "else": {
                        "actions": {
                            "Response_Hosts_Not_Found": {
                                "runAfter": {},
                                "type": "Response",
                                "kind": "Http",
                                "inputs": {
                                    "body": "Hosts Not Found in Azure Sentinel Incident",
                                    "statusCode": 500
                                }
                            }
                        }
                    },
                    "expression": {
                        "and": [
                            {
                                "greater": [
                                    "@length(triggerBody()?['Hosts'])",
                                    0
                                ]
                            }
                        ]
                    },
                    "type": "If",
                    "description": "Condition to check if body present in the sentinel incident"
                },
                "Cisco_Meraki_Logo": {
                    "runAfter": {
                        "Initialize_classification_reason_variable": [
                            "Succeeded"
                        ]
                    },
                    "type": "Compose",
                    "inputs": "<img src=\"https://www.kellerschroeder.com/wp-content/uploads/2017/05/Cisco-Meraki.jpg\" alt=\"CiscoMerakiLogo\" width=\"32\" height=\"32\">",
                    "description": "To add logo for incident "
                },
                "Initialize_action_object_variable": {
                    "runAfter": {
                        "Initialize_variable_Hosts": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "Action",
                                "type": "object"
                            }
                        ]
                    },
                    "description": "To create JSON action object"
                },
                "Initialize_classification_reason_variable": {
                    "runAfter": {
                        "Initialize_consolidated_action_array_variable": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "ClassificationReason",
                                "type": "string",
                                "value": "BenignPositive - SuspiciousButExpected"
                            }
                        ]
                    },
                    "description": "To store incident closing reason"
                },
                "Initialize_consolidated_action_array_variable": {
                    "runAfter": {
                        "Initialize_action_object_variable": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "ConsolidatedAction",
                                "type": "array"
                            }
                        ]
                    },
                    "description": "To create consolidated array variable for HTML incident table"
                },
                "Initialize_variable_Hosts": {
                    "runAfter": {},
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "Hosts",
                                "type": "boolean",
                                "value": "@triggerBody()?['Hosts']"
                            }
                        ]
                    }
                }
            },
            "outputs": {}
        },
                "parameters": {
                    "$connections": {
                        "value": {
                            "MerakiConnector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Meraki_Connection'))]",
                                "connectionName": "[variables('Meraki_Connection')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/customApis/',parameters('CiscoMerakiConnectorName'))]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinel_Connection'))]",
                                "connectionName": "[variables('AzureSentinel_Connection')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Meraki_Connection')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/customApis/',parameters('CiscoMerakiConnectorName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinel_Connection')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        }
    ]
}