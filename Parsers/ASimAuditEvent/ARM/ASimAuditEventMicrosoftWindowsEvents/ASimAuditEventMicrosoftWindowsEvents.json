{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimAuditEventMicrosoftWindowsEvents",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Audit Event ASIM parser for Microsoft Windows Events audit events",
            "category": "ASIM",
            "FunctionAlias": "ASimAuditEventMicrosoftWindowsEvents",
            "query": "let parser = (disabled:bool = false) {\n  union \n  (\n      union \n      (\n          SecurityEvent\n          | where not(disabled)\n          | project EventID, EventData, _ResourceId, TimeGenerated, Computer, Type\n          | where EventID == 1102\n      ),\n      (\n          Event\n          | where not(disabled)\n          | project EventID, EventData, _ResourceId, TimeGenerated, Computer, Type\n          | where EventID == 1102\n      )\n      | parse-kv EventData as \n          (\n              SubjectUserSid:string,\n              SubjectUserName:string,\n              SubjectDomainName:string,\n              SubjectLogonId:string\n          ) \n          with (regex=@'<(\\w+)>([^<]*)<')\n      | project-away EventData\n  ),\n  (\n      WindowsEvent \n      | where not(disabled)\n      | project EventID, EventData, _ResourceId, TimeGenerated, Computer, Type\n      | where EventID == 1102\n      | extend\n          SubjectUserSid = tostring(EventData.SubjectUserSid),\n          SubjectUserName = tostring(EventData.SubjectUserName),\n          SubjectDomainName = tostring(EventData.SubjectDomainName),\n          SubjectLogonId = tostring(EventData.SubjectLogonId)\n      | project-away EventData\n  )\n  | project-rename\n      ActorUserId = SubjectUserSid,\n      DvcHostname = Computer,\n      ActorSessionId = SubjectLogonId,\n      DvcId = _ResourceId\n  | extend\n      EventCount = int(1),\n      EventType = \"Delete\",\n      Operation = \"Delete Logs\",\n      Object = \"Logs\",\n      EventResult = \"Success\",\n      EventStartTime = TimeGenerated, \n      EventEndTime= TimeGenerated,\n      EventProduct = 'Windows',\n      EventVendor = 'Microsoft',\n      EventSchemaVersion = '0.1.0',\n      EventSchema = 'AuditEvent',\n      ActorUserIdType = 'SID',\n      ActorUsername = iff (SubjectDomainName == \"\", SubjectUserName, strcat (SubjectDomainName, '\\\\', SubjectUserName)),\n      ActorUsernameType = iff (SubjectDomainName == \"\", 'Simple', 'Windows'),\n      DvcIdType = iff (DvcId == \"\", \"\", \"AzureResourceID\"),\n      EventOriginalType = tostring(EventID)\n  // Aliases\n  | extend \n      User=ActorUsername,\n      ActorUserSid = ActorUserId,\n      Dvc = DvcHostname\n  | project-away Subject*, EventID\n};\nparser (disabled=disabled)",
            "version": 1,
            "functionParameters": "disabled:bool=False"
          }
        }
      ]
    }
  ]
}