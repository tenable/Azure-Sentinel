{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimProcessCreateMicrosoftSysmon",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Process Create Event ASIM parser for Sysmon",
            "category": "ASIM",
            "FunctionAlias": "ASimProcessCreateMicrosoftSysmon",
            "query": "let parser = (disabled:bool = false) {\n  // this is the parser for sysmon from Event table\n  let parser_Event = (disabled:bool=false) {\n  Event \n    | where not(disabled)\n    | where Source == \"Microsoft-Windows-Sysmon\" and EventID==1\n    | parse-kv EventData as (\n          ProcessGuid:string, \n          ProcessId:string,\n          Image:string,\n          FileVersion:string,\n          Description:string,\n          Product:string,\n          Company:string,\n          OriginalFileName:string,\n          CommandLine:string,\n          CurrentDirectory:string,\n          User:string,\n          LogonGuid:string, \n          LogonId:string,\n          IntegrityLevel:string,\n          Hashes:string,\n          ParentProcessGuid:string, \n          ParentProcessId:string,\n          ParentImage:string,\n          ParentCommandLine:string,\n          ParentUser:string\n        ) \n        with (regex=@'<Data Name=\"(\\w+)\">{?([^>]*)}?</Data>')\n      | parse-kv Hashes as (MD5:string, SHA1:string, SHA256:string, IMPHASH:string) with (quote='\"')\n      | extend\n          Hash = coalesce (SHA256, SHA1, IMPHASH, MD5, \"\")\n      | extend\n          HashType = tostring(dynamic([\"SHA256\", \"SHA1\", \"IMPHASH\", \"MD5\"])[array_index_of(pack_array(SHA256, SHA1, IMPHASH, MD5),Hash)])\n      | project-rename\n          TargetProcessMD5 = MD5,\n          TargetProcessSHA1 = SHA1,\n          TargetProcessSHA256 = SHA256,\n          TargetProcessIMPHASH = IMPHASH\n      | project-away Hashes\n      | extend         \n          TargetUsername = User,\n          TargetProcessCommandLine = CommandLine\n      | project-rename \n          DvcHostname = Computer,\n          TargetUserSessionGuid = LogonGuid,\n          TargetProcessId = ProcessId,\n          TargetUserSessionId = LogonId,  \n          TargetProcessGuid = ProcessGuid,\n          TargetProcessName = Image,\n          TargetProcessFilename = OriginalFileName,\n          TargetProcessCurrentDirectory = CurrentDirectory,\n          TargetProcessIntegrityLevel = IntegrityLevel,    \n          TargetProcessFileCompany = Company,\n          TargetProcessFileDescription = Description,\n          TargetProcessFileVersion = FileVersion,\n          TargetProcessFileProduct = Product,   \n          ActingProcessId = ParentProcessId,\n          ActingProcessGuid = ParentProcessGuid,                          \n          ActingProcessCommandLine = ParentCommandLine,\n          ActingProcessName = ParentImage,\n          ActorUsername = ParentUser\n      | extend \n          TargetUsernameType = iff(isnotempty(TargetUsername),'Windows', ''),\n          ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),\n          EventProduct = \"Sysmon\",\n          // aliases\n          Process = TargetProcessName,\n          Dvc = DvcHostname\n      | project-away EventData, ParameterXml, AzureDeploymentID, EventCategory, EventID, EventLevel, EventLevelName, TenantId, EventLog, MG, ManagementGroupName, Message, Role, SourceSystem, Source, UserName, RenderedDescription\n  };\n  // this is the parser for sysmon from WindowsEvent table\n  let parser_WindowsEvent=(disabled:bool=false){\n      WindowsEvent\n      | where not(disabled)\n      | where Provider == \"Microsoft-Windows-Sysmon\" and EventID==1\n      | parse-kv tostring(EventData.Hashes) as (MD5:string, SHA1:string, SHA256:string, IMPHASH:string) with (quote='\"')\n      | extend\n          Hash = coalesce (SHA256, SHA1, IMPHASH, MD5, \"\")\n      | extend\n          HashType = tostring(dynamic([\"SHA256\", \"SHA1\", \"IMPHASH\", \"MD5\"])[array_index_of(pack_array(SHA256, SHA1, IMPHASH, MD5),Hash)])\n      | project-rename\n          TargetProcessMD5 = MD5,\n          TargetProcessSHA1 = SHA1,\n          TargetProcessSHA256 = SHA256,\n          TargetProcessIMPHASH = IMPHASH\n      | extend \n              EventOriginalType = tostring(EventID),\n              TargetUserSessionId = tostring(EventData.LogonId),           \n              TargetUsername = tostring(EventData.User),\n              TargetProcessCommandLine = tostring(EventData.CommandLine),\n              TargetProcessCurrentDirectory = tostring(EventData.CurrentDirectory),\n              TargetUserSessionGuid = extract ('^{(.*)}$', 1, tostring(EventData.LogonGuid), typeof(string)),\n              TargetProcessId = tostring(EventData.ProcessId),\n              TargetProcessGuid = extract ('^{(.*)}$', 1, tostring(EventData.ProcessGuid), typeof(string)),\n              TargetProcessName = tostring(EventData.Image),\n              TargetProcessFilename = tostring(EventData.OriginalFileName),\n              TargetProcessIntegrityLevel = tostring(EventData.IntegrityLevel),\n              TargetProcessFileCompany = tostring(EventData.Company),\n              TargetProcessFileDescription = tostring(EventData.Description),\n              TargetProcessFileVersion = tostring(EventData.FileVersion),\n              TargetProcessFileProduct = tostring(EventData.Product),\n              ActingProcessId = tostring(EventData.ParentProcessId),  \n              ActingProcessGuid = extract ('^{(.*)}$', 1, tostring(EventData.ParentProcessGuid), typeof(string)),                 \n              ActingProcessCommandLine = tostring(EventData.ParentCommandLine),\n              ActingProcessName = tostring(EventData.ParentImage),\n              ActorUsername = tostring(EventData.ParentUser)\n      | extend \n          TargetUsernameType = iff(isnotempty(TargetUsername),'Windows', ''),\n          ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),\n          EventProduct = \"Security Events\"\n      | project-rename\n          DvcHostname = Computer,\n          EventOriginalUid = EventOriginId\n      | extend // aliases \n          Dvc = DvcHostname,\n          User = TargetUsername,\n          CommandLine = TargetProcessCommandLine,\n          Process = TargetProcessName\n      | project-away EventData, Provider, ManagementGroupName, RawEventData, SourceSystem, Task, TenantId,  EventID, Data, Channel, EventLevel, EventLevelName\n      }; \n      union isfuzzy=true parser_Event(disabled=disabled), parser_WindowsEvent(disabled=disabled)\n      | extend \n          EventType = \"ProcessCreated\",\n          EventOriginalType = \"1\",\n          EventStartTime = todatetime(TimeGenerated),\n          EventEndTime = todatetime(TimeGenerated),\n          EventCount = int(1),\n          EventVendor = \"Microsoft\",\n          EventSchemaVersion = \"0.1.0\",\n          EventSchema = 'ProcessEvent',\n          EventProduct = \"Sysmon\",\n          EventResult = 'Success',\n          DvcOs = \"Windows\",\n          TargetUsernameType = \"Windows\",\n          ActorUsernameType = \"Windows\"\n  };\n  parser (disabled=disabled)",
            "version": 1,
            "functionParameters": "disabled:bool=False"
          }
        }
      ]
    }
  ]
}