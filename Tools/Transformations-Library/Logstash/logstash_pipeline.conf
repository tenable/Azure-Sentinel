input {
    beats {
        port => "5044"
        type => syslog
    }

}
filter {
        grok {
                match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:Computer} %{DATA:syslog_program}(?:\[%{POSINT:ProcessID}\])?: %{GREEDYDATA:SyslogMessage}"}
        }
        mutate {
                add_field => {"timeDate" => "%{@timestamp}"}
                convert => {
                        "ProcessID" => "integer"
                 }
        }
        if "Started Session" in [SyslogMessage]{
          aggregate {
            task_id => "%{Computer}"
            code => "
                     map['logins'] ||= 0
                     map['logins'] += 1
                     map['Computer'] = event.get('Computer')
                     event.cancel()
            "
            push_map_as_event_on_timeout => true
            timeout => 15
            timeout_code => "
                event.set('timeDate', Time.now.utc)
                event.set('SyslogMessage', 'Multiple login messages detected for user')
            "
          }
        }
}
output {
    microsoft-logstash-output-azure-loganalytics-v2 {
      client_app_Id => "<app_registration_id>"
      client_app_secret => "<app_registration_secret>"
      tenant_id => "<azure_ad_tenant_id"
      data_collection_endpoint => "https://<your_dce_endpoint_url>"
      dcr_immutable_id => "<dcr_immutable_id>"
      dcr_stream_name => "<name of the data stream in your ingestion DCR>"
    }
}

